2023-12-03 23:27:34,526:ERROR:
'ydata_profiling' is a soft dependency and not included in the pycaret installation. Please run: `pip install ydata-profiling` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-12-03 23:38:05,841:ERROR:
'ydata_profiling' is a soft dependency and not included in the pycaret installation. Please run: `pip install ydata-profiling` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-12-03 23:38:23,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\numba\core\decorators.py:262: NumbaDeprecationWarning: [1mnumba.generated_jit is deprecated. Please see the documentation at: https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-generated-jit for more information and advice on a suitable replacement.[0m
  warnings.warn(msg, NumbaDeprecationWarning)

2023-12-03 23:38:23,093:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\visions\backends\shared\nan_handling.py:51: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def hasna(x: np.ndarray) -> bool:

2023-12-03 23:38:26,278:ERROR:
'ydata_profiling' is a soft dependency and not included in the pycaret installation. Please run: `pip install ydata-profiling` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-12-03 23:40:46,169:ERROR:
'ydata_profiling' is a soft dependency and not included in the pycaret installation. Please run: `pip install ydata-profiling` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-12-03 23:42:50,581:ERROR:
'ydata_profiling' is a soft dependency and not included in the pycaret installation. Please run: `pip install ydata-profiling` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-12-03 23:43:59,555:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_12152\3661803333.py:4: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  import pandas_profiling

2023-12-03 23:44:02,688:ERROR:
'ydata_profiling' is a soft dependency and not included in the pycaret installation. Please run: `pip install ydata-profiling` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-12-03 23:44:55,563:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_10064\3661803333.py:4: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  import pandas_profiling

2023-12-03 23:45:00,041:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-03 23:57:57,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 23:57:57,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 23:57:57,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 23:57:57,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-04 20:01:18,164:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-04 20:03:11,079:INFO:PyCaret ClassificationExperiment
2023-12-04 20:03:11,080:INFO:Logging name: clf-default-name
2023-12-04 20:03:11,080:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:03:11,080:INFO:version 3.2.0
2023-12-04 20:03:11,080:INFO:Initializing setup()
2023-12-04 20:03:11,080:INFO:self.USI: b831
2023-12-04 20:03:11,080:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:03:11,081:INFO:Checking environment
2023-12-04 20:03:11,081:INFO:python_version: 3.9.18
2023-12-04 20:03:11,081:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:03:11,081:INFO:machine: AMD64
2023-12-04 20:03:11,082:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:03:11,082:INFO:Memory: svmem(total=7955767296, available=1760890880, percent=77.9, used=6194876416, free=1760890880)
2023-12-04 20:03:11,082:INFO:Physical Core: 2
2023-12-04 20:03:11,082:INFO:Logical Core: 4
2023-12-04 20:03:11,082:INFO:Checking libraries
2023-12-04 20:03:11,082:INFO:System:
2023-12-04 20:03:11,082:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:03:11,083:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:03:11,083:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:03:11,083:INFO:PyCaret required dependencies:
2023-12-04 20:03:11,237:INFO:                 pip: 23.3.1
2023-12-04 20:03:11,237:INFO:          setuptools: 68.0.0
2023-12-04 20:03:11,237:INFO:             pycaret: 3.2.0
2023-12-04 20:03:11,237:INFO:             IPython: 8.15.0
2023-12-04 20:03:11,237:INFO:          ipywidgets: 7.6.5
2023-12-04 20:03:11,237:INFO:                tqdm: 4.64.1
2023-12-04 20:03:11,237:INFO:               numpy: 1.25.2
2023-12-04 20:03:11,238:INFO:              pandas: 1.5.3
2023-12-04 20:03:11,238:INFO:              jinja2: 3.1.2
2023-12-04 20:03:11,238:INFO:               scipy: 1.9.3
2023-12-04 20:03:11,238:INFO:              joblib: 1.2.0
2023-12-04 20:03:11,238:INFO:             sklearn: 1.2.2
2023-12-04 20:03:11,238:INFO:                pyod: 1.1.2
2023-12-04 20:03:11,238:INFO:            imblearn: 0.11.0
2023-12-04 20:03:11,238:INFO:   category_encoders: 2.6.3
2023-12-04 20:03:11,238:INFO:            lightgbm: 4.1.0
2023-12-04 20:03:11,238:INFO:               numba: 0.58.1
2023-12-04 20:03:11,238:INFO:            requests: 2.28.1
2023-12-04 20:03:11,240:INFO:          matplotlib: 3.6.2
2023-12-04 20:03:11,240:INFO:          scikitplot: 0.3.7
2023-12-04 20:03:11,240:INFO:         yellowbrick: 1.5
2023-12-04 20:03:11,240:INFO:              plotly: 5.18.0
2023-12-04 20:03:11,240:INFO:    plotly-resampler: Not installed
2023-12-04 20:03:11,240:INFO:             kaleido: 0.2.1
2023-12-04 20:03:11,240:INFO:           schemdraw: 0.15
2023-12-04 20:03:11,241:INFO:         statsmodels: 0.14.0
2023-12-04 20:03:11,241:INFO:              sktime: 0.21.1
2023-12-04 20:03:11,241:INFO:               tbats: 1.1.3
2023-12-04 20:03:11,241:INFO:            pmdarima: 2.0.4
2023-12-04 20:03:11,241:INFO:              psutil: 5.9.0
2023-12-04 20:03:11,241:INFO:          markupsafe: 2.1.1
2023-12-04 20:03:11,241:INFO:             pickle5: Not installed
2023-12-04 20:03:11,241:INFO:         cloudpickle: 3.0.0
2023-12-04 20:03:11,241:INFO:         deprecation: 2.1.0
2023-12-04 20:03:11,241:INFO:              xxhash: 3.4.1
2023-12-04 20:03:11,241:INFO:           wurlitzer: Not installed
2023-12-04 20:03:11,241:INFO:PyCaret optional dependencies:
2023-12-04 20:03:11,271:INFO:                shap: 0.43.0
2023-12-04 20:03:11,271:INFO:           interpret: 0.4.4
2023-12-04 20:03:11,278:INFO:                umap: 0.5.5
2023-12-04 20:03:11,278:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:03:11,278:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:03:11,278:INFO:             autoviz: Not installed
2023-12-04 20:03:11,278:INFO:           fairlearn: 0.7.0
2023-12-04 20:03:11,279:INFO:          deepchecks: Not installed
2023-12-04 20:03:11,279:INFO:             xgboost: Not installed
2023-12-04 20:03:11,279:INFO:            catboost: Not installed
2023-12-04 20:03:11,279:INFO:              kmodes: Not installed
2023-12-04 20:03:11,279:INFO:             mlxtend: Not installed
2023-12-04 20:03:11,279:INFO:       statsforecast: Not installed
2023-12-04 20:03:11,279:INFO:        tune_sklearn: Not installed
2023-12-04 20:03:11,279:INFO:                 ray: Not installed
2023-12-04 20:03:11,279:INFO:            hyperopt: Not installed
2023-12-04 20:03:11,279:INFO:              optuna: Not installed
2023-12-04 20:03:11,279:INFO:               skopt: Not installed
2023-12-04 20:03:11,279:INFO:              mlflow: Not installed
2023-12-04 20:03:11,279:INFO:              gradio: Not installed
2023-12-04 20:03:11,279:INFO:             fastapi: Not installed
2023-12-04 20:03:11,279:INFO:             uvicorn: Not installed
2023-12-04 20:03:11,279:INFO:              m2cgen: Not installed
2023-12-04 20:03:11,279:INFO:           evidently: Not installed
2023-12-04 20:03:11,279:INFO:               fugue: Not installed
2023-12-04 20:03:11,279:INFO:           streamlit: 1.26.0
2023-12-04 20:03:11,279:INFO:             prophet: Not installed
2023-12-04 20:03:11,279:INFO:None
2023-12-04 20:03:11,279:INFO:Set up data.
2023-12-04 20:03:11,362:INFO:Set up folding strategy.
2023-12-04 20:03:11,362:INFO:Set up train/test split.
2023-12-04 20:03:11,417:INFO:Set up index.
2023-12-04 20:03:11,419:INFO:Assigning column types.
2023-12-04 20:03:11,428:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:03:11,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:03:11,541:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:03:11,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:11,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:11,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:03:11,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:03:11,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:11,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:11,888:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:03:11,975:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:03:12,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,104:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:03:12,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,165:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:03:12,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:12,709:INFO:Preparing preprocessing pipeline...
2023-12-04 20:03:12,716:INFO:Set up label encoding.
2023-12-04 20:03:12,717:INFO:Set up simple imputation.
2023-12-04 20:03:12,730:INFO:Set up encoding of ordinal features.
2023-12-04 20:03:12,740:INFO:Set up encoding of categorical features.
2023-12-04 20:03:12,744:INFO:Set up column transformation.
2023-12-04 20:03:12,744:INFO:Set up feature normalization.
2023-12-04 20:03:12,748:INFO:Set up column name cleaning.
2023-12-04 20:03:17,723:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:03:17,788:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:03:17,788:INFO:Creating final display dataframe.
2023-12-04 20:03:20,764:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method        yeo-johnson
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               b831
2023-12-04 20:03:20,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:20,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:21,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:21,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:03:21,187:INFO:setup() successfully completed in 10.17s...............
2023-12-04 20:03:21,187:INFO:Initializing create_model()
2023-12-04 20:03:21,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A154A47C0>, estimator=rf, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:03:21,187:INFO:Checking exceptions
2023-12-04 20:03:21,316:INFO:Importing libraries
2023-12-04 20:03:21,316:INFO:Copying training dataset
2023-12-04 20:03:21,359:INFO:Defining folds
2023-12-04 20:03:21,359:INFO:Declaring metric variables
2023-12-04 20:03:21,395:INFO:Importing untrained model
2023-12-04 20:03:21,404:INFO:Random Forest Classifier Imported successfully
2023-12-04 20:03:21,427:INFO:Starting cross validation
2023-12-04 20:03:21,452:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:03:52,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,358:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,521:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,581:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,623:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,659:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,697:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,759:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:52,971:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:53,239:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:53,349:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:03:53,463:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:04:01,349:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:04:01,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:04:01,514:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:04:01,665:INFO:Calculating mean and std
2023-12-04 20:04:01,667:INFO:Creating metrics dataframe
2023-12-04 20:04:01,701:INFO:Finalizing model
2023-12-04 20:04:12,440:INFO:Uploading results into container
2023-12-04 20:04:12,448:INFO:Uploading model into container now
2023-12-04 20:04:12,483:INFO:_master_model_container: 1
2023-12-04 20:04:12,483:INFO:_display_container: 2
2023-12-04 20:04:12,483:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 20:04:12,483:INFO:create_model() successfully completed......................................
2023-12-04 20:04:13,331:INFO:PyCaret ClassificationExperiment
2023-12-04 20:04:13,332:INFO:Logging name: clf-default-name
2023-12-04 20:04:13,332:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:04:13,332:INFO:version 3.2.0
2023-12-04 20:04:13,332:INFO:Initializing setup()
2023-12-04 20:04:13,332:INFO:self.USI: 24e5
2023-12-04 20:04:13,332:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:04:13,332:INFO:Checking environment
2023-12-04 20:04:13,337:INFO:python_version: 3.9.18
2023-12-04 20:04:13,338:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:04:13,338:INFO:machine: AMD64
2023-12-04 20:04:13,338:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:04:13,339:INFO:Memory: svmem(total=7955767296, available=1465614336, percent=81.6, used=6490152960, free=1465614336)
2023-12-04 20:04:13,339:INFO:Physical Core: 2
2023-12-04 20:04:13,339:INFO:Logical Core: 4
2023-12-04 20:04:13,339:INFO:Checking libraries
2023-12-04 20:04:13,339:INFO:System:
2023-12-04 20:04:13,340:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:04:13,340:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:04:13,340:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:04:13,340:INFO:PyCaret required dependencies:
2023-12-04 20:04:13,340:INFO:                 pip: 23.3.1
2023-12-04 20:04:13,340:INFO:          setuptools: 68.0.0
2023-12-04 20:04:13,342:INFO:             pycaret: 3.2.0
2023-12-04 20:04:13,342:INFO:             IPython: 8.15.0
2023-12-04 20:04:13,342:INFO:          ipywidgets: 7.6.5
2023-12-04 20:04:13,342:INFO:                tqdm: 4.64.1
2023-12-04 20:04:13,348:INFO:               numpy: 1.25.2
2023-12-04 20:04:13,348:INFO:              pandas: 1.5.3
2023-12-04 20:04:13,349:INFO:              jinja2: 3.1.2
2023-12-04 20:04:13,349:INFO:               scipy: 1.9.3
2023-12-04 20:04:13,349:INFO:              joblib: 1.2.0
2023-12-04 20:04:13,349:INFO:             sklearn: 1.2.2
2023-12-04 20:04:13,349:INFO:                pyod: 1.1.2
2023-12-04 20:04:13,349:INFO:            imblearn: 0.11.0
2023-12-04 20:04:13,349:INFO:   category_encoders: 2.6.3
2023-12-04 20:04:13,356:INFO:            lightgbm: 4.1.0
2023-12-04 20:04:13,356:INFO:               numba: 0.58.1
2023-12-04 20:04:13,356:INFO:            requests: 2.28.1
2023-12-04 20:04:13,356:INFO:          matplotlib: 3.6.2
2023-12-04 20:04:13,357:INFO:          scikitplot: 0.3.7
2023-12-04 20:04:13,357:INFO:         yellowbrick: 1.5
2023-12-04 20:04:13,358:INFO:              plotly: 5.18.0
2023-12-04 20:04:13,358:INFO:    plotly-resampler: Not installed
2023-12-04 20:04:13,358:INFO:             kaleido: 0.2.1
2023-12-04 20:04:13,373:INFO:           schemdraw: 0.15
2023-12-04 20:04:13,374:INFO:         statsmodels: 0.14.0
2023-12-04 20:04:13,374:INFO:              sktime: 0.21.1
2023-12-04 20:04:13,374:INFO:               tbats: 1.1.3
2023-12-04 20:04:13,374:INFO:            pmdarima: 2.0.4
2023-12-04 20:04:13,375:INFO:              psutil: 5.9.0
2023-12-04 20:04:13,376:INFO:          markupsafe: 2.1.1
2023-12-04 20:04:13,377:INFO:             pickle5: Not installed
2023-12-04 20:04:13,377:INFO:         cloudpickle: 3.0.0
2023-12-04 20:04:13,377:INFO:         deprecation: 2.1.0
2023-12-04 20:04:13,378:INFO:              xxhash: 3.4.1
2023-12-04 20:04:13,378:INFO:           wurlitzer: Not installed
2023-12-04 20:04:13,378:INFO:PyCaret optional dependencies:
2023-12-04 20:04:13,378:INFO:                shap: 0.43.0
2023-12-04 20:04:13,378:INFO:           interpret: 0.4.4
2023-12-04 20:04:13,378:INFO:                umap: 0.5.5
2023-12-04 20:04:13,378:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:04:13,378:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:04:13,380:INFO:             autoviz: Not installed
2023-12-04 20:04:13,380:INFO:           fairlearn: 0.7.0
2023-12-04 20:04:13,380:INFO:          deepchecks: Not installed
2023-12-04 20:04:13,380:INFO:             xgboost: Not installed
2023-12-04 20:04:13,380:INFO:            catboost: Not installed
2023-12-04 20:04:13,380:INFO:              kmodes: Not installed
2023-12-04 20:04:13,380:INFO:             mlxtend: Not installed
2023-12-04 20:04:13,380:INFO:       statsforecast: Not installed
2023-12-04 20:04:13,380:INFO:        tune_sklearn: Not installed
2023-12-04 20:04:13,380:INFO:                 ray: Not installed
2023-12-04 20:04:13,380:INFO:            hyperopt: Not installed
2023-12-04 20:04:13,380:INFO:              optuna: Not installed
2023-12-04 20:04:13,380:INFO:               skopt: Not installed
2023-12-04 20:04:13,380:INFO:              mlflow: Not installed
2023-12-04 20:04:13,380:INFO:              gradio: Not installed
2023-12-04 20:04:13,380:INFO:             fastapi: Not installed
2023-12-04 20:04:13,383:INFO:             uvicorn: Not installed
2023-12-04 20:04:13,384:INFO:              m2cgen: Not installed
2023-12-04 20:04:13,384:INFO:           evidently: Not installed
2023-12-04 20:04:13,384:INFO:               fugue: Not installed
2023-12-04 20:04:13,384:INFO:           streamlit: 1.26.0
2023-12-04 20:04:13,386:INFO:             prophet: Not installed
2023-12-04 20:04:13,386:INFO:None
2023-12-04 20:04:13,386:INFO:Set up data.
2023-12-04 20:04:13,478:INFO:Set up folding strategy.
2023-12-04 20:04:13,478:INFO:Set up train/test split.
2023-12-04 20:04:13,569:INFO:Set up index.
2023-12-04 20:04:13,569:INFO:Assigning column types.
2023-12-04 20:04:13,588:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:04:13,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:04:13,866:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:04:13,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:13,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:04:14,076:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:04:14,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,184:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:04:14,317:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:04:14,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:04:14,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,605:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:04:14,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:14,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:15,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:15,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:15,024:INFO:Preparing preprocessing pipeline...
2023-12-04 20:04:15,031:INFO:Set up label encoding.
2023-12-04 20:04:15,031:INFO:Set up simple imputation.
2023-12-04 20:04:15,057:INFO:Set up encoding of ordinal features.
2023-12-04 20:04:15,066:INFO:Set up encoding of categorical features.
2023-12-04 20:04:15,066:INFO:Set up column transformation.
2023-12-04 20:04:15,066:INFO:Set up feature normalization.
2023-12-04 20:04:15,071:INFO:Set up column name cleaning.
2023-12-04 20:04:17,469:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:04:17,579:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:04:17,580:INFO:Creating final display dataframe.
2023-12-04 20:04:20,324:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method           quantile
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               24e5
2023-12-04 20:04:20,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:20,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:20,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:20,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:04:20,780:INFO:setup() successfully completed in 7.56s...............
2023-12-04 20:04:20,781:INFO:Initializing create_model()
2023-12-04 20:04:20,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A0EC455E0>, estimator=xgboost, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:04:20,781:INFO:Checking exceptions
2023-12-04 20:05:26,678:INFO:PyCaret ClassificationExperiment
2023-12-04 20:05:26,678:INFO:Logging name: clf-default-name
2023-12-04 20:05:26,679:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:05:26,681:INFO:version 3.2.0
2023-12-04 20:05:26,681:INFO:Initializing setup()
2023-12-04 20:05:26,681:INFO:self.USI: df30
2023-12-04 20:05:26,681:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:05:26,681:INFO:Checking environment
2023-12-04 20:05:26,681:INFO:python_version: 3.9.18
2023-12-04 20:05:26,681:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:05:26,681:INFO:machine: AMD64
2023-12-04 20:05:26,681:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:05:26,681:INFO:Memory: svmem(total=7955767296, available=1312223232, percent=83.5, used=6643544064, free=1312223232)
2023-12-04 20:05:26,681:INFO:Physical Core: 2
2023-12-04 20:05:26,681:INFO:Logical Core: 4
2023-12-04 20:05:26,681:INFO:Checking libraries
2023-12-04 20:05:26,681:INFO:System:
2023-12-04 20:05:26,681:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:05:26,681:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:05:26,681:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:05:26,681:INFO:PyCaret required dependencies:
2023-12-04 20:05:26,681:INFO:                 pip: 23.3.1
2023-12-04 20:05:26,681:INFO:          setuptools: 68.0.0
2023-12-04 20:05:26,681:INFO:             pycaret: 3.2.0
2023-12-04 20:05:26,681:INFO:             IPython: 8.15.0
2023-12-04 20:05:26,681:INFO:          ipywidgets: 7.6.5
2023-12-04 20:05:26,681:INFO:                tqdm: 4.64.1
2023-12-04 20:05:26,681:INFO:               numpy: 1.25.2
2023-12-04 20:05:26,681:INFO:              pandas: 1.5.3
2023-12-04 20:05:26,681:INFO:              jinja2: 3.1.2
2023-12-04 20:05:26,681:INFO:               scipy: 1.9.3
2023-12-04 20:05:26,681:INFO:              joblib: 1.2.0
2023-12-04 20:05:26,681:INFO:             sklearn: 1.2.2
2023-12-04 20:05:26,681:INFO:                pyod: 1.1.2
2023-12-04 20:05:26,681:INFO:            imblearn: 0.11.0
2023-12-04 20:05:26,681:INFO:   category_encoders: 2.6.3
2023-12-04 20:05:26,681:INFO:            lightgbm: 4.1.0
2023-12-04 20:05:26,681:INFO:               numba: 0.58.1
2023-12-04 20:05:26,681:INFO:            requests: 2.28.1
2023-12-04 20:05:26,681:INFO:          matplotlib: 3.6.2
2023-12-04 20:05:26,681:INFO:          scikitplot: 0.3.7
2023-12-04 20:05:26,681:INFO:         yellowbrick: 1.5
2023-12-04 20:05:26,681:INFO:              plotly: 5.18.0
2023-12-04 20:05:26,681:INFO:    plotly-resampler: Not installed
2023-12-04 20:05:26,687:INFO:             kaleido: 0.2.1
2023-12-04 20:05:26,687:INFO:           schemdraw: 0.15
2023-12-04 20:05:26,687:INFO:         statsmodels: 0.14.0
2023-12-04 20:05:26,687:INFO:              sktime: 0.21.1
2023-12-04 20:05:26,687:INFO:               tbats: 1.1.3
2023-12-04 20:05:26,687:INFO:            pmdarima: 2.0.4
2023-12-04 20:05:26,687:INFO:              psutil: 5.9.0
2023-12-04 20:05:26,688:INFO:          markupsafe: 2.1.1
2023-12-04 20:05:26,688:INFO:             pickle5: Not installed
2023-12-04 20:05:26,688:INFO:         cloudpickle: 3.0.0
2023-12-04 20:05:26,688:INFO:         deprecation: 2.1.0
2023-12-04 20:05:26,688:INFO:              xxhash: 3.4.1
2023-12-04 20:05:26,688:INFO:           wurlitzer: Not installed
2023-12-04 20:05:26,688:INFO:PyCaret optional dependencies:
2023-12-04 20:05:26,690:INFO:                shap: 0.43.0
2023-12-04 20:05:26,690:INFO:           interpret: 0.4.4
2023-12-04 20:05:26,690:INFO:                umap: 0.5.5
2023-12-04 20:05:26,691:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:05:26,691:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:05:26,691:INFO:             autoviz: Not installed
2023-12-04 20:05:26,692:INFO:           fairlearn: 0.7.0
2023-12-04 20:05:26,692:INFO:          deepchecks: Not installed
2023-12-04 20:05:26,692:INFO:             xgboost: Not installed
2023-12-04 20:05:26,692:INFO:            catboost: Not installed
2023-12-04 20:05:26,692:INFO:              kmodes: Not installed
2023-12-04 20:05:26,692:INFO:             mlxtend: Not installed
2023-12-04 20:05:26,692:INFO:       statsforecast: Not installed
2023-12-04 20:05:26,692:INFO:        tune_sklearn: Not installed
2023-12-04 20:05:26,692:INFO:                 ray: Not installed
2023-12-04 20:05:26,692:INFO:            hyperopt: Not installed
2023-12-04 20:05:26,692:INFO:              optuna: Not installed
2023-12-04 20:05:26,692:INFO:               skopt: Not installed
2023-12-04 20:05:26,692:INFO:              mlflow: Not installed
2023-12-04 20:05:26,693:INFO:              gradio: Not installed
2023-12-04 20:05:26,693:INFO:             fastapi: Not installed
2023-12-04 20:05:26,693:INFO:             uvicorn: Not installed
2023-12-04 20:05:26,693:INFO:              m2cgen: Not installed
2023-12-04 20:05:26,693:INFO:           evidently: Not installed
2023-12-04 20:05:26,693:INFO:               fugue: Not installed
2023-12-04 20:05:26,693:INFO:           streamlit: 1.26.0
2023-12-04 20:05:26,693:INFO:             prophet: Not installed
2023-12-04 20:05:26,693:INFO:None
2023-12-04 20:05:26,693:INFO:Set up data.
2023-12-04 20:05:26,828:INFO:Set up folding strategy.
2023-12-04 20:05:26,828:INFO:Set up train/test split.
2023-12-04 20:05:26,916:INFO:Set up index.
2023-12-04 20:05:26,917:INFO:Assigning column types.
2023-12-04 20:05:26,928:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:05:27,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:05:27,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:05:27,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:27,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:27,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:05:27,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:05:27,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:27,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:27,394:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:05:27,535:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:05:27,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:27,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:27,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:05:28,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:28,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:28,025:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:05:28,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:28,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:28,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:28,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:28,668:INFO:Preparing preprocessing pipeline...
2023-12-04 20:05:28,674:INFO:Set up label encoding.
2023-12-04 20:05:28,674:INFO:Set up simple imputation.
2023-12-04 20:05:28,692:INFO:Set up encoding of ordinal features.
2023-12-04 20:05:28,693:INFO:Set up encoding of categorical features.
2023-12-04 20:05:28,701:INFO:Set up column name cleaning.
2023-12-04 20:05:29,458:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:05:29,524:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:05:29,524:INFO:Creating final display dataframe.
2023-12-04 20:05:31,168:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               df30
2023-12-04 20:05:31,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:31,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:31,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:31,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:05:31,592:INFO:setup() successfully completed in 4.95s...............
2023-12-04 20:05:31,593:INFO:Initializing get_config()
2023-12-04 20:05:31,593:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A168FF0A0>, variable=X_train)
2023-12-04 20:05:31,593:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-04 20:05:31,598:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-04 20:05:31,625:INFO:Variable:  returned as        age     workclass  fnlwgt     education  educational-num  \
31547   18             ?  234648          11th                7   
25322   50       Private   34832     Bachelors               13   
11564   31       Private  246439       HS-grad                9   
30066   66       Private  244661     Bachelors               13   
34634   40       Private  289309  Some-college               10   
...    ...           ...     ...           ...              ...   
40514   28       Private   30912       HS-grad                9   
15065   35       Private  126569       Masters               14   
9177    25       Private  279833     Bachelors               13   
39566   59  Self-emp-inc  103948       HS-grad                9   
4534    34       Private  195144       HS-grad                9   

           marital-status       occupation   relationship                race  \
31547       Never-married                ?      Own-child               Black   
25322  Married-civ-spouse     Tech-support        Husband               White   
11564       Never-married  Farming-fishing  Not-in-family               White   
30066  Married-civ-spouse     Adm-clerical        Husband  Asian-Pac-Islander   
34634            Divorced    Other-service  Not-in-family               White   
...                   ...              ...            ...                 ...   
40514  Married-civ-spouse     Adm-clerical        Husband               White   
15065  Married-civ-spouse     Craft-repair        Husband               White   
9177        Never-married            Sales  Not-in-family               White   
39566  Married-civ-spouse            Sales        Husband               White   
4534        Never-married  Exec-managerial  Not-in-family               White   

       gender  capital-gain  capital-loss  hours-per-week native-country  
31547    Male             0             0              15  United-States  
25322    Male         15024             0              40  United-States  
11564    Male             0             0              38  United-States  
30066    Male             0             0              40    Philippines  
34634  Female             0             0              48  United-States  
...       ...           ...           ...             ...            ...  
40514    Male             0             0              40  United-States  
15065    Male             0             0              40  United-States  
9177     Male             0          1590              44  United-States  
39566    Male             0             0              60  United-States  
4534   Female             0             0              40  United-States  

[27351 rows x 14 columns]
2023-12-04 20:05:31,625:INFO:get_config() successfully completed......................................
2023-12-04 20:05:31,626:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_10064\1818322696.py:11: FutureWarning: The default value of numeric_only in DataFrame.var is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.
  high_variance_cols = transformed_data.var()[transformed_data.var() > threshold].index

2023-12-04 20:05:31,626:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_10064\1818322696.py:11: FutureWarning: The default value of numeric_only in DataFrame.var is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.
  high_variance_cols = transformed_data.var()[transformed_data.var() > threshold].index

2023-12-04 20:05:39,162:INFO:Initializing compare_models()
2023-12-04 20:05:39,162:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A168FF0A0>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A168FF0A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 20:05:39,162:INFO:Checking exceptions
2023-12-04 20:06:04,171:INFO:PyCaret ClassificationExperiment
2023-12-04 20:06:04,171:INFO:Logging name: clf-default-name
2023-12-04 20:06:04,173:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:06:04,173:INFO:version 3.2.0
2023-12-04 20:06:04,173:INFO:Initializing setup()
2023-12-04 20:06:04,173:INFO:self.USI: 756b
2023-12-04 20:06:04,173:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:06:04,173:INFO:Checking environment
2023-12-04 20:06:04,174:INFO:python_version: 3.9.18
2023-12-04 20:06:04,174:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:06:04,174:INFO:machine: AMD64
2023-12-04 20:06:04,174:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:06:04,174:INFO:Memory: svmem(total=7955767296, available=1141542912, percent=85.7, used=6814224384, free=1141542912)
2023-12-04 20:06:04,174:INFO:Physical Core: 2
2023-12-04 20:06:04,174:INFO:Logical Core: 4
2023-12-04 20:06:04,175:INFO:Checking libraries
2023-12-04 20:06:04,175:INFO:System:
2023-12-04 20:06:04,175:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:06:04,175:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:06:04,175:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:06:04,175:INFO:PyCaret required dependencies:
2023-12-04 20:06:04,175:INFO:                 pip: 23.3.1
2023-12-04 20:06:04,176:INFO:          setuptools: 68.0.0
2023-12-04 20:06:04,176:INFO:             pycaret: 3.2.0
2023-12-04 20:06:04,176:INFO:             IPython: 8.15.0
2023-12-04 20:06:04,176:INFO:          ipywidgets: 7.6.5
2023-12-04 20:06:04,176:INFO:                tqdm: 4.64.1
2023-12-04 20:06:04,176:INFO:               numpy: 1.25.2
2023-12-04 20:06:04,177:INFO:              pandas: 1.5.3
2023-12-04 20:06:04,177:INFO:              jinja2: 3.1.2
2023-12-04 20:06:04,177:INFO:               scipy: 1.9.3
2023-12-04 20:06:04,177:INFO:              joblib: 1.2.0
2023-12-04 20:06:04,177:INFO:             sklearn: 1.2.2
2023-12-04 20:06:04,177:INFO:                pyod: 1.1.2
2023-12-04 20:06:04,177:INFO:            imblearn: 0.11.0
2023-12-04 20:06:04,177:INFO:   category_encoders: 2.6.3
2023-12-04 20:06:04,178:INFO:            lightgbm: 4.1.0
2023-12-04 20:06:04,178:INFO:               numba: 0.58.1
2023-12-04 20:06:04,178:INFO:            requests: 2.28.1
2023-12-04 20:06:04,178:INFO:          matplotlib: 3.6.2
2023-12-04 20:06:04,178:INFO:          scikitplot: 0.3.7
2023-12-04 20:06:04,178:INFO:         yellowbrick: 1.5
2023-12-04 20:06:04,178:INFO:              plotly: 5.18.0
2023-12-04 20:06:04,178:INFO:    plotly-resampler: Not installed
2023-12-04 20:06:04,179:INFO:             kaleido: 0.2.1
2023-12-04 20:06:04,179:INFO:           schemdraw: 0.15
2023-12-04 20:06:04,179:INFO:         statsmodels: 0.14.0
2023-12-04 20:06:04,179:INFO:              sktime: 0.21.1
2023-12-04 20:06:04,179:INFO:               tbats: 1.1.3
2023-12-04 20:06:04,179:INFO:            pmdarima: 2.0.4
2023-12-04 20:06:04,179:INFO:              psutil: 5.9.0
2023-12-04 20:06:04,179:INFO:          markupsafe: 2.1.1
2023-12-04 20:06:04,179:INFO:             pickle5: Not installed
2023-12-04 20:06:04,180:INFO:         cloudpickle: 3.0.0
2023-12-04 20:06:04,180:INFO:         deprecation: 2.1.0
2023-12-04 20:06:04,180:INFO:              xxhash: 3.4.1
2023-12-04 20:06:04,180:INFO:           wurlitzer: Not installed
2023-12-04 20:06:04,180:INFO:PyCaret optional dependencies:
2023-12-04 20:06:04,180:INFO:                shap: 0.43.0
2023-12-04 20:06:04,180:INFO:           interpret: 0.4.4
2023-12-04 20:06:04,181:INFO:                umap: 0.5.5
2023-12-04 20:06:04,181:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:06:04,181:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:06:04,181:INFO:             autoviz: Not installed
2023-12-04 20:06:04,181:INFO:           fairlearn: 0.7.0
2023-12-04 20:06:04,181:INFO:          deepchecks: Not installed
2023-12-04 20:06:04,181:INFO:             xgboost: Not installed
2023-12-04 20:06:04,181:INFO:            catboost: Not installed
2023-12-04 20:06:04,181:INFO:              kmodes: Not installed
2023-12-04 20:06:04,181:INFO:             mlxtend: Not installed
2023-12-04 20:06:04,181:INFO:       statsforecast: Not installed
2023-12-04 20:06:04,181:INFO:        tune_sklearn: Not installed
2023-12-04 20:06:04,181:INFO:                 ray: Not installed
2023-12-04 20:06:04,181:INFO:            hyperopt: Not installed
2023-12-04 20:06:04,181:INFO:              optuna: Not installed
2023-12-04 20:06:04,181:INFO:               skopt: Not installed
2023-12-04 20:06:04,181:INFO:              mlflow: Not installed
2023-12-04 20:06:04,181:INFO:              gradio: Not installed
2023-12-04 20:06:04,181:INFO:             fastapi: Not installed
2023-12-04 20:06:04,181:INFO:             uvicorn: Not installed
2023-12-04 20:06:04,181:INFO:              m2cgen: Not installed
2023-12-04 20:06:04,184:INFO:           evidently: Not installed
2023-12-04 20:06:04,184:INFO:               fugue: Not installed
2023-12-04 20:06:04,184:INFO:           streamlit: 1.26.0
2023-12-04 20:06:04,184:INFO:             prophet: Not installed
2023-12-04 20:06:04,185:INFO:None
2023-12-04 20:06:04,185:INFO:Set up data.
2023-12-04 20:06:04,320:INFO:Set up folding strategy.
2023-12-04 20:06:04,320:INFO:Set up train/test split.
2023-12-04 20:06:04,434:INFO:Set up index.
2023-12-04 20:06:04,436:INFO:Assigning column types.
2023-12-04 20:06:04,461:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:06:04,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:06:04,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:06:04,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:04,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:05,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:06:05,037:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:06:05,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:05,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:05,213:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:06:05,596:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:06:05,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:05,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:06,144:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:06:06,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:06,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:06,220:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:06:06,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:06,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:06,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:06,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:06,585:INFO:Preparing preprocessing pipeline...
2023-12-04 20:06:06,586:INFO:Set up label encoding.
2023-12-04 20:06:06,586:INFO:Set up simple imputation.
2023-12-04 20:06:06,594:INFO:Set up encoding of ordinal features.
2023-12-04 20:06:06,606:INFO:Set up encoding of categorical features.
2023-12-04 20:06:06,606:INFO:Set up column name cleaning.
2023-12-04 20:06:07,253:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:06:07,304:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:06:07,304:INFO:Creating final display dataframe.
2023-12-04 20:06:07,719:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               756b
2023-12-04 20:06:08,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:08,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:08,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:08,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:06:08,555:INFO:setup() successfully completed in 4.42s...............
2023-12-04 20:06:08,560:INFO:Initializing get_config()
2023-12-04 20:06:08,561:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15E0A760>, variable=X_train)
2023-12-04 20:06:08,561:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-04 20:06:08,561:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-04 20:06:08,644:INFO:Variable:  returned as        age     workclass  fnlwgt     education  educational-num  \
31547   18             ?  234648          11th                7   
25322   50       Private   34832     Bachelors               13   
11564   31       Private  246439       HS-grad                9   
30066   66       Private  244661     Bachelors               13   
34634   40       Private  289309  Some-college               10   
...    ...           ...     ...           ...              ...   
40514   28       Private   30912       HS-grad                9   
15065   35       Private  126569       Masters               14   
9177    25       Private  279833     Bachelors               13   
39566   59  Self-emp-inc  103948       HS-grad                9   
4534    34       Private  195144       HS-grad                9   

           marital-status       occupation   relationship                race  \
31547       Never-married                ?      Own-child               Black   
25322  Married-civ-spouse     Tech-support        Husband               White   
11564       Never-married  Farming-fishing  Not-in-family               White   
30066  Married-civ-spouse     Adm-clerical        Husband  Asian-Pac-Islander   
34634            Divorced    Other-service  Not-in-family               White   
...                   ...              ...            ...                 ...   
40514  Married-civ-spouse     Adm-clerical        Husband               White   
15065  Married-civ-spouse     Craft-repair        Husband               White   
9177        Never-married            Sales  Not-in-family               White   
39566  Married-civ-spouse            Sales        Husband               White   
4534        Never-married  Exec-managerial  Not-in-family               White   

       gender  capital-gain  capital-loss  hours-per-week native-country  
31547    Male             0             0              15  United-States  
25322    Male         15024             0              40  United-States  
11564    Male             0             0              38  United-States  
30066    Male             0             0              40    Philippines  
34634  Female             0             0              48  United-States  
...       ...           ...           ...             ...            ...  
40514    Male             0             0              40  United-States  
15065    Male             0             0              40  United-States  
9177     Male             0          1590              44  United-States  
39566    Male             0             0              60  United-States  
4534   Female             0             0              40  United-States  

[27351 rows x 14 columns]
2023-12-04 20:06:08,644:INFO:get_config() successfully completed......................................
2023-12-04 20:06:08,655:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_10064\824957908.py:9: FutureWarning: The default value of numeric_only in DataFrame.var is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.
  high_variance_cols = transformed_data.var()[transformed_data.var() > threshold].index

2023-12-04 20:06:08,688:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_10064\824957908.py:9: FutureWarning: The default value of numeric_only in DataFrame.var is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.
  high_variance_cols = transformed_data.var()[transformed_data.var() > threshold].index

2023-12-04 20:06:11,173:INFO:Initializing compare_models()
2023-12-04 20:06:11,177:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15E0A760>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15E0A760>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 20:06:11,177:INFO:Checking exceptions
2023-12-04 20:08:41,958:INFO:PyCaret ClassificationExperiment
2023-12-04 20:08:41,964:INFO:Logging name: clf-default-name
2023-12-04 20:08:41,964:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:08:41,964:INFO:version 3.2.0
2023-12-04 20:08:41,965:INFO:Initializing setup()
2023-12-04 20:08:41,966:INFO:self.USI: e756
2023-12-04 20:08:41,966:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:08:41,967:INFO:Checking environment
2023-12-04 20:08:41,967:INFO:python_version: 3.9.18
2023-12-04 20:08:41,967:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:08:41,968:INFO:machine: AMD64
2023-12-04 20:08:41,969:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:08:41,969:INFO:Memory: svmem(total=7955767296, available=1071882240, percent=86.5, used=6883885056, free=1071882240)
2023-12-04 20:08:41,969:INFO:Physical Core: 2
2023-12-04 20:08:41,970:INFO:Logical Core: 4
2023-12-04 20:08:41,970:INFO:Checking libraries
2023-12-04 20:08:41,970:INFO:System:
2023-12-04 20:08:41,970:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:08:41,970:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:08:41,970:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:08:41,970:INFO:PyCaret required dependencies:
2023-12-04 20:08:41,970:INFO:                 pip: 23.3.1
2023-12-04 20:08:41,970:INFO:          setuptools: 68.0.0
2023-12-04 20:08:41,970:INFO:             pycaret: 3.2.0
2023-12-04 20:08:41,970:INFO:             IPython: 8.15.0
2023-12-04 20:08:41,970:INFO:          ipywidgets: 7.6.5
2023-12-04 20:08:41,970:INFO:                tqdm: 4.64.1
2023-12-04 20:08:41,970:INFO:               numpy: 1.25.2
2023-12-04 20:08:41,970:INFO:              pandas: 1.5.3
2023-12-04 20:08:41,970:INFO:              jinja2: 3.1.2
2023-12-04 20:08:41,970:INFO:               scipy: 1.9.3
2023-12-04 20:08:41,970:INFO:              joblib: 1.2.0
2023-12-04 20:08:41,970:INFO:             sklearn: 1.2.2
2023-12-04 20:08:41,970:INFO:                pyod: 1.1.2
2023-12-04 20:08:41,970:INFO:            imblearn: 0.11.0
2023-12-04 20:08:41,970:INFO:   category_encoders: 2.6.3
2023-12-04 20:08:41,970:INFO:            lightgbm: 4.1.0
2023-12-04 20:08:41,970:INFO:               numba: 0.58.1
2023-12-04 20:08:41,970:INFO:            requests: 2.28.1
2023-12-04 20:08:41,970:INFO:          matplotlib: 3.6.2
2023-12-04 20:08:41,970:INFO:          scikitplot: 0.3.7
2023-12-04 20:08:41,970:INFO:         yellowbrick: 1.5
2023-12-04 20:08:41,970:INFO:              plotly: 5.18.0
2023-12-04 20:08:41,970:INFO:    plotly-resampler: Not installed
2023-12-04 20:08:41,970:INFO:             kaleido: 0.2.1
2023-12-04 20:08:41,970:INFO:           schemdraw: 0.15
2023-12-04 20:08:41,970:INFO:         statsmodels: 0.14.0
2023-12-04 20:08:41,970:INFO:              sktime: 0.21.1
2023-12-04 20:08:41,970:INFO:               tbats: 1.1.3
2023-12-04 20:08:41,979:INFO:            pmdarima: 2.0.4
2023-12-04 20:08:41,979:INFO:              psutil: 5.9.0
2023-12-04 20:08:41,979:INFO:          markupsafe: 2.1.1
2023-12-04 20:08:41,979:INFO:             pickle5: Not installed
2023-12-04 20:08:41,979:INFO:         cloudpickle: 3.0.0
2023-12-04 20:08:41,979:INFO:         deprecation: 2.1.0
2023-12-04 20:08:41,979:INFO:              xxhash: 3.4.1
2023-12-04 20:08:41,979:INFO:           wurlitzer: Not installed
2023-12-04 20:08:41,979:INFO:PyCaret optional dependencies:
2023-12-04 20:08:41,979:INFO:                shap: 0.43.0
2023-12-04 20:08:41,979:INFO:           interpret: 0.4.4
2023-12-04 20:08:41,979:INFO:                umap: 0.5.5
2023-12-04 20:08:41,979:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:08:41,979:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:08:41,979:INFO:             autoviz: Not installed
2023-12-04 20:08:41,979:INFO:           fairlearn: 0.7.0
2023-12-04 20:08:41,979:INFO:          deepchecks: Not installed
2023-12-04 20:08:41,979:INFO:             xgboost: Not installed
2023-12-04 20:08:41,979:INFO:            catboost: Not installed
2023-12-04 20:08:41,979:INFO:              kmodes: Not installed
2023-12-04 20:08:41,979:INFO:             mlxtend: Not installed
2023-12-04 20:08:41,979:INFO:       statsforecast: Not installed
2023-12-04 20:08:41,979:INFO:        tune_sklearn: Not installed
2023-12-04 20:08:41,979:INFO:                 ray: Not installed
2023-12-04 20:08:41,979:INFO:            hyperopt: Not installed
2023-12-04 20:08:41,979:INFO:              optuna: Not installed
2023-12-04 20:08:41,979:INFO:               skopt: Not installed
2023-12-04 20:08:41,979:INFO:              mlflow: Not installed
2023-12-04 20:08:41,979:INFO:              gradio: Not installed
2023-12-04 20:08:41,979:INFO:             fastapi: Not installed
2023-12-04 20:08:41,979:INFO:             uvicorn: Not installed
2023-12-04 20:08:41,979:INFO:              m2cgen: Not installed
2023-12-04 20:08:41,979:INFO:           evidently: Not installed
2023-12-04 20:08:41,979:INFO:               fugue: Not installed
2023-12-04 20:08:41,979:INFO:           streamlit: 1.26.0
2023-12-04 20:08:41,979:INFO:             prophet: Not installed
2023-12-04 20:08:41,979:INFO:None
2023-12-04 20:08:41,979:INFO:Set up data.
2023-12-04 20:08:42,136:INFO:Set up folding strategy.
2023-12-04 20:08:42,136:INFO:Set up train/test split.
2023-12-04 20:08:42,212:INFO:Set up index.
2023-12-04 20:08:42,213:INFO:Assigning column types.
2023-12-04 20:08:42,228:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:08:42,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:08:42,309:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:08:42,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:42,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:42,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:08:42,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:08:42,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:42,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:42,706:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:08:42,813:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:08:42,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:42,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:43,133:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:08:43,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:43,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:43,349:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:08:43,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:43,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:44,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:44,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:44,112:INFO:Preparing preprocessing pipeline...
2023-12-04 20:08:44,119:INFO:Set up label encoding.
2023-12-04 20:08:44,119:INFO:Set up simple imputation.
2023-12-04 20:08:44,146:INFO:Set up encoding of ordinal features.
2023-12-04 20:08:44,152:INFO:Set up encoding of categorical features.
2023-12-04 20:08:44,152:INFO:Set up column transformation.
2023-12-04 20:08:44,152:INFO:Set up feature normalization.
2023-12-04 20:08:44,154:INFO:Set up column name cleaning.
2023-12-04 20:08:45,211:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:08:45,283:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:08:45,284:INFO:Creating final display dataframe.
2023-12-04 20:08:47,329:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method        yeo-johnson
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               e756
2023-12-04 20:08:47,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:47,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:47,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:47,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:08:47,862:INFO:setup() successfully completed in 5.94s...............
2023-12-04 20:08:47,945:INFO:Initializing create_model()
2023-12-04 20:08:47,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A17C1F040>, estimator=rf, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:08:47,946:INFO:Checking exceptions
2023-12-04 20:08:48,050:INFO:Importing libraries
2023-12-04 20:08:48,050:INFO:Copying training dataset
2023-12-04 20:08:48,110:INFO:Defining folds
2023-12-04 20:08:48,110:INFO:Declaring metric variables
2023-12-04 20:08:48,130:INFO:Importing untrained model
2023-12-04 20:08:48,138:INFO:Random Forest Classifier Imported successfully
2023-12-04 20:08:48,189:INFO:Starting cross validation
2023-12-04 20:08:48,208:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:09:07,151:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:07,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:07,534:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:07,606:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:07,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:07,958:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:07,996:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:08,054:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:08,137:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:08,171:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:08,273:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:08,306:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:14,691:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:14,799:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:14,906:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:15,027:INFO:Calculating mean and std
2023-12-04 20:09:15,028:INFO:Creating metrics dataframe
2023-12-04 20:09:15,042:INFO:Finalizing model
2023-12-04 20:09:22,165:INFO:Uploading results into container
2023-12-04 20:09:22,166:INFO:Uploading model into container now
2023-12-04 20:09:22,195:INFO:_master_model_container: 1
2023-12-04 20:09:22,196:INFO:_display_container: 2
2023-12-04 20:09:22,196:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 20:09:22,196:INFO:create_model() successfully completed......................................
2023-12-04 20:09:22,736:INFO:PyCaret ClassificationExperiment
2023-12-04 20:09:22,737:INFO:Logging name: clf-default-name
2023-12-04 20:09:22,737:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:09:22,737:INFO:version 3.2.0
2023-12-04 20:09:22,737:INFO:Initializing setup()
2023-12-04 20:09:22,737:INFO:self.USI: 4ab3
2023-12-04 20:09:22,738:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:09:22,738:INFO:Checking environment
2023-12-04 20:09:22,738:INFO:python_version: 3.9.18
2023-12-04 20:09:22,739:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:09:22,740:INFO:machine: AMD64
2023-12-04 20:09:22,740:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:09:22,740:INFO:Memory: svmem(total=7955767296, available=1238003712, percent=84.4, used=6717763584, free=1238003712)
2023-12-04 20:09:22,740:INFO:Physical Core: 2
2023-12-04 20:09:22,740:INFO:Logical Core: 4
2023-12-04 20:09:22,740:INFO:Checking libraries
2023-12-04 20:09:22,741:INFO:System:
2023-12-04 20:09:22,741:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:09:22,741:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:09:22,741:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:09:22,741:INFO:PyCaret required dependencies:
2023-12-04 20:09:22,741:INFO:                 pip: 23.3.1
2023-12-04 20:09:22,741:INFO:          setuptools: 68.0.0
2023-12-04 20:09:22,741:INFO:             pycaret: 3.2.0
2023-12-04 20:09:22,741:INFO:             IPython: 8.15.0
2023-12-04 20:09:22,741:INFO:          ipywidgets: 7.6.5
2023-12-04 20:09:22,741:INFO:                tqdm: 4.64.1
2023-12-04 20:09:22,741:INFO:               numpy: 1.25.2
2023-12-04 20:09:22,742:INFO:              pandas: 1.5.3
2023-12-04 20:09:22,742:INFO:              jinja2: 3.1.2
2023-12-04 20:09:22,742:INFO:               scipy: 1.9.3
2023-12-04 20:09:22,744:INFO:              joblib: 1.2.0
2023-12-04 20:09:22,745:INFO:             sklearn: 1.2.2
2023-12-04 20:09:22,745:INFO:                pyod: 1.1.2
2023-12-04 20:09:22,745:INFO:            imblearn: 0.11.0
2023-12-04 20:09:22,745:INFO:   category_encoders: 2.6.3
2023-12-04 20:09:22,746:INFO:            lightgbm: 4.1.0
2023-12-04 20:09:22,746:INFO:               numba: 0.58.1
2023-12-04 20:09:22,746:INFO:            requests: 2.28.1
2023-12-04 20:09:22,747:INFO:          matplotlib: 3.6.2
2023-12-04 20:09:22,748:INFO:          scikitplot: 0.3.7
2023-12-04 20:09:22,748:INFO:         yellowbrick: 1.5
2023-12-04 20:09:22,748:INFO:              plotly: 5.18.0
2023-12-04 20:09:22,748:INFO:    plotly-resampler: Not installed
2023-12-04 20:09:22,748:INFO:             kaleido: 0.2.1
2023-12-04 20:09:22,749:INFO:           schemdraw: 0.15
2023-12-04 20:09:22,749:INFO:         statsmodels: 0.14.0
2023-12-04 20:09:22,749:INFO:              sktime: 0.21.1
2023-12-04 20:09:22,749:INFO:               tbats: 1.1.3
2023-12-04 20:09:22,749:INFO:            pmdarima: 2.0.4
2023-12-04 20:09:22,749:INFO:              psutil: 5.9.0
2023-12-04 20:09:22,749:INFO:          markupsafe: 2.1.1
2023-12-04 20:09:22,750:INFO:             pickle5: Not installed
2023-12-04 20:09:22,750:INFO:         cloudpickle: 3.0.0
2023-12-04 20:09:22,750:INFO:         deprecation: 2.1.0
2023-12-04 20:09:22,750:INFO:              xxhash: 3.4.1
2023-12-04 20:09:22,750:INFO:           wurlitzer: Not installed
2023-12-04 20:09:22,750:INFO:PyCaret optional dependencies:
2023-12-04 20:09:22,750:INFO:                shap: 0.43.0
2023-12-04 20:09:22,751:INFO:           interpret: 0.4.4
2023-12-04 20:09:22,752:INFO:                umap: 0.5.5
2023-12-04 20:09:22,753:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:09:22,753:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:09:22,753:INFO:             autoviz: Not installed
2023-12-04 20:09:22,753:INFO:           fairlearn: 0.7.0
2023-12-04 20:09:22,754:INFO:          deepchecks: Not installed
2023-12-04 20:09:22,754:INFO:             xgboost: Not installed
2023-12-04 20:09:22,754:INFO:            catboost: Not installed
2023-12-04 20:09:22,755:INFO:              kmodes: Not installed
2023-12-04 20:09:22,755:INFO:             mlxtend: Not installed
2023-12-04 20:09:22,755:INFO:       statsforecast: Not installed
2023-12-04 20:09:22,755:INFO:        tune_sklearn: Not installed
2023-12-04 20:09:22,755:INFO:                 ray: Not installed
2023-12-04 20:09:22,755:INFO:            hyperopt: Not installed
2023-12-04 20:09:22,756:INFO:              optuna: Not installed
2023-12-04 20:09:22,756:INFO:               skopt: Not installed
2023-12-04 20:09:22,756:INFO:              mlflow: Not installed
2023-12-04 20:09:22,756:INFO:              gradio: Not installed
2023-12-04 20:09:22,756:INFO:             fastapi: Not installed
2023-12-04 20:09:22,757:INFO:             uvicorn: Not installed
2023-12-04 20:09:22,757:INFO:              m2cgen: Not installed
2023-12-04 20:09:22,757:INFO:           evidently: Not installed
2023-12-04 20:09:22,757:INFO:               fugue: Not installed
2023-12-04 20:09:22,757:INFO:           streamlit: 1.26.0
2023-12-04 20:09:22,758:INFO:             prophet: Not installed
2023-12-04 20:09:22,758:INFO:None
2023-12-04 20:09:22,758:INFO:Set up data.
2023-12-04 20:09:22,887:INFO:Set up folding strategy.
2023-12-04 20:09:22,887:INFO:Set up train/test split.
2023-12-04 20:09:22,994:INFO:Set up index.
2023-12-04 20:09:22,994:INFO:Assigning column types.
2023-12-04 20:09:23,021:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:09:23,122:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:09:23,128:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:23,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,345:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:09:23,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:23,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,504:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:09:23,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:23,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,874:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:23,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:23,921:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:09:24,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:24,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:24,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:24,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:24,212:INFO:Preparing preprocessing pipeline...
2023-12-04 20:09:24,212:INFO:Set up label encoding.
2023-12-04 20:09:24,212:INFO:Set up simple imputation.
2023-12-04 20:09:24,230:INFO:Set up encoding of ordinal features.
2023-12-04 20:09:24,238:INFO:Set up encoding of categorical features.
2023-12-04 20:09:24,238:INFO:Set up column transformation.
2023-12-04 20:09:24,238:INFO:Set up feature normalization.
2023-12-04 20:09:24,238:INFO:Set up column name cleaning.
2023-12-04 20:09:24,988:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:09:25,029:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:09:25,029:INFO:Creating final display dataframe.
2023-12-04 20:09:25,445:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method           quantile
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               4ab3
2023-12-04 20:09:25,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:25,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:25,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:25,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:25,837:INFO:setup() successfully completed in 3.16s...............
2023-12-04 20:09:25,870:INFO:Initializing create_model()
2023-12-04 20:09:25,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A154A47C0>, estimator=dt, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:09:25,870:INFO:Checking exceptions
2023-12-04 20:09:25,907:INFO:Importing libraries
2023-12-04 20:09:25,907:INFO:Copying training dataset
2023-12-04 20:09:25,970:INFO:Defining folds
2023-12-04 20:09:25,970:INFO:Declaring metric variables
2023-12-04 20:09:25,990:INFO:Importing untrained model
2023-12-04 20:09:25,999:INFO:Decision Tree Classifier Imported successfully
2023-12-04 20:09:26,017:INFO:Starting cross validation
2023-12-04 20:09:26,022:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:09:32,061:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,149:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,186:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,269:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,269:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,353:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,380:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,420:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,464:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,552:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,552:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:32,610:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:35,133:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:35,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:35,286:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:09:35,380:INFO:Calculating mean and std
2023-12-04 20:09:35,382:INFO:Creating metrics dataframe
2023-12-04 20:09:35,402:INFO:Finalizing model
2023-12-04 20:09:37,574:INFO:Uploading results into container
2023-12-04 20:09:37,582:INFO:Uploading model into container now
2023-12-04 20:09:37,612:INFO:_master_model_container: 1
2023-12-04 20:09:37,612:INFO:_display_container: 2
2023-12-04 20:09:37,612:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-04 20:09:37,612:INFO:create_model() successfully completed......................................
2023-12-04 20:09:38,004:INFO:PyCaret ClassificationExperiment
2023-12-04 20:09:38,004:INFO:Logging name: clf-default-name
2023-12-04 20:09:38,004:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:09:38,004:INFO:version 3.2.0
2023-12-04 20:09:38,004:INFO:Initializing setup()
2023-12-04 20:09:38,005:INFO:self.USI: ec8d
2023-12-04 20:09:38,005:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:09:38,005:INFO:Checking environment
2023-12-04 20:09:38,005:INFO:python_version: 3.9.18
2023-12-04 20:09:38,005:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:09:38,006:INFO:machine: AMD64
2023-12-04 20:09:38,006:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:09:38,006:INFO:Memory: svmem(total=7955767296, available=1149415424, percent=85.6, used=6806351872, free=1149415424)
2023-12-04 20:09:38,006:INFO:Physical Core: 2
2023-12-04 20:09:38,006:INFO:Logical Core: 4
2023-12-04 20:09:38,009:INFO:Checking libraries
2023-12-04 20:09:38,009:INFO:System:
2023-12-04 20:09:38,009:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:09:38,009:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:09:38,009:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:09:38,009:INFO:PyCaret required dependencies:
2023-12-04 20:09:38,009:INFO:                 pip: 23.3.1
2023-12-04 20:09:38,009:INFO:          setuptools: 68.0.0
2023-12-04 20:09:38,010:INFO:             pycaret: 3.2.0
2023-12-04 20:09:38,010:INFO:             IPython: 8.15.0
2023-12-04 20:09:38,010:INFO:          ipywidgets: 7.6.5
2023-12-04 20:09:38,010:INFO:                tqdm: 4.64.1
2023-12-04 20:09:38,010:INFO:               numpy: 1.25.2
2023-12-04 20:09:38,010:INFO:              pandas: 1.5.3
2023-12-04 20:09:38,010:INFO:              jinja2: 3.1.2
2023-12-04 20:09:38,011:INFO:               scipy: 1.9.3
2023-12-04 20:09:38,011:INFO:              joblib: 1.2.0
2023-12-04 20:09:38,011:INFO:             sklearn: 1.2.2
2023-12-04 20:09:38,011:INFO:                pyod: 1.1.2
2023-12-04 20:09:38,011:INFO:            imblearn: 0.11.0
2023-12-04 20:09:38,011:INFO:   category_encoders: 2.6.3
2023-12-04 20:09:38,011:INFO:            lightgbm: 4.1.0
2023-12-04 20:09:38,011:INFO:               numba: 0.58.1
2023-12-04 20:09:38,012:INFO:            requests: 2.28.1
2023-12-04 20:09:38,012:INFO:          matplotlib: 3.6.2
2023-12-04 20:09:38,012:INFO:          scikitplot: 0.3.7
2023-12-04 20:09:38,012:INFO:         yellowbrick: 1.5
2023-12-04 20:09:38,012:INFO:              plotly: 5.18.0
2023-12-04 20:09:38,012:INFO:    plotly-resampler: Not installed
2023-12-04 20:09:38,012:INFO:             kaleido: 0.2.1
2023-12-04 20:09:38,012:INFO:           schemdraw: 0.15
2023-12-04 20:09:38,012:INFO:         statsmodels: 0.14.0
2023-12-04 20:09:38,013:INFO:              sktime: 0.21.1
2023-12-04 20:09:38,013:INFO:               tbats: 1.1.3
2023-12-04 20:09:38,013:INFO:            pmdarima: 2.0.4
2023-12-04 20:09:38,013:INFO:              psutil: 5.9.0
2023-12-04 20:09:38,013:INFO:          markupsafe: 2.1.1
2023-12-04 20:09:38,013:INFO:             pickle5: Not installed
2023-12-04 20:09:38,013:INFO:         cloudpickle: 3.0.0
2023-12-04 20:09:38,013:INFO:         deprecation: 2.1.0
2023-12-04 20:09:38,014:INFO:              xxhash: 3.4.1
2023-12-04 20:09:38,014:INFO:           wurlitzer: Not installed
2023-12-04 20:09:38,014:INFO:PyCaret optional dependencies:
2023-12-04 20:09:38,014:INFO:                shap: 0.43.0
2023-12-04 20:09:38,018:INFO:           interpret: 0.4.4
2023-12-04 20:09:38,018:INFO:                umap: 0.5.5
2023-12-04 20:09:38,018:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:09:38,018:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:09:38,018:INFO:             autoviz: Not installed
2023-12-04 20:09:38,018:INFO:           fairlearn: 0.7.0
2023-12-04 20:09:38,018:INFO:          deepchecks: Not installed
2023-12-04 20:09:38,019:INFO:             xgboost: Not installed
2023-12-04 20:09:38,019:INFO:            catboost: Not installed
2023-12-04 20:09:38,019:INFO:              kmodes: Not installed
2023-12-04 20:09:38,019:INFO:             mlxtend: Not installed
2023-12-04 20:09:38,019:INFO:       statsforecast: Not installed
2023-12-04 20:09:38,019:INFO:        tune_sklearn: Not installed
2023-12-04 20:09:38,020:INFO:                 ray: Not installed
2023-12-04 20:09:38,020:INFO:            hyperopt: Not installed
2023-12-04 20:09:38,020:INFO:              optuna: Not installed
2023-12-04 20:09:38,020:INFO:               skopt: Not installed
2023-12-04 20:09:38,020:INFO:              mlflow: Not installed
2023-12-04 20:09:38,020:INFO:              gradio: Not installed
2023-12-04 20:09:38,020:INFO:             fastapi: Not installed
2023-12-04 20:09:38,021:INFO:             uvicorn: Not installed
2023-12-04 20:09:38,021:INFO:              m2cgen: Not installed
2023-12-04 20:09:38,021:INFO:           evidently: Not installed
2023-12-04 20:09:38,021:INFO:               fugue: Not installed
2023-12-04 20:09:38,022:INFO:           streamlit: 1.26.0
2023-12-04 20:09:38,023:INFO:             prophet: Not installed
2023-12-04 20:09:38,023:INFO:None
2023-12-04 20:09:38,023:INFO:Set up data.
2023-12-04 20:09:38,103:INFO:Set up folding strategy.
2023-12-04 20:09:38,103:INFO:Set up train/test split.
2023-12-04 20:09:38,169:INFO:Set up index.
2023-12-04 20:09:38,170:INFO:Assigning column types.
2023-12-04 20:09:38,177:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:09:38,294:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:09:38,294:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:38,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:38,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:38,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:09:38,452:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:38,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:38,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:38,510:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:09:38,601:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:38,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:38,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:38,862:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:09:39,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:39,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:39,034:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:09:39,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:39,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:39,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:39,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:09:39,555:INFO:Preparing preprocessing pipeline...
2023-12-04 20:09:39,564:INFO:Set up label encoding.
2023-12-04 20:09:39,564:INFO:Set up simple imputation.
2023-12-04 20:09:39,613:INFO:Set up encoding of ordinal features.
2023-12-04 20:09:39,634:INFO:Set up encoding of categorical features.
2023-12-04 20:09:39,634:INFO:Set up column transformation.
2023-12-04 20:12:14,184:INFO:PyCaret ClassificationExperiment
2023-12-04 20:12:14,185:INFO:Logging name: clf-default-name
2023-12-04 20:12:14,185:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:12:14,185:INFO:version 3.2.0
2023-12-04 20:12:14,185:INFO:Initializing setup()
2023-12-04 20:12:14,185:INFO:self.USI: 6f6a
2023-12-04 20:12:14,185:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:12:14,185:INFO:Checking environment
2023-12-04 20:12:14,185:INFO:python_version: 3.9.18
2023-12-04 20:12:14,185:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:12:14,185:INFO:machine: AMD64
2023-12-04 20:12:14,185:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:12:14,185:INFO:Memory: svmem(total=7955767296, available=1106350080, percent=86.1, used=6849417216, free=1106350080)
2023-12-04 20:12:14,193:INFO:Physical Core: 2
2023-12-04 20:12:14,193:INFO:Logical Core: 4
2023-12-04 20:12:14,194:INFO:Checking libraries
2023-12-04 20:12:14,194:INFO:System:
2023-12-04 20:12:14,195:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:12:14,195:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:12:14,197:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:12:14,200:INFO:PyCaret required dependencies:
2023-12-04 20:12:14,200:INFO:                 pip: 23.3.1
2023-12-04 20:12:14,202:INFO:          setuptools: 68.0.0
2023-12-04 20:12:14,202:INFO:             pycaret: 3.2.0
2023-12-04 20:12:14,202:INFO:             IPython: 8.15.0
2023-12-04 20:12:14,202:INFO:          ipywidgets: 7.6.5
2023-12-04 20:12:14,202:INFO:                tqdm: 4.64.1
2023-12-04 20:12:14,202:INFO:               numpy: 1.25.2
2023-12-04 20:12:14,206:INFO:              pandas: 1.5.3
2023-12-04 20:12:14,209:INFO:              jinja2: 3.1.2
2023-12-04 20:12:14,209:INFO:               scipy: 1.9.3
2023-12-04 20:12:14,210:INFO:              joblib: 1.2.0
2023-12-04 20:12:14,210:INFO:             sklearn: 1.2.2
2023-12-04 20:12:14,211:INFO:                pyod: 1.1.2
2023-12-04 20:12:14,211:INFO:            imblearn: 0.11.0
2023-12-04 20:12:14,211:INFO:   category_encoders: 2.6.3
2023-12-04 20:12:14,211:INFO:            lightgbm: 4.1.0
2023-12-04 20:12:14,211:INFO:               numba: 0.58.1
2023-12-04 20:12:14,211:INFO:            requests: 2.28.1
2023-12-04 20:12:14,211:INFO:          matplotlib: 3.6.2
2023-12-04 20:12:14,211:INFO:          scikitplot: 0.3.7
2023-12-04 20:12:14,211:INFO:         yellowbrick: 1.5
2023-12-04 20:12:14,211:INFO:              plotly: 5.18.0
2023-12-04 20:12:14,211:INFO:    plotly-resampler: Not installed
2023-12-04 20:12:14,211:INFO:             kaleido: 0.2.1
2023-12-04 20:12:14,211:INFO:           schemdraw: 0.15
2023-12-04 20:12:14,211:INFO:         statsmodels: 0.14.0
2023-12-04 20:12:14,211:INFO:              sktime: 0.21.1
2023-12-04 20:12:14,211:INFO:               tbats: 1.1.3
2023-12-04 20:12:14,211:INFO:            pmdarima: 2.0.4
2023-12-04 20:12:14,211:INFO:              psutil: 5.9.0
2023-12-04 20:12:14,211:INFO:          markupsafe: 2.1.1
2023-12-04 20:12:14,211:INFO:             pickle5: Not installed
2023-12-04 20:12:14,211:INFO:         cloudpickle: 3.0.0
2023-12-04 20:12:14,211:INFO:         deprecation: 2.1.0
2023-12-04 20:12:14,211:INFO:              xxhash: 3.4.1
2023-12-04 20:12:14,211:INFO:           wurlitzer: Not installed
2023-12-04 20:12:14,211:INFO:PyCaret optional dependencies:
2023-12-04 20:12:14,214:INFO:                shap: 0.43.0
2023-12-04 20:12:14,214:INFO:           interpret: 0.4.4
2023-12-04 20:12:14,214:INFO:                umap: 0.5.5
2023-12-04 20:12:14,215:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:12:14,215:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:12:14,215:INFO:             autoviz: Not installed
2023-12-04 20:12:14,215:INFO:           fairlearn: 0.7.0
2023-12-04 20:12:14,215:INFO:          deepchecks: Not installed
2023-12-04 20:12:14,215:INFO:             xgboost: Not installed
2023-12-04 20:12:14,215:INFO:            catboost: Not installed
2023-12-04 20:12:14,215:INFO:              kmodes: Not installed
2023-12-04 20:12:14,215:INFO:             mlxtend: Not installed
2023-12-04 20:12:14,215:INFO:       statsforecast: Not installed
2023-12-04 20:12:14,215:INFO:        tune_sklearn: Not installed
2023-12-04 20:12:14,215:INFO:                 ray: Not installed
2023-12-04 20:12:14,215:INFO:            hyperopt: Not installed
2023-12-04 20:12:14,215:INFO:              optuna: Not installed
2023-12-04 20:12:14,215:INFO:               skopt: Not installed
2023-12-04 20:12:14,215:INFO:              mlflow: Not installed
2023-12-04 20:12:14,215:INFO:              gradio: Not installed
2023-12-04 20:12:14,215:INFO:             fastapi: Not installed
2023-12-04 20:12:14,215:INFO:             uvicorn: Not installed
2023-12-04 20:12:14,215:INFO:              m2cgen: Not installed
2023-12-04 20:12:14,215:INFO:           evidently: Not installed
2023-12-04 20:12:14,215:INFO:               fugue: Not installed
2023-12-04 20:12:14,215:INFO:           streamlit: 1.26.0
2023-12-04 20:12:14,215:INFO:             prophet: Not installed
2023-12-04 20:12:14,215:INFO:None
2023-12-04 20:12:14,215:INFO:Set up data.
2023-12-04 20:12:14,335:INFO:Set up folding strategy.
2023-12-04 20:12:14,335:INFO:Set up train/test split.
2023-12-04 20:12:14,399:INFO:Set up index.
2023-12-04 20:12:14,400:INFO:Assigning column types.
2023-12-04 20:12:14,408:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:12:14,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:12:14,502:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:14,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:14,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:14,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:12:14,867:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:14,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:14,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:14,917:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:12:15,018:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:15,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:15,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:15,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:15,402:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:15,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:15,403:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:12:16,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:16,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:16,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:16,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:16,567:INFO:Preparing preprocessing pipeline...
2023-12-04 20:12:16,570:INFO:Set up label encoding.
2023-12-04 20:12:16,570:INFO:Set up simple imputation.
2023-12-04 20:12:16,593:INFO:Set up encoding of ordinal features.
2023-12-04 20:12:16,601:INFO:Set up encoding of categorical features.
2023-12-04 20:12:16,601:INFO:Set up column transformation.
2023-12-04 20:12:16,601:INFO:Set up feature normalization.
2023-12-04 20:12:16,601:INFO:Set up column name cleaning.
2023-12-04 20:12:17,568:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:12:17,660:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:12:17,660:INFO:Creating final display dataframe.
2023-12-04 20:12:18,310:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method        yeo-johnson
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               6f6a
2023-12-04 20:12:18,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:18,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:18,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:18,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:18,776:INFO:setup() successfully completed in 4.66s...............
2023-12-04 20:12:18,818:INFO:Initializing create_model()
2023-12-04 20:12:18,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14DA63D0>, estimator=rf, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:12:18,818:INFO:Checking exceptions
2023-12-04 20:12:18,881:INFO:Importing libraries
2023-12-04 20:12:18,881:INFO:Copying training dataset
2023-12-04 20:12:18,920:INFO:Defining folds
2023-12-04 20:12:18,920:INFO:Declaring metric variables
2023-12-04 20:12:18,939:INFO:Importing untrained model
2023-12-04 20:12:18,953:INFO:Random Forest Classifier Imported successfully
2023-12-04 20:12:18,970:INFO:Starting cross validation
2023-12-04 20:12:18,986:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:12:37,512:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:37,644:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:37,821:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:37,884:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,115:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,147:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,172:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,355:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,444:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,493:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:38,552:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:45,330:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:45,414:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:45,495:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:12:45,609:INFO:Calculating mean and std
2023-12-04 20:12:45,613:INFO:Creating metrics dataframe
2023-12-04 20:12:45,629:INFO:Finalizing model
2023-12-04 20:12:54,459:INFO:Uploading results into container
2023-12-04 20:12:54,465:INFO:Uploading model into container now
2023-12-04 20:12:54,498:INFO:_master_model_container: 1
2023-12-04 20:12:54,499:INFO:_display_container: 2
2023-12-04 20:12:54,501:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 20:12:54,501:INFO:create_model() successfully completed......................................
2023-12-04 20:12:54,886:INFO:PyCaret ClassificationExperiment
2023-12-04 20:12:54,887:INFO:Logging name: clf-default-name
2023-12-04 20:12:54,887:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:12:54,887:INFO:version 3.2.0
2023-12-04 20:12:54,887:INFO:Initializing setup()
2023-12-04 20:12:54,887:INFO:self.USI: 7b33
2023-12-04 20:12:54,888:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:12:54,888:INFO:Checking environment
2023-12-04 20:12:54,888:INFO:python_version: 3.9.18
2023-12-04 20:12:54,888:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:12:54,888:INFO:machine: AMD64
2023-12-04 20:12:54,888:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:12:54,888:INFO:Memory: svmem(total=7955767296, available=1103536128, percent=86.1, used=6852231168, free=1103536128)
2023-12-04 20:12:54,888:INFO:Physical Core: 2
2023-12-04 20:12:54,888:INFO:Logical Core: 4
2023-12-04 20:12:54,888:INFO:Checking libraries
2023-12-04 20:12:54,888:INFO:System:
2023-12-04 20:12:54,888:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:12:54,888:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:12:54,890:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:12:54,890:INFO:PyCaret required dependencies:
2023-12-04 20:12:54,890:INFO:                 pip: 23.3.1
2023-12-04 20:12:54,890:INFO:          setuptools: 68.0.0
2023-12-04 20:12:54,890:INFO:             pycaret: 3.2.0
2023-12-04 20:12:54,890:INFO:             IPython: 8.15.0
2023-12-04 20:12:54,891:INFO:          ipywidgets: 7.6.5
2023-12-04 20:12:54,891:INFO:                tqdm: 4.64.1
2023-12-04 20:12:54,893:INFO:               numpy: 1.25.2
2023-12-04 20:12:54,893:INFO:              pandas: 1.5.3
2023-12-04 20:12:54,893:INFO:              jinja2: 3.1.2
2023-12-04 20:12:54,893:INFO:               scipy: 1.9.3
2023-12-04 20:12:54,893:INFO:              joblib: 1.2.0
2023-12-04 20:12:54,893:INFO:             sklearn: 1.2.2
2023-12-04 20:12:54,893:INFO:                pyod: 1.1.2
2023-12-04 20:12:54,894:INFO:            imblearn: 0.11.0
2023-12-04 20:12:54,894:INFO:   category_encoders: 2.6.3
2023-12-04 20:12:54,894:INFO:            lightgbm: 4.1.0
2023-12-04 20:12:54,896:INFO:               numba: 0.58.1
2023-12-04 20:12:54,896:INFO:            requests: 2.28.1
2023-12-04 20:12:54,896:INFO:          matplotlib: 3.6.2
2023-12-04 20:12:54,898:INFO:          scikitplot: 0.3.7
2023-12-04 20:12:54,898:INFO:         yellowbrick: 1.5
2023-12-04 20:12:54,898:INFO:              plotly: 5.18.0
2023-12-04 20:12:54,899:INFO:    plotly-resampler: Not installed
2023-12-04 20:12:54,901:INFO:             kaleido: 0.2.1
2023-12-04 20:12:54,902:INFO:           schemdraw: 0.15
2023-12-04 20:12:54,903:INFO:         statsmodels: 0.14.0
2023-12-04 20:12:54,903:INFO:              sktime: 0.21.1
2023-12-04 20:12:54,903:INFO:               tbats: 1.1.3
2023-12-04 20:12:54,903:INFO:            pmdarima: 2.0.4
2023-12-04 20:12:54,904:INFO:              psutil: 5.9.0
2023-12-04 20:12:54,904:INFO:          markupsafe: 2.1.1
2023-12-04 20:12:54,906:INFO:             pickle5: Not installed
2023-12-04 20:12:54,907:INFO:         cloudpickle: 3.0.0
2023-12-04 20:12:54,907:INFO:         deprecation: 2.1.0
2023-12-04 20:12:54,907:INFO:              xxhash: 3.4.1
2023-12-04 20:12:54,907:INFO:           wurlitzer: Not installed
2023-12-04 20:12:54,907:INFO:PyCaret optional dependencies:
2023-12-04 20:12:54,912:INFO:                shap: 0.43.0
2023-12-04 20:12:54,912:INFO:           interpret: 0.4.4
2023-12-04 20:12:54,912:INFO:                umap: 0.5.5
2023-12-04 20:12:54,912:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:12:54,912:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:12:54,913:INFO:             autoviz: Not installed
2023-12-04 20:12:54,913:INFO:           fairlearn: 0.7.0
2023-12-04 20:12:54,913:INFO:          deepchecks: Not installed
2023-12-04 20:12:54,913:INFO:             xgboost: Not installed
2023-12-04 20:12:54,913:INFO:            catboost: Not installed
2023-12-04 20:12:54,913:INFO:              kmodes: Not installed
2023-12-04 20:12:54,913:INFO:             mlxtend: Not installed
2023-12-04 20:12:54,913:INFO:       statsforecast: Not installed
2023-12-04 20:12:54,914:INFO:        tune_sklearn: Not installed
2023-12-04 20:12:54,914:INFO:                 ray: Not installed
2023-12-04 20:12:54,914:INFO:            hyperopt: Not installed
2023-12-04 20:12:54,914:INFO:              optuna: Not installed
2023-12-04 20:12:54,914:INFO:               skopt: Not installed
2023-12-04 20:12:54,914:INFO:              mlflow: Not installed
2023-12-04 20:12:54,914:INFO:              gradio: Not installed
2023-12-04 20:12:54,915:INFO:             fastapi: Not installed
2023-12-04 20:12:54,915:INFO:             uvicorn: Not installed
2023-12-04 20:12:54,915:INFO:              m2cgen: Not installed
2023-12-04 20:12:54,915:INFO:           evidently: Not installed
2023-12-04 20:12:54,915:INFO:               fugue: Not installed
2023-12-04 20:12:54,915:INFO:           streamlit: 1.26.0
2023-12-04 20:12:54,916:INFO:             prophet: Not installed
2023-12-04 20:12:54,916:INFO:None
2023-12-04 20:12:54,916:INFO:Set up data.
2023-12-04 20:12:55,028:INFO:Set up folding strategy.
2023-12-04 20:12:55,029:INFO:Set up train/test split.
2023-12-04 20:12:55,143:INFO:Set up index.
2023-12-04 20:12:55,146:INFO:Assigning column types.
2023-12-04 20:12:55,161:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:12:55,384:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:12:55,388:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:55,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:55,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:55,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:12:55,675:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:55,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:55,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:55,952:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:12:56,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:56,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:56,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:56,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:12:56,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:56,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:56,534:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:12:56,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:56,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:57,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:57,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:57,011:INFO:Preparing preprocessing pipeline...
2023-12-04 20:12:57,019:INFO:Set up label encoding.
2023-12-04 20:12:57,019:INFO:Set up simple imputation.
2023-12-04 20:12:57,036:INFO:Set up encoding of ordinal features.
2023-12-04 20:12:57,043:INFO:Set up encoding of categorical features.
2023-12-04 20:12:57,044:INFO:Set up column transformation.
2023-12-04 20:12:57,044:INFO:Set up feature normalization.
2023-12-04 20:12:57,047:INFO:Set up column name cleaning.
2023-12-04 20:12:58,054:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:12:58,171:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:12:58,171:INFO:Creating final display dataframe.
2023-12-04 20:12:58,714:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method           quantile
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               7b33
2023-12-04 20:12:59,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:59,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:59,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:59,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:12:59,304:INFO:setup() successfully completed in 4.47s...............
2023-12-04 20:12:59,361:INFO:Initializing create_model()
2023-12-04 20:12:59,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14909B50>, estimator=dt, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:12:59,362:INFO:Checking exceptions
2023-12-04 20:12:59,401:INFO:Importing libraries
2023-12-04 20:12:59,401:INFO:Copying training dataset
2023-12-04 20:12:59,489:INFO:Defining folds
2023-12-04 20:12:59,489:INFO:Declaring metric variables
2023-12-04 20:12:59,551:INFO:Importing untrained model
2023-12-04 20:12:59,561:INFO:Decision Tree Classifier Imported successfully
2023-12-04 20:12:59,580:INFO:Starting cross validation
2023-12-04 20:12:59,614:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:13:05,135:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,271:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,307:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,317:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,416:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,416:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,500:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,600:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,612:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,685:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:05,759:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:07,876:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:07,952:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:08,028:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:08,148:INFO:Calculating mean and std
2023-12-04 20:13:08,152:INFO:Creating metrics dataframe
2023-12-04 20:13:08,163:INFO:Finalizing model
2023-12-04 20:13:10,338:INFO:Uploading results into container
2023-12-04 20:13:10,339:INFO:Uploading model into container now
2023-12-04 20:13:10,367:INFO:_master_model_container: 1
2023-12-04 20:13:10,367:INFO:_display_container: 2
2023-12-04 20:13:10,368:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-04 20:13:10,368:INFO:create_model() successfully completed......................................
2023-12-04 20:13:10,688:INFO:PyCaret ClassificationExperiment
2023-12-04 20:13:10,688:INFO:Logging name: clf-default-name
2023-12-04 20:13:10,688:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:13:10,688:INFO:version 3.2.0
2023-12-04 20:13:10,688:INFO:Initializing setup()
2023-12-04 20:13:10,688:INFO:self.USI: bc54
2023-12-04 20:13:10,688:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:13:10,688:INFO:Checking environment
2023-12-04 20:13:10,689:INFO:python_version: 3.9.18
2023-12-04 20:13:10,689:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:13:10,689:INFO:machine: AMD64
2023-12-04 20:13:10,689:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:13:10,689:INFO:Memory: svmem(total=7955767296, available=1081409536, percent=86.4, used=6874357760, free=1081409536)
2023-12-04 20:13:10,689:INFO:Physical Core: 2
2023-12-04 20:13:10,689:INFO:Logical Core: 4
2023-12-04 20:13:10,690:INFO:Checking libraries
2023-12-04 20:13:10,690:INFO:System:
2023-12-04 20:13:10,690:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:13:10,690:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:13:10,690:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:13:10,690:INFO:PyCaret required dependencies:
2023-12-04 20:13:10,690:INFO:                 pip: 23.3.1
2023-12-04 20:13:10,692:INFO:          setuptools: 68.0.0
2023-12-04 20:13:10,692:INFO:             pycaret: 3.2.0
2023-12-04 20:13:10,692:INFO:             IPython: 8.15.0
2023-12-04 20:13:10,692:INFO:          ipywidgets: 7.6.5
2023-12-04 20:13:10,693:INFO:                tqdm: 4.64.1
2023-12-04 20:13:10,693:INFO:               numpy: 1.25.2
2023-12-04 20:13:10,693:INFO:              pandas: 1.5.3
2023-12-04 20:13:10,693:INFO:              jinja2: 3.1.2
2023-12-04 20:13:10,693:INFO:               scipy: 1.9.3
2023-12-04 20:13:10,693:INFO:              joblib: 1.2.0
2023-12-04 20:13:10,693:INFO:             sklearn: 1.2.2
2023-12-04 20:13:10,693:INFO:                pyod: 1.1.2
2023-12-04 20:13:10,693:INFO:            imblearn: 0.11.0
2023-12-04 20:13:10,693:INFO:   category_encoders: 2.6.3
2023-12-04 20:13:10,693:INFO:            lightgbm: 4.1.0
2023-12-04 20:13:10,693:INFO:               numba: 0.58.1
2023-12-04 20:13:10,694:INFO:            requests: 2.28.1
2023-12-04 20:13:10,694:INFO:          matplotlib: 3.6.2
2023-12-04 20:13:10,694:INFO:          scikitplot: 0.3.7
2023-12-04 20:13:10,694:INFO:         yellowbrick: 1.5
2023-12-04 20:13:10,694:INFO:              plotly: 5.18.0
2023-12-04 20:13:10,694:INFO:    plotly-resampler: Not installed
2023-12-04 20:13:10,694:INFO:             kaleido: 0.2.1
2023-12-04 20:13:10,694:INFO:           schemdraw: 0.15
2023-12-04 20:13:10,695:INFO:         statsmodels: 0.14.0
2023-12-04 20:13:10,695:INFO:              sktime: 0.21.1
2023-12-04 20:13:10,695:INFO:               tbats: 1.1.3
2023-12-04 20:13:10,696:INFO:            pmdarima: 2.0.4
2023-12-04 20:13:10,696:INFO:              psutil: 5.9.0
2023-12-04 20:13:10,696:INFO:          markupsafe: 2.1.1
2023-12-04 20:13:10,696:INFO:             pickle5: Not installed
2023-12-04 20:13:10,696:INFO:         cloudpickle: 3.0.0
2023-12-04 20:13:10,696:INFO:         deprecation: 2.1.0
2023-12-04 20:13:10,696:INFO:              xxhash: 3.4.1
2023-12-04 20:13:10,696:INFO:           wurlitzer: Not installed
2023-12-04 20:13:10,697:INFO:PyCaret optional dependencies:
2023-12-04 20:13:10,697:INFO:                shap: 0.43.0
2023-12-04 20:13:10,698:INFO:           interpret: 0.4.4
2023-12-04 20:13:10,698:INFO:                umap: 0.5.5
2023-12-04 20:13:10,698:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:13:10,698:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:13:10,698:INFO:             autoviz: Not installed
2023-12-04 20:13:10,698:INFO:           fairlearn: 0.7.0
2023-12-04 20:13:10,698:INFO:          deepchecks: Not installed
2023-12-04 20:13:10,699:INFO:             xgboost: Not installed
2023-12-04 20:13:10,699:INFO:            catboost: Not installed
2023-12-04 20:13:10,699:INFO:              kmodes: Not installed
2023-12-04 20:13:10,699:INFO:             mlxtend: Not installed
2023-12-04 20:13:10,699:INFO:       statsforecast: Not installed
2023-12-04 20:13:10,699:INFO:        tune_sklearn: Not installed
2023-12-04 20:13:10,699:INFO:                 ray: Not installed
2023-12-04 20:13:10,699:INFO:            hyperopt: Not installed
2023-12-04 20:13:10,699:INFO:              optuna: Not installed
2023-12-04 20:13:10,699:INFO:               skopt: Not installed
2023-12-04 20:13:10,699:INFO:              mlflow: Not installed
2023-12-04 20:13:10,700:INFO:              gradio: Not installed
2023-12-04 20:13:10,700:INFO:             fastapi: Not installed
2023-12-04 20:13:10,700:INFO:             uvicorn: Not installed
2023-12-04 20:13:10,700:INFO:              m2cgen: Not installed
2023-12-04 20:13:10,700:INFO:           evidently: Not installed
2023-12-04 20:13:10,700:INFO:               fugue: Not installed
2023-12-04 20:13:10,700:INFO:           streamlit: 1.26.0
2023-12-04 20:13:10,701:INFO:             prophet: Not installed
2023-12-04 20:13:10,701:INFO:None
2023-12-04 20:13:10,701:INFO:Set up data.
2023-12-04 20:13:10,781:INFO:Set up folding strategy.
2023-12-04 20:13:10,781:INFO:Set up train/test split.
2023-12-04 20:13:10,844:INFO:Set up index.
2023-12-04 20:13:10,845:INFO:Assigning column types.
2023-12-04 20:13:10,860:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:13:10,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:13:10,951:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:13:11,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,118:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:13:11,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:13:11,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,202:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:13:11,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:13:11,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:13:11,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:11,984:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:13:12,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:12,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:12,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:12,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:12,427:INFO:Preparing preprocessing pipeline...
2023-12-04 20:13:12,431:INFO:Set up label encoding.
2023-12-04 20:13:12,431:INFO:Set up simple imputation.
2023-12-04 20:13:12,455:INFO:Set up encoding of ordinal features.
2023-12-04 20:13:12,463:INFO:Set up encoding of categorical features.
2023-12-04 20:13:12,463:INFO:Set up column transformation.
2023-12-04 20:13:12,464:INFO:Set up feature normalization.
2023-12-04 20:13:12,467:INFO:Set up column name cleaning.
2023-12-04 20:13:13,381:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:13:13,459:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:13:13,459:INFO:Creating final display dataframe.
2023-12-04 20:13:13,984:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method           quantile
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               bc54
2023-12-04 20:13:14,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:14,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:14,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:14,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:13:14,519:INFO:setup() successfully completed in 3.87s...............
2023-12-04 20:13:14,519:INFO:Initializing create_model()
2023-12-04 20:13:14,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A154A47C0>, estimator=knn, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:13:14,520:INFO:Checking exceptions
2023-12-04 20:13:14,568:INFO:Importing libraries
2023-12-04 20:13:14,570:INFO:Copying training dataset
2023-12-04 20:13:14,615:INFO:Defining folds
2023-12-04 20:13:14,616:INFO:Declaring metric variables
2023-12-04 20:13:14,638:INFO:Importing untrained model
2023-12-04 20:13:14,676:INFO:K Neighbors Classifier Imported successfully
2023-12-04 20:13:14,692:INFO:Starting cross validation
2023-12-04 20:13:14,700:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:13:30,805:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:30,912:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,021:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,105:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,147:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,199:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,285:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,322:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,330:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,530:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:31,663:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:39,737:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:39,831:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:39,913:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:13:40,039:INFO:Calculating mean and std
2023-12-04 20:13:40,041:INFO:Creating metrics dataframe
2023-12-04 20:13:40,052:INFO:Finalizing model
2023-12-04 20:13:41,907:INFO:Uploading results into container
2023-12-04 20:13:41,909:INFO:Uploading model into container now
2023-12-04 20:13:41,953:INFO:_master_model_container: 1
2023-12-04 20:13:41,955:INFO:_display_container: 2
2023-12-04 20:13:41,956:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-04 20:13:41,956:INFO:create_model() successfully completed......................................
2023-12-04 20:14:33,299:INFO:Initializing compare_models()
2023-12-04 20:14:33,300:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A154A47C0>, include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A154A47C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 20:14:33,300:INFO:Checking exceptions
2023-12-04 20:49:47,403:INFO:PyCaret ClassificationExperiment
2023-12-04 20:49:47,406:INFO:Logging name: clf-default-name
2023-12-04 20:49:47,407:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:49:47,407:INFO:version 3.2.0
2023-12-04 20:49:47,408:INFO:Initializing setup()
2023-12-04 20:49:47,408:INFO:self.USI: e8c1
2023-12-04 20:49:47,409:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:49:47,409:INFO:Checking environment
2023-12-04 20:49:47,411:INFO:python_version: 3.9.18
2023-12-04 20:49:47,412:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:49:47,413:INFO:machine: AMD64
2023-12-04 20:49:47,413:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:49:47,414:INFO:Memory: svmem(total=7955767296, available=1241784320, percent=84.4, used=6713982976, free=1241784320)
2023-12-04 20:49:47,414:INFO:Physical Core: 2
2023-12-04 20:49:47,414:INFO:Logical Core: 4
2023-12-04 20:49:47,415:INFO:Checking libraries
2023-12-04 20:49:47,415:INFO:System:
2023-12-04 20:49:47,415:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:49:47,415:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:49:47,420:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:49:47,421:INFO:PyCaret required dependencies:
2023-12-04 20:49:47,423:INFO:                 pip: 23.3.1
2023-12-04 20:49:47,425:INFO:          setuptools: 68.0.0
2023-12-04 20:49:47,426:INFO:             pycaret: 3.2.0
2023-12-04 20:49:47,426:INFO:             IPython: 8.15.0
2023-12-04 20:49:47,430:INFO:          ipywidgets: 7.6.5
2023-12-04 20:49:47,431:INFO:                tqdm: 4.64.1
2023-12-04 20:49:47,431:INFO:               numpy: 1.25.2
2023-12-04 20:49:47,431:INFO:              pandas: 1.5.3
2023-12-04 20:49:47,431:INFO:              jinja2: 3.1.2
2023-12-04 20:49:47,431:INFO:               scipy: 1.9.3
2023-12-04 20:49:47,435:INFO:              joblib: 1.2.0
2023-12-04 20:49:47,438:INFO:             sklearn: 1.2.2
2023-12-04 20:49:47,438:INFO:                pyod: 1.1.2
2023-12-04 20:49:47,439:INFO:            imblearn: 0.11.0
2023-12-04 20:49:47,439:INFO:   category_encoders: 2.6.3
2023-12-04 20:49:47,445:INFO:            lightgbm: 4.1.0
2023-12-04 20:49:47,445:INFO:               numba: 0.58.1
2023-12-04 20:49:47,445:INFO:            requests: 2.28.1
2023-12-04 20:49:47,445:INFO:          matplotlib: 3.6.2
2023-12-04 20:49:47,445:INFO:          scikitplot: 0.3.7
2023-12-04 20:49:47,449:INFO:         yellowbrick: 1.5
2023-12-04 20:49:47,450:INFO:              plotly: 5.18.0
2023-12-04 20:49:47,451:INFO:    plotly-resampler: Not installed
2023-12-04 20:49:47,452:INFO:             kaleido: 0.2.1
2023-12-04 20:49:47,452:INFO:           schemdraw: 0.15
2023-12-04 20:49:47,452:INFO:         statsmodels: 0.14.0
2023-12-04 20:49:47,452:INFO:              sktime: 0.21.1
2023-12-04 20:49:47,452:INFO:               tbats: 1.1.3
2023-12-04 20:49:47,452:INFO:            pmdarima: 2.0.4
2023-12-04 20:49:47,454:INFO:              psutil: 5.9.0
2023-12-04 20:49:47,454:INFO:          markupsafe: 2.1.1
2023-12-04 20:49:47,454:INFO:             pickle5: Not installed
2023-12-04 20:49:47,455:INFO:         cloudpickle: 3.0.0
2023-12-04 20:49:47,455:INFO:         deprecation: 2.1.0
2023-12-04 20:49:47,455:INFO:              xxhash: 3.4.1
2023-12-04 20:49:47,455:INFO:           wurlitzer: Not installed
2023-12-04 20:49:47,455:INFO:PyCaret optional dependencies:
2023-12-04 20:49:47,456:INFO:                shap: 0.43.0
2023-12-04 20:49:47,456:INFO:           interpret: 0.4.4
2023-12-04 20:49:47,456:INFO:                umap: 0.5.5
2023-12-04 20:49:47,456:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:49:47,457:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:49:47,457:INFO:             autoviz: Not installed
2023-12-04 20:49:47,457:INFO:           fairlearn: 0.7.0
2023-12-04 20:49:47,457:INFO:          deepchecks: Not installed
2023-12-04 20:49:47,457:INFO:             xgboost: Not installed
2023-12-04 20:49:47,457:INFO:            catboost: Not installed
2023-12-04 20:49:47,457:INFO:              kmodes: Not installed
2023-12-04 20:49:47,457:INFO:             mlxtend: Not installed
2023-12-04 20:49:47,457:INFO:       statsforecast: Not installed
2023-12-04 20:49:47,457:INFO:        tune_sklearn: Not installed
2023-12-04 20:49:47,457:INFO:                 ray: Not installed
2023-12-04 20:49:47,457:INFO:            hyperopt: Not installed
2023-12-04 20:49:47,457:INFO:              optuna: Not installed
2023-12-04 20:49:47,457:INFO:               skopt: Not installed
2023-12-04 20:49:47,458:INFO:              mlflow: Not installed
2023-12-04 20:49:47,458:INFO:              gradio: Not installed
2023-12-04 20:49:47,458:INFO:             fastapi: Not installed
2023-12-04 20:49:47,458:INFO:             uvicorn: Not installed
2023-12-04 20:49:47,458:INFO:              m2cgen: Not installed
2023-12-04 20:49:47,458:INFO:           evidently: Not installed
2023-12-04 20:49:47,458:INFO:               fugue: Not installed
2023-12-04 20:49:47,458:INFO:           streamlit: 1.26.0
2023-12-04 20:49:47,458:INFO:             prophet: Not installed
2023-12-04 20:49:47,458:INFO:None
2023-12-04 20:49:47,458:INFO:Set up data.
2023-12-04 20:49:47,615:INFO:Set up folding strategy.
2023-12-04 20:49:47,618:INFO:Set up train/test split.
2023-12-04 20:49:47,735:INFO:Set up index.
2023-12-04 20:49:47,742:INFO:Assigning column types.
2023-12-04 20:49:47,775:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:49:47,911:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:49:47,916:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:49:47,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:47,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:48,097:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:49:48,097:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:49:48,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:48,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:48,172:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:49:48,355:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:49:48,506:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:48,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:48,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:49:49,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:49,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:49,087:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:49:49,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:49,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:49,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:49,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:49:49,577:INFO:Preparing preprocessing pipeline...
2023-12-04 20:49:49,581:INFO:Set up label encoding.
2023-12-04 20:49:49,581:INFO:Set up simple imputation.
2023-12-04 20:49:49,597:INFO:Set up encoding of ordinal features.
2023-12-04 20:49:49,605:INFO:Set up encoding of categorical features.
2023-12-04 20:49:49,605:INFO:Set up imbalanced handling.
2023-12-04 20:49:49,605:INFO:Set up column transformation.
2023-12-04 20:49:49,612:INFO:Set up column name cleaning.
2023-12-04 20:49:57,138:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:49:57,227:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:49:57,227:INFO:Creating final display dataframe.
2023-12-04 20:50:00,275:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               e8c1
2023-12-04 20:50:00,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:50:00,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:50:00,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:50:00,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:50:00,771:INFO:setup() successfully completed in 13.48s...............
2023-12-04 20:50:00,826:INFO:Initializing create_model()
2023-12-04 20:50:00,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14259670>, estimator=rf, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:50:00,826:INFO:Checking exceptions
2023-12-04 20:50:00,869:INFO:Importing libraries
2023-12-04 20:50:00,869:INFO:Copying training dataset
2023-12-04 20:50:01,018:INFO:Defining folds
2023-12-04 20:50:01,018:INFO:Declaring metric variables
2023-12-04 20:50:01,026:INFO:Importing untrained model
2023-12-04 20:50:01,035:INFO:Random Forest Classifier Imported successfully
2023-12-04 20:50:01,075:INFO:Starting cross validation
2023-12-04 20:50:01,085:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:50:42,450:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:42,461:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:42,606:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:42,614:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:42,834:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:42,869:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:43,302:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:43,514:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:43,578:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:43,682:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:43,723:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:43,843:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:54,291:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:54,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:54,452:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:50:54,671:INFO:Calculating mean and std
2023-12-04 20:50:54,674:INFO:Creating metrics dataframe
2023-12-04 20:50:54,688:INFO:Finalizing model
2023-12-04 20:51:07,444:INFO:Uploading results into container
2023-12-04 20:51:07,449:INFO:Uploading model into container now
2023-12-04 20:51:07,490:INFO:_master_model_container: 1
2023-12-04 20:51:07,490:INFO:_display_container: 2
2023-12-04 20:51:07,492:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 20:51:07,492:INFO:create_model() successfully completed......................................
2023-12-04 20:51:09,484:INFO:PyCaret ClassificationExperiment
2023-12-04 20:51:09,485:INFO:Logging name: clf-default-name
2023-12-04 20:51:09,485:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:51:09,485:INFO:version 3.2.0
2023-12-04 20:51:09,485:INFO:Initializing setup()
2023-12-04 20:51:09,485:INFO:self.USI: d6ad
2023-12-04 20:51:09,485:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:51:09,486:INFO:Checking environment
2023-12-04 20:51:09,486:INFO:python_version: 3.9.18
2023-12-04 20:51:09,486:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:51:09,486:INFO:machine: AMD64
2023-12-04 20:51:09,486:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:51:09,486:INFO:Memory: svmem(total=7955767296, available=590372864, percent=92.6, used=7365394432, free=590372864)
2023-12-04 20:51:09,486:INFO:Physical Core: 2
2023-12-04 20:51:09,487:INFO:Logical Core: 4
2023-12-04 20:51:09,487:INFO:Checking libraries
2023-12-04 20:51:09,487:INFO:System:
2023-12-04 20:51:09,487:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:51:09,487:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:51:09,487:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:51:09,487:INFO:PyCaret required dependencies:
2023-12-04 20:51:09,489:INFO:                 pip: 23.3.1
2023-12-04 20:51:09,489:INFO:          setuptools: 68.0.0
2023-12-04 20:51:09,489:INFO:             pycaret: 3.2.0
2023-12-04 20:51:09,490:INFO:             IPython: 8.15.0
2023-12-04 20:51:09,490:INFO:          ipywidgets: 7.6.5
2023-12-04 20:51:09,490:INFO:                tqdm: 4.64.1
2023-12-04 20:51:09,490:INFO:               numpy: 1.25.2
2023-12-04 20:51:09,490:INFO:              pandas: 1.5.3
2023-12-04 20:51:09,490:INFO:              jinja2: 3.1.2
2023-12-04 20:51:09,491:INFO:               scipy: 1.9.3
2023-12-04 20:51:09,491:INFO:              joblib: 1.2.0
2023-12-04 20:51:09,491:INFO:             sklearn: 1.2.2
2023-12-04 20:51:09,491:INFO:                pyod: 1.1.2
2023-12-04 20:51:09,491:INFO:            imblearn: 0.11.0
2023-12-04 20:51:09,491:INFO:   category_encoders: 2.6.3
2023-12-04 20:51:09,491:INFO:            lightgbm: 4.1.0
2023-12-04 20:51:09,492:INFO:               numba: 0.58.1
2023-12-04 20:51:09,492:INFO:            requests: 2.28.1
2023-12-04 20:51:09,492:INFO:          matplotlib: 3.6.2
2023-12-04 20:51:09,492:INFO:          scikitplot: 0.3.7
2023-12-04 20:51:09,492:INFO:         yellowbrick: 1.5
2023-12-04 20:51:09,492:INFO:              plotly: 5.18.0
2023-12-04 20:51:09,493:INFO:    plotly-resampler: Not installed
2023-12-04 20:51:09,493:INFO:             kaleido: 0.2.1
2023-12-04 20:51:09,493:INFO:           schemdraw: 0.15
2023-12-04 20:51:09,493:INFO:         statsmodels: 0.14.0
2023-12-04 20:51:09,493:INFO:              sktime: 0.21.1
2023-12-04 20:51:09,494:INFO:               tbats: 1.1.3
2023-12-04 20:51:09,494:INFO:            pmdarima: 2.0.4
2023-12-04 20:51:09,494:INFO:              psutil: 5.9.0
2023-12-04 20:51:09,494:INFO:          markupsafe: 2.1.1
2023-12-04 20:51:09,494:INFO:             pickle5: Not installed
2023-12-04 20:51:09,494:INFO:         cloudpickle: 3.0.0
2023-12-04 20:51:09,494:INFO:         deprecation: 2.1.0
2023-12-04 20:51:09,495:INFO:              xxhash: 3.4.1
2023-12-04 20:51:09,495:INFO:           wurlitzer: Not installed
2023-12-04 20:51:09,495:INFO:PyCaret optional dependencies:
2023-12-04 20:51:09,495:INFO:                shap: 0.43.0
2023-12-04 20:51:09,496:INFO:           interpret: 0.4.4
2023-12-04 20:51:09,496:INFO:                umap: 0.5.5
2023-12-04 20:51:09,496:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:51:09,496:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:51:09,496:INFO:             autoviz: Not installed
2023-12-04 20:51:09,496:INFO:           fairlearn: 0.7.0
2023-12-04 20:51:09,497:INFO:          deepchecks: Not installed
2023-12-04 20:51:09,497:INFO:             xgboost: Not installed
2023-12-04 20:51:09,497:INFO:            catboost: Not installed
2023-12-04 20:51:09,497:INFO:              kmodes: Not installed
2023-12-04 20:51:09,497:INFO:             mlxtend: Not installed
2023-12-04 20:51:09,497:INFO:       statsforecast: Not installed
2023-12-04 20:51:09,497:INFO:        tune_sklearn: Not installed
2023-12-04 20:51:09,497:INFO:                 ray: Not installed
2023-12-04 20:51:09,497:INFO:            hyperopt: Not installed
2023-12-04 20:51:09,498:INFO:              optuna: Not installed
2023-12-04 20:51:09,498:INFO:               skopt: Not installed
2023-12-04 20:51:09,499:INFO:              mlflow: Not installed
2023-12-04 20:51:09,499:INFO:              gradio: Not installed
2023-12-04 20:51:09,499:INFO:             fastapi: Not installed
2023-12-04 20:51:09,499:INFO:             uvicorn: Not installed
2023-12-04 20:51:09,499:INFO:              m2cgen: Not installed
2023-12-04 20:51:09,499:INFO:           evidently: Not installed
2023-12-04 20:51:09,499:INFO:               fugue: Not installed
2023-12-04 20:51:09,500:INFO:           streamlit: 1.26.0
2023-12-04 20:51:09,500:INFO:             prophet: Not installed
2023-12-04 20:51:09,500:INFO:None
2023-12-04 20:51:09,500:INFO:Set up data.
2023-12-04 20:51:09,630:INFO:Set up folding strategy.
2023-12-04 20:51:09,630:INFO:Set up train/test split.
2023-12-04 20:51:09,732:INFO:Set up index.
2023-12-04 20:51:09,733:INFO:Assigning column types.
2023-12-04 20:51:09,757:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:51:09,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:51:09,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:09,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:09,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:51:10,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:10,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,216:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:51:10,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:10,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:10,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,647:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:51:10,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:10,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:11,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:11,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:11,074:INFO:Preparing preprocessing pipeline...
2023-12-04 20:51:11,083:INFO:Set up label encoding.
2023-12-04 20:51:11,083:INFO:Set up simple imputation.
2023-12-04 20:51:11,107:INFO:Set up encoding of ordinal features.
2023-12-04 20:51:11,116:INFO:Set up encoding of categorical features.
2023-12-04 20:51:11,116:INFO:Set up column transformation.
2023-12-04 20:51:11,116:INFO:Set up feature normalization.
2023-12-04 20:51:11,116:INFO:Set up column name cleaning.
2023-12-04 20:51:12,100:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:51:12,197:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:51:12,197:INFO:Creating final display dataframe.
2023-12-04 20:51:12,742:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method           quantile
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               d6ad
2023-12-04 20:51:12,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:12,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:13,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:13,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:13,120:INFO:setup() successfully completed in 3.68s...............
2023-12-04 20:51:13,180:INFO:Initializing create_model()
2023-12-04 20:51:13,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15985280>, estimator=dt, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:51:13,180:INFO:Checking exceptions
2023-12-04 20:51:13,243:INFO:Importing libraries
2023-12-04 20:51:13,243:INFO:Copying training dataset
2023-12-04 20:51:13,298:INFO:Defining folds
2023-12-04 20:51:13,298:INFO:Declaring metric variables
2023-12-04 20:51:13,312:INFO:Importing untrained model
2023-12-04 20:51:13,326:INFO:Decision Tree Classifier Imported successfully
2023-12-04 20:51:13,344:INFO:Starting cross validation
2023-12-04 20:51:13,358:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:51:17,936:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:17,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,003:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,036:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,059:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,113:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,140:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,164:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,190:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,295:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,335:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:18,356:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:20,923:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:21,005:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:21,162:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:21,290:INFO:Calculating mean and std
2023-12-04 20:51:21,292:INFO:Creating metrics dataframe
2023-12-04 20:51:21,306:INFO:Finalizing model
2023-12-04 20:51:24,029:INFO:Uploading results into container
2023-12-04 20:51:24,031:INFO:Uploading model into container now
2023-12-04 20:51:24,058:INFO:_master_model_container: 1
2023-12-04 20:51:24,059:INFO:_display_container: 2
2023-12-04 20:51:24,060:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-04 20:51:24,060:INFO:create_model() successfully completed......................................
2023-12-04 20:51:24,422:INFO:PyCaret ClassificationExperiment
2023-12-04 20:51:24,422:INFO:Logging name: clf-default-name
2023-12-04 20:51:24,422:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:51:24,422:INFO:version 3.2.0
2023-12-04 20:51:24,422:INFO:Initializing setup()
2023-12-04 20:51:24,424:INFO:self.USI: bc72
2023-12-04 20:51:24,424:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:51:24,424:INFO:Checking environment
2023-12-04 20:51:24,424:INFO:python_version: 3.9.18
2023-12-04 20:51:24,424:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:51:24,424:INFO:machine: AMD64
2023-12-04 20:51:24,424:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:51:24,424:INFO:Memory: svmem(total=7955767296, available=624640000, percent=92.1, used=7331127296, free=624640000)
2023-12-04 20:51:24,428:INFO:Physical Core: 2
2023-12-04 20:51:24,428:INFO:Logical Core: 4
2023-12-04 20:51:24,429:INFO:Checking libraries
2023-12-04 20:51:24,429:INFO:System:
2023-12-04 20:51:24,429:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:51:24,429:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:51:24,430:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:51:24,430:INFO:PyCaret required dependencies:
2023-12-04 20:51:24,431:INFO:                 pip: 23.3.1
2023-12-04 20:51:24,431:INFO:          setuptools: 68.0.0
2023-12-04 20:51:24,431:INFO:             pycaret: 3.2.0
2023-12-04 20:51:24,431:INFO:             IPython: 8.15.0
2023-12-04 20:51:24,431:INFO:          ipywidgets: 7.6.5
2023-12-04 20:51:24,431:INFO:                tqdm: 4.64.1
2023-12-04 20:51:24,431:INFO:               numpy: 1.25.2
2023-12-04 20:51:24,431:INFO:              pandas: 1.5.3
2023-12-04 20:51:24,431:INFO:              jinja2: 3.1.2
2023-12-04 20:51:24,431:INFO:               scipy: 1.9.3
2023-12-04 20:51:24,431:INFO:              joblib: 1.2.0
2023-12-04 20:51:24,431:INFO:             sklearn: 1.2.2
2023-12-04 20:51:24,431:INFO:                pyod: 1.1.2
2023-12-04 20:51:24,431:INFO:            imblearn: 0.11.0
2023-12-04 20:51:24,431:INFO:   category_encoders: 2.6.3
2023-12-04 20:51:24,431:INFO:            lightgbm: 4.1.0
2023-12-04 20:51:24,431:INFO:               numba: 0.58.1
2023-12-04 20:51:24,437:INFO:            requests: 2.28.1
2023-12-04 20:51:24,437:INFO:          matplotlib: 3.6.2
2023-12-04 20:51:24,437:INFO:          scikitplot: 0.3.7
2023-12-04 20:51:24,437:INFO:         yellowbrick: 1.5
2023-12-04 20:51:24,437:INFO:              plotly: 5.18.0
2023-12-04 20:51:24,437:INFO:    plotly-resampler: Not installed
2023-12-04 20:51:24,437:INFO:             kaleido: 0.2.1
2023-12-04 20:51:24,437:INFO:           schemdraw: 0.15
2023-12-04 20:51:24,437:INFO:         statsmodels: 0.14.0
2023-12-04 20:51:24,437:INFO:              sktime: 0.21.1
2023-12-04 20:51:24,437:INFO:               tbats: 1.1.3
2023-12-04 20:51:24,437:INFO:            pmdarima: 2.0.4
2023-12-04 20:51:24,437:INFO:              psutil: 5.9.0
2023-12-04 20:51:24,437:INFO:          markupsafe: 2.1.1
2023-12-04 20:51:24,437:INFO:             pickle5: Not installed
2023-12-04 20:51:24,437:INFO:         cloudpickle: 3.0.0
2023-12-04 20:51:24,437:INFO:         deprecation: 2.1.0
2023-12-04 20:51:24,437:INFO:              xxhash: 3.4.1
2023-12-04 20:51:24,441:INFO:           wurlitzer: Not installed
2023-12-04 20:51:24,441:INFO:PyCaret optional dependencies:
2023-12-04 20:51:24,441:INFO:                shap: 0.43.0
2023-12-04 20:51:24,441:INFO:           interpret: 0.4.4
2023-12-04 20:51:24,441:INFO:                umap: 0.5.5
2023-12-04 20:51:24,441:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:51:24,441:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:51:24,441:INFO:             autoviz: Not installed
2023-12-04 20:51:24,441:INFO:           fairlearn: 0.7.0
2023-12-04 20:51:24,441:INFO:          deepchecks: Not installed
2023-12-04 20:51:24,441:INFO:             xgboost: Not installed
2023-12-04 20:51:24,441:INFO:            catboost: Not installed
2023-12-04 20:51:24,443:INFO:              kmodes: Not installed
2023-12-04 20:51:24,443:INFO:             mlxtend: Not installed
2023-12-04 20:51:24,444:INFO:       statsforecast: Not installed
2023-12-04 20:51:24,444:INFO:        tune_sklearn: Not installed
2023-12-04 20:51:24,444:INFO:                 ray: Not installed
2023-12-04 20:51:24,445:INFO:            hyperopt: Not installed
2023-12-04 20:51:24,445:INFO:              optuna: Not installed
2023-12-04 20:51:24,445:INFO:               skopt: Not installed
2023-12-04 20:51:24,445:INFO:              mlflow: Not installed
2023-12-04 20:51:24,446:INFO:              gradio: Not installed
2023-12-04 20:51:24,446:INFO:             fastapi: Not installed
2023-12-04 20:51:24,446:INFO:             uvicorn: Not installed
2023-12-04 20:51:24,446:INFO:              m2cgen: Not installed
2023-12-04 20:51:24,446:INFO:           evidently: Not installed
2023-12-04 20:51:24,447:INFO:               fugue: Not installed
2023-12-04 20:51:24,447:INFO:           streamlit: 1.26.0
2023-12-04 20:51:24,447:INFO:             prophet: Not installed
2023-12-04 20:51:24,448:INFO:None
2023-12-04 20:51:24,448:INFO:Set up data.
2023-12-04 20:51:24,545:INFO:Set up folding strategy.
2023-12-04 20:51:24,546:INFO:Set up train/test split.
2023-12-04 20:51:24,605:INFO:Set up index.
2023-12-04 20:51:24,605:INFO:Assigning column types.
2023-12-04 20:51:24,622:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:51:24,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:51:24,805:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:24,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:24,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:24,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:51:24,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:24,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:24,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:24,998:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:51:25,139:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:25,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,477:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:51:25,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,552:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:51:25,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:25,921:INFO:Preparing preprocessing pipeline...
2023-12-04 20:51:25,928:INFO:Set up label encoding.
2023-12-04 20:51:25,928:INFO:Set up simple imputation.
2023-12-04 20:51:25,938:INFO:Set up encoding of ordinal features.
2023-12-04 20:51:25,946:INFO:Set up encoding of categorical features.
2023-12-04 20:51:25,946:INFO:Set up column transformation.
2023-12-04 20:51:25,946:INFO:Set up feature normalization.
2023-12-04 20:51:25,951:INFO:Set up column name cleaning.
2023-12-04 20:51:26,953:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:51:27,005:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:51:27,005:INFO:Creating final display dataframe.
2023-12-04 20:51:27,557:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (39073, 67)
6   Transformed train set shape        (27351, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Transformation               True
18        Transformation method           quantile
19                    Normalize               True
20             Normalize method             zscore
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               bc72
2023-12-04 20:51:27,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:27,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:28,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:28,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:51:28,012:INFO:setup() successfully completed in 3.67s...............
2023-12-04 20:51:28,104:INFO:Initializing create_model()
2023-12-04 20:51:28,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14909B50>, estimator=knn, fold=5, round=2, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:51:28,104:INFO:Checking exceptions
2023-12-04 20:51:28,148:INFO:Importing libraries
2023-12-04 20:51:28,148:INFO:Copying training dataset
2023-12-04 20:51:28,196:INFO:Defining folds
2023-12-04 20:51:28,202:INFO:Declaring metric variables
2023-12-04 20:51:28,210:INFO:Importing untrained model
2023-12-04 20:51:28,226:INFO:K Neighbors Classifier Imported successfully
2023-12-04 20:51:28,252:INFO:Starting cross validation
2023-12-04 20:51:28,271:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 20:51:44,945:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,037:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,118:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,119:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,191:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,243:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,251:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,317:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,353:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,435:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:45,461:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:53,942:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:54,022:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:54,170:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 20:51:54,287:INFO:Calculating mean and std
2023-12-04 20:51:54,290:INFO:Creating metrics dataframe
2023-12-04 20:51:54,301:INFO:Finalizing model
2023-12-04 20:51:56,227:INFO:Uploading results into container
2023-12-04 20:51:56,228:INFO:Uploading model into container now
2023-12-04 20:51:56,253:INFO:_master_model_container: 1
2023-12-04 20:51:56,253:INFO:_display_container: 2
2023-12-04 20:51:56,254:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-04 20:51:56,263:INFO:create_model() successfully completed......................................
2023-12-04 20:57:45,151:INFO:PyCaret ClassificationExperiment
2023-12-04 20:57:45,152:INFO:Logging name: clf-default-name
2023-12-04 20:57:45,153:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:57:45,153:INFO:version 3.2.0
2023-12-04 20:57:45,153:INFO:Initializing setup()
2023-12-04 20:57:45,154:INFO:self.USI: f3d0
2023-12-04 20:57:45,154:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:57:45,154:INFO:Checking environment
2023-12-04 20:57:45,154:INFO:python_version: 3.9.18
2023-12-04 20:57:45,154:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:57:45,154:INFO:machine: AMD64
2023-12-04 20:57:45,154:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:57:45,154:INFO:Memory: svmem(total=7955767296, available=1114718208, percent=86.0, used=6841049088, free=1114718208)
2023-12-04 20:57:45,154:INFO:Physical Core: 2
2023-12-04 20:57:45,154:INFO:Logical Core: 4
2023-12-04 20:57:45,154:INFO:Checking libraries
2023-12-04 20:57:45,154:INFO:System:
2023-12-04 20:57:45,154:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:57:45,154:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:57:45,154:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:57:45,154:INFO:PyCaret required dependencies:
2023-12-04 20:57:45,154:INFO:                 pip: 23.3.1
2023-12-04 20:57:45,154:INFO:          setuptools: 68.0.0
2023-12-04 20:57:45,154:INFO:             pycaret: 3.2.0
2023-12-04 20:57:45,154:INFO:             IPython: 8.15.0
2023-12-04 20:57:45,154:INFO:          ipywidgets: 7.6.5
2023-12-04 20:57:45,154:INFO:                tqdm: 4.64.1
2023-12-04 20:57:45,154:INFO:               numpy: 1.25.2
2023-12-04 20:57:45,154:INFO:              pandas: 1.5.3
2023-12-04 20:57:45,154:INFO:              jinja2: 3.1.2
2023-12-04 20:57:45,159:INFO:               scipy: 1.9.3
2023-12-04 20:57:45,159:INFO:              joblib: 1.2.0
2023-12-04 20:57:45,159:INFO:             sklearn: 1.2.2
2023-12-04 20:57:45,159:INFO:                pyod: 1.1.2
2023-12-04 20:57:45,159:INFO:            imblearn: 0.11.0
2023-12-04 20:57:45,159:INFO:   category_encoders: 2.6.3
2023-12-04 20:57:45,159:INFO:            lightgbm: 4.1.0
2023-12-04 20:57:45,159:INFO:               numba: 0.58.1
2023-12-04 20:57:45,159:INFO:            requests: 2.28.1
2023-12-04 20:57:45,159:INFO:          matplotlib: 3.6.2
2023-12-04 20:57:45,159:INFO:          scikitplot: 0.3.7
2023-12-04 20:57:45,159:INFO:         yellowbrick: 1.5
2023-12-04 20:57:45,159:INFO:              plotly: 5.18.0
2023-12-04 20:57:45,159:INFO:    plotly-resampler: Not installed
2023-12-04 20:57:45,159:INFO:             kaleido: 0.2.1
2023-12-04 20:57:45,159:INFO:           schemdraw: 0.15
2023-12-04 20:57:45,159:INFO:         statsmodels: 0.14.0
2023-12-04 20:57:45,159:INFO:              sktime: 0.21.1
2023-12-04 20:57:45,159:INFO:               tbats: 1.1.3
2023-12-04 20:57:45,159:INFO:            pmdarima: 2.0.4
2023-12-04 20:57:45,159:INFO:              psutil: 5.9.0
2023-12-04 20:57:45,159:INFO:          markupsafe: 2.1.1
2023-12-04 20:57:45,159:INFO:             pickle5: Not installed
2023-12-04 20:57:45,159:INFO:         cloudpickle: 3.0.0
2023-12-04 20:57:45,159:INFO:         deprecation: 2.1.0
2023-12-04 20:57:45,159:INFO:              xxhash: 3.4.1
2023-12-04 20:57:45,159:INFO:           wurlitzer: Not installed
2023-12-04 20:57:45,159:INFO:PyCaret optional dependencies:
2023-12-04 20:57:45,159:INFO:                shap: 0.43.0
2023-12-04 20:57:45,159:INFO:           interpret: 0.4.4
2023-12-04 20:57:45,159:INFO:                umap: 0.5.5
2023-12-04 20:57:45,159:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:57:45,164:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:57:45,164:INFO:             autoviz: Not installed
2023-12-04 20:57:45,165:INFO:           fairlearn: 0.7.0
2023-12-04 20:57:45,165:INFO:          deepchecks: Not installed
2023-12-04 20:57:45,165:INFO:             xgboost: Not installed
2023-12-04 20:57:45,165:INFO:            catboost: Not installed
2023-12-04 20:57:45,165:INFO:              kmodes: Not installed
2023-12-04 20:57:45,165:INFO:             mlxtend: Not installed
2023-12-04 20:57:45,165:INFO:       statsforecast: Not installed
2023-12-04 20:57:45,165:INFO:        tune_sklearn: Not installed
2023-12-04 20:57:45,165:INFO:                 ray: Not installed
2023-12-04 20:57:45,165:INFO:            hyperopt: Not installed
2023-12-04 20:57:45,165:INFO:              optuna: Not installed
2023-12-04 20:57:45,165:INFO:               skopt: Not installed
2023-12-04 20:57:45,165:INFO:              mlflow: Not installed
2023-12-04 20:57:45,165:INFO:              gradio: Not installed
2023-12-04 20:57:45,165:INFO:             fastapi: Not installed
2023-12-04 20:57:45,165:INFO:             uvicorn: Not installed
2023-12-04 20:57:45,165:INFO:              m2cgen: Not installed
2023-12-04 20:57:45,165:INFO:           evidently: Not installed
2023-12-04 20:57:45,165:INFO:               fugue: Not installed
2023-12-04 20:57:45,165:INFO:           streamlit: 1.26.0
2023-12-04 20:57:45,165:INFO:             prophet: Not installed
2023-12-04 20:57:45,165:INFO:None
2023-12-04 20:57:45,165:INFO:Set up data.
2023-12-04 20:57:45,272:INFO:Set up folding strategy.
2023-12-04 20:57:45,272:INFO:Set up train/test split.
2023-12-04 20:57:45,355:INFO:Set up index.
2023-12-04 20:57:45,358:INFO:Assigning column types.
2023-12-04 20:57:45,376:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:57:45,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:57:45,499:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:52,272:INFO:PyCaret ClassificationExperiment
2023-12-04 20:57:52,272:INFO:Logging name: clf-default-name
2023-12-04 20:57:52,272:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:57:52,272:INFO:version 3.2.0
2023-12-04 20:57:52,272:INFO:Initializing setup()
2023-12-04 20:57:52,272:INFO:self.USI: 1947
2023-12-04 20:57:52,272:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:57:52,272:INFO:Checking environment
2023-12-04 20:57:52,272:INFO:python_version: 3.9.18
2023-12-04 20:57:52,272:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:57:52,273:INFO:machine: AMD64
2023-12-04 20:57:52,273:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:57:52,273:INFO:Memory: svmem(total=7955767296, available=1109975040, percent=86.0, used=6845792256, free=1109975040)
2023-12-04 20:57:52,273:INFO:Physical Core: 2
2023-12-04 20:57:52,273:INFO:Logical Core: 4
2023-12-04 20:57:52,273:INFO:Checking libraries
2023-12-04 20:57:52,273:INFO:System:
2023-12-04 20:57:52,273:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:57:52,273:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:57:52,273:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:57:52,273:INFO:PyCaret required dependencies:
2023-12-04 20:57:52,273:INFO:                 pip: 23.3.1
2023-12-04 20:57:52,273:INFO:          setuptools: 68.0.0
2023-12-04 20:57:52,273:INFO:             pycaret: 3.2.0
2023-12-04 20:57:52,273:INFO:             IPython: 8.15.0
2023-12-04 20:57:52,273:INFO:          ipywidgets: 7.6.5
2023-12-04 20:57:52,273:INFO:                tqdm: 4.64.1
2023-12-04 20:57:52,273:INFO:               numpy: 1.25.2
2023-12-04 20:57:52,273:INFO:              pandas: 1.5.3
2023-12-04 20:57:52,273:INFO:              jinja2: 3.1.2
2023-12-04 20:57:52,273:INFO:               scipy: 1.9.3
2023-12-04 20:57:52,273:INFO:              joblib: 1.2.0
2023-12-04 20:57:52,273:INFO:             sklearn: 1.2.2
2023-12-04 20:57:52,273:INFO:                pyod: 1.1.2
2023-12-04 20:57:52,273:INFO:            imblearn: 0.11.0
2023-12-04 20:57:52,273:INFO:   category_encoders: 2.6.3
2023-12-04 20:57:52,273:INFO:            lightgbm: 4.1.0
2023-12-04 20:57:52,273:INFO:               numba: 0.58.1
2023-12-04 20:57:52,273:INFO:            requests: 2.28.1
2023-12-04 20:57:52,275:INFO:          matplotlib: 3.6.2
2023-12-04 20:57:52,275:INFO:          scikitplot: 0.3.7
2023-12-04 20:57:52,275:INFO:         yellowbrick: 1.5
2023-12-04 20:57:52,275:INFO:              plotly: 5.18.0
2023-12-04 20:57:52,275:INFO:    plotly-resampler: Not installed
2023-12-04 20:57:52,275:INFO:             kaleido: 0.2.1
2023-12-04 20:57:52,275:INFO:           schemdraw: 0.15
2023-12-04 20:57:52,275:INFO:         statsmodels: 0.14.0
2023-12-04 20:57:52,275:INFO:              sktime: 0.21.1
2023-12-04 20:57:52,275:INFO:               tbats: 1.1.3
2023-12-04 20:57:52,275:INFO:            pmdarima: 2.0.4
2023-12-04 20:57:52,275:INFO:              psutil: 5.9.0
2023-12-04 20:57:52,275:INFO:          markupsafe: 2.1.1
2023-12-04 20:57:52,275:INFO:             pickle5: Not installed
2023-12-04 20:57:52,275:INFO:         cloudpickle: 3.0.0
2023-12-04 20:57:52,275:INFO:         deprecation: 2.1.0
2023-12-04 20:57:52,275:INFO:              xxhash: 3.4.1
2023-12-04 20:57:52,276:INFO:           wurlitzer: Not installed
2023-12-04 20:57:52,276:INFO:PyCaret optional dependencies:
2023-12-04 20:57:52,277:INFO:                shap: 0.43.0
2023-12-04 20:57:52,277:INFO:           interpret: 0.4.4
2023-12-04 20:57:52,277:INFO:                umap: 0.5.5
2023-12-04 20:57:52,277:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:57:52,277:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:57:52,277:INFO:             autoviz: Not installed
2023-12-04 20:57:52,277:INFO:           fairlearn: 0.7.0
2023-12-04 20:57:52,278:INFO:          deepchecks: Not installed
2023-12-04 20:57:52,278:INFO:             xgboost: Not installed
2023-12-04 20:57:52,278:INFO:            catboost: Not installed
2023-12-04 20:57:52,278:INFO:              kmodes: Not installed
2023-12-04 20:57:52,278:INFO:             mlxtend: Not installed
2023-12-04 20:57:52,278:INFO:       statsforecast: Not installed
2023-12-04 20:57:52,278:INFO:        tune_sklearn: Not installed
2023-12-04 20:57:52,278:INFO:                 ray: Not installed
2023-12-04 20:57:52,278:INFO:            hyperopt: Not installed
2023-12-04 20:57:52,278:INFO:              optuna: Not installed
2023-12-04 20:57:52,278:INFO:               skopt: Not installed
2023-12-04 20:57:52,278:INFO:              mlflow: Not installed
2023-12-04 20:57:52,278:INFO:              gradio: Not installed
2023-12-04 20:57:52,278:INFO:             fastapi: Not installed
2023-12-04 20:57:52,278:INFO:             uvicorn: Not installed
2023-12-04 20:57:52,278:INFO:              m2cgen: Not installed
2023-12-04 20:57:52,278:INFO:           evidently: Not installed
2023-12-04 20:57:52,278:INFO:               fugue: Not installed
2023-12-04 20:57:52,278:INFO:           streamlit: 1.26.0
2023-12-04 20:57:52,278:INFO:             prophet: Not installed
2023-12-04 20:57:52,278:INFO:None
2023-12-04 20:57:52,278:INFO:Set up data.
2023-12-04 20:57:52,359:INFO:Set up folding strategy.
2023-12-04 20:57:52,359:INFO:Set up train/test split.
2023-12-04 20:57:52,426:INFO:Set up index.
2023-12-04 20:57:52,427:INFO:Assigning column types.
2023-12-04 20:57:52,432:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:57:52,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:57:52,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:52,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:52,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:52,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:57:52,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:52,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:52,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:52,879:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:57:52,959:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:53,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:53,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,245:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:57:53,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:53,838:INFO:Preparing preprocessing pipeline...
2023-12-04 20:57:53,842:INFO:Set up label encoding.
2023-12-04 20:57:53,842:INFO:Set up simple imputation.
2023-12-04 20:57:53,850:INFO:Set up encoding of ordinal features.
2023-12-04 20:57:53,858:INFO:Set up encoding of categorical features.
2023-12-04 20:57:53,858:INFO:Set up imbalanced handling.
2023-12-04 20:57:53,861:INFO:Set up column transformation.
2023-12-04 20:57:53,862:INFO:Set up column name cleaning.
2023-12-04 20:57:55,094:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:57:55,168:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:57:55,169:INFO:Creating final display dataframe.
2023-12-04 20:57:57,332:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               1947
2023-12-04 20:57:57,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:57,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:57,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:57,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:57,801:INFO:setup() successfully completed in 5.6s...............
2023-12-04 20:57:57,903:INFO:PyCaret ClassificationExperiment
2023-12-04 20:57:57,903:INFO:Logging name: clf-default-name
2023-12-04 20:57:57,903:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:57:57,904:INFO:version 3.2.0
2023-12-04 20:57:57,904:INFO:Initializing setup()
2023-12-04 20:57:57,904:INFO:self.USI: 4159
2023-12-04 20:57:57,904:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:57:57,904:INFO:Checking environment
2023-12-04 20:57:57,904:INFO:python_version: 3.9.18
2023-12-04 20:57:57,904:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:57:57,904:INFO:machine: AMD64
2023-12-04 20:57:57,904:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:57:57,905:INFO:Memory: svmem(total=7955767296, available=1102548992, percent=86.1, used=6853218304, free=1102548992)
2023-12-04 20:57:57,905:INFO:Physical Core: 2
2023-12-04 20:57:57,905:INFO:Logical Core: 4
2023-12-04 20:57:57,905:INFO:Checking libraries
2023-12-04 20:57:57,905:INFO:System:
2023-12-04 20:57:57,906:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:57:57,906:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:57:57,906:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:57:57,906:INFO:PyCaret required dependencies:
2023-12-04 20:57:57,906:INFO:                 pip: 23.3.1
2023-12-04 20:57:57,906:INFO:          setuptools: 68.0.0
2023-12-04 20:57:57,906:INFO:             pycaret: 3.2.0
2023-12-04 20:57:57,906:INFO:             IPython: 8.15.0
2023-12-04 20:57:57,906:INFO:          ipywidgets: 7.6.5
2023-12-04 20:57:57,906:INFO:                tqdm: 4.64.1
2023-12-04 20:57:57,906:INFO:               numpy: 1.25.2
2023-12-04 20:57:57,907:INFO:              pandas: 1.5.3
2023-12-04 20:57:57,907:INFO:              jinja2: 3.1.2
2023-12-04 20:57:57,907:INFO:               scipy: 1.9.3
2023-12-04 20:57:57,907:INFO:              joblib: 1.2.0
2023-12-04 20:57:57,907:INFO:             sklearn: 1.2.2
2023-12-04 20:57:57,907:INFO:                pyod: 1.1.2
2023-12-04 20:57:57,907:INFO:            imblearn: 0.11.0
2023-12-04 20:57:57,908:INFO:   category_encoders: 2.6.3
2023-12-04 20:57:57,908:INFO:            lightgbm: 4.1.0
2023-12-04 20:57:57,908:INFO:               numba: 0.58.1
2023-12-04 20:57:57,908:INFO:            requests: 2.28.1
2023-12-04 20:57:57,908:INFO:          matplotlib: 3.6.2
2023-12-04 20:57:57,908:INFO:          scikitplot: 0.3.7
2023-12-04 20:57:57,908:INFO:         yellowbrick: 1.5
2023-12-04 20:57:57,908:INFO:              plotly: 5.18.0
2023-12-04 20:57:57,908:INFO:    plotly-resampler: Not installed
2023-12-04 20:57:57,909:INFO:             kaleido: 0.2.1
2023-12-04 20:57:57,909:INFO:           schemdraw: 0.15
2023-12-04 20:57:57,909:INFO:         statsmodels: 0.14.0
2023-12-04 20:57:57,909:INFO:              sktime: 0.21.1
2023-12-04 20:57:57,909:INFO:               tbats: 1.1.3
2023-12-04 20:57:57,909:INFO:            pmdarima: 2.0.4
2023-12-04 20:57:57,909:INFO:              psutil: 5.9.0
2023-12-04 20:57:57,909:INFO:          markupsafe: 2.1.1
2023-12-04 20:57:57,909:INFO:             pickle5: Not installed
2023-12-04 20:57:57,909:INFO:         cloudpickle: 3.0.0
2023-12-04 20:57:57,909:INFO:         deprecation: 2.1.0
2023-12-04 20:57:57,909:INFO:              xxhash: 3.4.1
2023-12-04 20:57:57,909:INFO:           wurlitzer: Not installed
2023-12-04 20:57:57,909:INFO:PyCaret optional dependencies:
2023-12-04 20:57:57,909:INFO:                shap: 0.43.0
2023-12-04 20:57:57,909:INFO:           interpret: 0.4.4
2023-12-04 20:57:57,909:INFO:                umap: 0.5.5
2023-12-04 20:57:57,909:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:57:57,909:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:57:57,909:INFO:             autoviz: Not installed
2023-12-04 20:57:57,909:INFO:           fairlearn: 0.7.0
2023-12-04 20:57:57,909:INFO:          deepchecks: Not installed
2023-12-04 20:57:57,909:INFO:             xgboost: Not installed
2023-12-04 20:57:57,909:INFO:            catboost: Not installed
2023-12-04 20:57:57,909:INFO:              kmodes: Not installed
2023-12-04 20:57:57,909:INFO:             mlxtend: Not installed
2023-12-04 20:57:57,909:INFO:       statsforecast: Not installed
2023-12-04 20:57:57,909:INFO:        tune_sklearn: Not installed
2023-12-04 20:57:57,909:INFO:                 ray: Not installed
2023-12-04 20:57:57,909:INFO:            hyperopt: Not installed
2023-12-04 20:57:57,909:INFO:              optuna: Not installed
2023-12-04 20:57:57,909:INFO:               skopt: Not installed
2023-12-04 20:57:57,909:INFO:              mlflow: Not installed
2023-12-04 20:57:57,909:INFO:              gradio: Not installed
2023-12-04 20:57:57,909:INFO:             fastapi: Not installed
2023-12-04 20:57:57,909:INFO:             uvicorn: Not installed
2023-12-04 20:57:57,909:INFO:              m2cgen: Not installed
2023-12-04 20:57:57,909:INFO:           evidently: Not installed
2023-12-04 20:57:57,909:INFO:               fugue: Not installed
2023-12-04 20:57:57,909:INFO:           streamlit: 1.26.0
2023-12-04 20:57:57,909:INFO:             prophet: Not installed
2023-12-04 20:57:57,909:INFO:None
2023-12-04 20:57:57,909:INFO:Set up data.
2023-12-04 20:57:57,991:INFO:Set up folding strategy.
2023-12-04 20:57:57,996:INFO:Set up train/test split.
2023-12-04 20:57:58,069:INFO:Set up index.
2023-12-04 20:57:58,069:INFO:Assigning column types.
2023-12-04 20:57:58,082:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:57:58,249:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:57:58,251:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:58,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:58,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:58,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:57:58,426:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:58,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:58,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:58,551:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:57:58,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:58,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:58,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:59,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:57:59,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:59,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:59,165:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:57:59,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:59,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:59,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:59,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:57:59,720:INFO:Preparing preprocessing pipeline...
2023-12-04 20:57:59,728:INFO:Set up label encoding.
2023-12-04 20:57:59,728:INFO:Set up simple imputation.
2023-12-04 20:57:59,758:INFO:Set up encoding of ordinal features.
2023-12-04 20:57:59,768:INFO:Set up encoding of categorical features.
2023-12-04 20:57:59,768:INFO:Set up imbalanced handling.
2023-12-04 20:58:56,951:INFO:PyCaret ClassificationExperiment
2023-12-04 20:58:56,952:INFO:Logging name: clf-default-name
2023-12-04 20:58:56,952:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:58:56,953:INFO:version 3.2.0
2023-12-04 20:58:56,954:INFO:Initializing setup()
2023-12-04 20:58:56,954:INFO:self.USI: b870
2023-12-04 20:58:56,954:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:58:56,954:INFO:Checking environment
2023-12-04 20:58:56,954:INFO:python_version: 3.9.18
2023-12-04 20:58:56,954:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:58:56,954:INFO:machine: AMD64
2023-12-04 20:58:56,954:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:58:56,954:INFO:Memory: svmem(total=7955767296, available=1303883776, percent=83.6, used=6651883520, free=1303883776)
2023-12-04 20:58:56,954:INFO:Physical Core: 2
2023-12-04 20:58:56,957:INFO:Logical Core: 4
2023-12-04 20:58:56,957:INFO:Checking libraries
2023-12-04 20:58:56,957:INFO:System:
2023-12-04 20:58:56,957:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:58:56,958:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:58:56,958:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:58:56,958:INFO:PyCaret required dependencies:
2023-12-04 20:58:56,958:INFO:                 pip: 23.3.1
2023-12-04 20:58:56,959:INFO:          setuptools: 68.0.0
2023-12-04 20:58:56,959:INFO:             pycaret: 3.2.0
2023-12-04 20:58:56,959:INFO:             IPython: 8.15.0
2023-12-04 20:58:56,960:INFO:          ipywidgets: 7.6.5
2023-12-04 20:58:56,960:INFO:                tqdm: 4.64.1
2023-12-04 20:58:56,960:INFO:               numpy: 1.25.2
2023-12-04 20:58:56,960:INFO:              pandas: 1.5.3
2023-12-04 20:58:56,960:INFO:              jinja2: 3.1.2
2023-12-04 20:58:56,961:INFO:               scipy: 1.9.3
2023-12-04 20:58:56,961:INFO:              joblib: 1.2.0
2023-12-04 20:58:56,961:INFO:             sklearn: 1.2.2
2023-12-04 20:58:56,962:INFO:                pyod: 1.1.2
2023-12-04 20:58:56,962:INFO:            imblearn: 0.11.0
2023-12-04 20:58:56,963:INFO:   category_encoders: 2.6.3
2023-12-04 20:58:56,963:INFO:            lightgbm: 4.1.0
2023-12-04 20:58:56,963:INFO:               numba: 0.58.1
2023-12-04 20:58:56,965:INFO:            requests: 2.28.1
2023-12-04 20:58:56,965:INFO:          matplotlib: 3.6.2
2023-12-04 20:58:56,965:INFO:          scikitplot: 0.3.7
2023-12-04 20:58:56,965:INFO:         yellowbrick: 1.5
2023-12-04 20:58:56,965:INFO:              plotly: 5.18.0
2023-12-04 20:58:56,965:INFO:    plotly-resampler: Not installed
2023-12-04 20:58:56,966:INFO:             kaleido: 0.2.1
2023-12-04 20:58:56,966:INFO:           schemdraw: 0.15
2023-12-04 20:58:56,966:INFO:         statsmodels: 0.14.0
2023-12-04 20:58:56,966:INFO:              sktime: 0.21.1
2023-12-04 20:58:56,966:INFO:               tbats: 1.1.3
2023-12-04 20:58:56,966:INFO:            pmdarima: 2.0.4
2023-12-04 20:58:56,966:INFO:              psutil: 5.9.0
2023-12-04 20:58:56,966:INFO:          markupsafe: 2.1.1
2023-12-04 20:58:56,966:INFO:             pickle5: Not installed
2023-12-04 20:58:56,966:INFO:         cloudpickle: 3.0.0
2023-12-04 20:58:56,967:INFO:         deprecation: 2.1.0
2023-12-04 20:58:56,967:INFO:              xxhash: 3.4.1
2023-12-04 20:58:56,967:INFO:           wurlitzer: Not installed
2023-12-04 20:58:56,967:INFO:PyCaret optional dependencies:
2023-12-04 20:58:56,967:INFO:                shap: 0.43.0
2023-12-04 20:58:56,967:INFO:           interpret: 0.4.4
2023-12-04 20:58:56,967:INFO:                umap: 0.5.5
2023-12-04 20:58:56,967:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:58:56,967:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:58:56,967:INFO:             autoviz: Not installed
2023-12-04 20:58:56,967:INFO:           fairlearn: 0.7.0
2023-12-04 20:58:56,967:INFO:          deepchecks: Not installed
2023-12-04 20:58:56,967:INFO:             xgboost: Not installed
2023-12-04 20:58:56,967:INFO:            catboost: Not installed
2023-12-04 20:58:56,967:INFO:              kmodes: Not installed
2023-12-04 20:58:56,967:INFO:             mlxtend: Not installed
2023-12-04 20:58:56,968:INFO:       statsforecast: Not installed
2023-12-04 20:58:56,968:INFO:        tune_sklearn: Not installed
2023-12-04 20:58:56,968:INFO:                 ray: Not installed
2023-12-04 20:58:56,968:INFO:            hyperopt: Not installed
2023-12-04 20:58:56,968:INFO:              optuna: Not installed
2023-12-04 20:58:56,968:INFO:               skopt: Not installed
2023-12-04 20:58:56,968:INFO:              mlflow: Not installed
2023-12-04 20:58:56,968:INFO:              gradio: Not installed
2023-12-04 20:58:56,968:INFO:             fastapi: Not installed
2023-12-04 20:58:56,968:INFO:             uvicorn: Not installed
2023-12-04 20:58:56,968:INFO:              m2cgen: Not installed
2023-12-04 20:58:56,968:INFO:           evidently: Not installed
2023-12-04 20:58:56,968:INFO:               fugue: Not installed
2023-12-04 20:58:56,968:INFO:           streamlit: 1.26.0
2023-12-04 20:58:56,968:INFO:             prophet: Not installed
2023-12-04 20:58:56,968:INFO:None
2023-12-04 20:58:56,968:INFO:Set up data.
2023-12-04 20:58:57,070:INFO:Set up folding strategy.
2023-12-04 20:58:57,071:INFO:Set up train/test split.
2023-12-04 20:58:57,140:INFO:Set up index.
2023-12-04 20:58:57,141:INFO:Assigning column types.
2023-12-04 20:58:57,155:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:58:57,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:58:57,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:58:57,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:58:57,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:58:57,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:58:57,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:58:57,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,864:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:58:57,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:57,931:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:58:58,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:58,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:58,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:58,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:58:58,442:INFO:Preparing preprocessing pipeline...
2023-12-04 20:58:58,449:INFO:Set up label encoding.
2023-12-04 20:58:58,449:INFO:Set up simple imputation.
2023-12-04 20:58:58,475:INFO:Set up encoding of ordinal features.
2023-12-04 20:58:58,479:INFO:Set up encoding of categorical features.
2023-12-04 20:58:58,479:INFO:Set up imbalanced handling.
2023-12-04 20:58:58,479:INFO:Set up column transformation.
2023-12-04 20:58:58,482:INFO:Set up column name cleaning.
2023-12-04 20:58:59,576:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:58:59,671:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:58:59,672:INFO:Creating final display dataframe.
2023-12-04 20:59:00,201:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               b870
2023-12-04 20:59:00,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:00,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:00,591:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:00,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:00,591:INFO:setup() successfully completed in 3.68s...............
2023-12-04 20:59:00,715:INFO:PyCaret ClassificationExperiment
2023-12-04 20:59:00,715:INFO:Logging name: clf-default-name
2023-12-04 20:59:00,716:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:59:00,716:INFO:version 3.2.0
2023-12-04 20:59:00,716:INFO:Initializing setup()
2023-12-04 20:59:00,716:INFO:self.USI: 1929
2023-12-04 20:59:00,716:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:59:00,716:INFO:Checking environment
2023-12-04 20:59:00,716:INFO:python_version: 3.9.18
2023-12-04 20:59:00,717:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:59:00,717:INFO:machine: AMD64
2023-12-04 20:59:00,717:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:59:00,717:INFO:Memory: svmem(total=7955767296, available=1274961920, percent=84.0, used=6680805376, free=1274961920)
2023-12-04 20:59:00,717:INFO:Physical Core: 2
2023-12-04 20:59:00,718:INFO:Logical Core: 4
2023-12-04 20:59:00,718:INFO:Checking libraries
2023-12-04 20:59:00,718:INFO:System:
2023-12-04 20:59:00,718:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:59:00,718:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:59:00,718:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:59:00,719:INFO:PyCaret required dependencies:
2023-12-04 20:59:00,722:INFO:                 pip: 23.3.1
2023-12-04 20:59:00,722:INFO:          setuptools: 68.0.0
2023-12-04 20:59:00,722:INFO:             pycaret: 3.2.0
2023-12-04 20:59:00,722:INFO:             IPython: 8.15.0
2023-12-04 20:59:00,722:INFO:          ipywidgets: 7.6.5
2023-12-04 20:59:00,722:INFO:                tqdm: 4.64.1
2023-12-04 20:59:00,722:INFO:               numpy: 1.25.2
2023-12-04 20:59:00,722:INFO:              pandas: 1.5.3
2023-12-04 20:59:00,722:INFO:              jinja2: 3.1.2
2023-12-04 20:59:00,724:INFO:               scipy: 1.9.3
2023-12-04 20:59:00,724:INFO:              joblib: 1.2.0
2023-12-04 20:59:00,724:INFO:             sklearn: 1.2.2
2023-12-04 20:59:00,724:INFO:                pyod: 1.1.2
2023-12-04 20:59:00,725:INFO:            imblearn: 0.11.0
2023-12-04 20:59:00,725:INFO:   category_encoders: 2.6.3
2023-12-04 20:59:00,725:INFO:            lightgbm: 4.1.0
2023-12-04 20:59:00,725:INFO:               numba: 0.58.1
2023-12-04 20:59:00,725:INFO:            requests: 2.28.1
2023-12-04 20:59:00,725:INFO:          matplotlib: 3.6.2
2023-12-04 20:59:00,726:INFO:          scikitplot: 0.3.7
2023-12-04 20:59:00,726:INFO:         yellowbrick: 1.5
2023-12-04 20:59:00,726:INFO:              plotly: 5.18.0
2023-12-04 20:59:00,726:INFO:    plotly-resampler: Not installed
2023-12-04 20:59:00,727:INFO:             kaleido: 0.2.1
2023-12-04 20:59:00,727:INFO:           schemdraw: 0.15
2023-12-04 20:59:00,727:INFO:         statsmodels: 0.14.0
2023-12-04 20:59:00,727:INFO:              sktime: 0.21.1
2023-12-04 20:59:00,727:INFO:               tbats: 1.1.3
2023-12-04 20:59:00,728:INFO:            pmdarima: 2.0.4
2023-12-04 20:59:00,730:INFO:              psutil: 5.9.0
2023-12-04 20:59:00,731:INFO:          markupsafe: 2.1.1
2023-12-04 20:59:00,731:INFO:             pickle5: Not installed
2023-12-04 20:59:00,731:INFO:         cloudpickle: 3.0.0
2023-12-04 20:59:00,731:INFO:         deprecation: 2.1.0
2023-12-04 20:59:00,731:INFO:              xxhash: 3.4.1
2023-12-04 20:59:00,732:INFO:           wurlitzer: Not installed
2023-12-04 20:59:00,732:INFO:PyCaret optional dependencies:
2023-12-04 20:59:00,732:INFO:                shap: 0.43.0
2023-12-04 20:59:00,732:INFO:           interpret: 0.4.4
2023-12-04 20:59:00,733:INFO:                umap: 0.5.5
2023-12-04 20:59:00,733:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:59:00,733:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:59:00,733:INFO:             autoviz: Not installed
2023-12-04 20:59:00,734:INFO:           fairlearn: 0.7.0
2023-12-04 20:59:00,734:INFO:          deepchecks: Not installed
2023-12-04 20:59:00,735:INFO:             xgboost: Not installed
2023-12-04 20:59:00,735:INFO:            catboost: Not installed
2023-12-04 20:59:00,735:INFO:              kmodes: Not installed
2023-12-04 20:59:00,735:INFO:             mlxtend: Not installed
2023-12-04 20:59:00,735:INFO:       statsforecast: Not installed
2023-12-04 20:59:00,735:INFO:        tune_sklearn: Not installed
2023-12-04 20:59:00,735:INFO:                 ray: Not installed
2023-12-04 20:59:00,735:INFO:            hyperopt: Not installed
2023-12-04 20:59:00,736:INFO:              optuna: Not installed
2023-12-04 20:59:00,736:INFO:               skopt: Not installed
2023-12-04 20:59:00,736:INFO:              mlflow: Not installed
2023-12-04 20:59:00,736:INFO:              gradio: Not installed
2023-12-04 20:59:00,738:INFO:             fastapi: Not installed
2023-12-04 20:59:00,738:INFO:             uvicorn: Not installed
2023-12-04 20:59:00,739:INFO:              m2cgen: Not installed
2023-12-04 20:59:00,739:INFO:           evidently: Not installed
2023-12-04 20:59:00,739:INFO:               fugue: Not installed
2023-12-04 20:59:00,739:INFO:           streamlit: 1.26.0
2023-12-04 20:59:00,739:INFO:             prophet: Not installed
2023-12-04 20:59:00,739:INFO:None
2023-12-04 20:59:00,740:INFO:Set up data.
2023-12-04 20:59:00,881:INFO:Set up folding strategy.
2023-12-04 20:59:00,881:INFO:Set up train/test split.
2023-12-04 20:59:00,963:INFO:Set up index.
2023-12-04 20:59:00,968:INFO:Assigning column types.
2023-12-04 20:59:00,982:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:59:01,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:59:01,081:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:01,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:01,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:01,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:59:01,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:01,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:01,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:01,393:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:59:01,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:01,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:01,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:02,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:02,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:02,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:02,234:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:59:02,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:02,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:02,749:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:02,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:02,757:INFO:Preparing preprocessing pipeline...
2023-12-04 20:59:02,809:INFO:Set up label encoding.
2023-12-04 20:59:02,810:INFO:Set up simple imputation.
2023-12-04 20:59:02,875:INFO:Set up encoding of ordinal features.
2023-12-04 20:59:02,893:INFO:Set up encoding of categorical features.
2023-12-04 20:59:02,898:INFO:Set up imbalanced handling.
2023-12-04 20:59:02,899:INFO:Set up column transformation.
2023-12-04 20:59:02,903:INFO:Set up column name cleaning.
2023-12-04 20:59:07,690:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:59:07,767:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:59:07,767:INFO:Creating final display dataframe.
2023-12-04 20:59:13,881:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation             median
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method    borderlinesmote
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               1929
2023-12-04 20:59:14,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:14,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:14,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:14,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:14,423:INFO:setup() successfully completed in 13.77s...............
2023-12-04 20:59:14,631:INFO:PyCaret ClassificationExperiment
2023-12-04 20:59:14,632:INFO:Logging name: clf-default-name
2023-12-04 20:59:14,632:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 20:59:14,632:INFO:version 3.2.0
2023-12-04 20:59:14,632:INFO:Initializing setup()
2023-12-04 20:59:14,632:INFO:self.USI: d327
2023-12-04 20:59:14,632:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 20:59:14,632:INFO:Checking environment
2023-12-04 20:59:14,632:INFO:python_version: 3.9.18
2023-12-04 20:59:14,632:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 20:59:14,632:INFO:machine: AMD64
2023-12-04 20:59:14,632:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 20:59:14,632:INFO:Memory: svmem(total=7955767296, available=1265262592, percent=84.1, used=6690504704, free=1265262592)
2023-12-04 20:59:14,632:INFO:Physical Core: 2
2023-12-04 20:59:14,632:INFO:Logical Core: 4
2023-12-04 20:59:14,637:INFO:Checking libraries
2023-12-04 20:59:14,638:INFO:System:
2023-12-04 20:59:14,638:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 20:59:14,638:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 20:59:14,640:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 20:59:14,640:INFO:PyCaret required dependencies:
2023-12-04 20:59:14,640:INFO:                 pip: 23.3.1
2023-12-04 20:59:14,640:INFO:          setuptools: 68.0.0
2023-12-04 20:59:14,641:INFO:             pycaret: 3.2.0
2023-12-04 20:59:14,642:INFO:             IPython: 8.15.0
2023-12-04 20:59:14,642:INFO:          ipywidgets: 7.6.5
2023-12-04 20:59:14,642:INFO:                tqdm: 4.64.1
2023-12-04 20:59:14,644:INFO:               numpy: 1.25.2
2023-12-04 20:59:14,645:INFO:              pandas: 1.5.3
2023-12-04 20:59:14,646:INFO:              jinja2: 3.1.2
2023-12-04 20:59:14,646:INFO:               scipy: 1.9.3
2023-12-04 20:59:14,646:INFO:              joblib: 1.2.0
2023-12-04 20:59:14,647:INFO:             sklearn: 1.2.2
2023-12-04 20:59:14,647:INFO:                pyod: 1.1.2
2023-12-04 20:59:14,647:INFO:            imblearn: 0.11.0
2023-12-04 20:59:14,647:INFO:   category_encoders: 2.6.3
2023-12-04 20:59:14,649:INFO:            lightgbm: 4.1.0
2023-12-04 20:59:14,649:INFO:               numba: 0.58.1
2023-12-04 20:59:14,650:INFO:            requests: 2.28.1
2023-12-04 20:59:14,650:INFO:          matplotlib: 3.6.2
2023-12-04 20:59:14,650:INFO:          scikitplot: 0.3.7
2023-12-04 20:59:14,650:INFO:         yellowbrick: 1.5
2023-12-04 20:59:14,653:INFO:              plotly: 5.18.0
2023-12-04 20:59:14,654:INFO:    plotly-resampler: Not installed
2023-12-04 20:59:14,654:INFO:             kaleido: 0.2.1
2023-12-04 20:59:14,655:INFO:           schemdraw: 0.15
2023-12-04 20:59:14,655:INFO:         statsmodels: 0.14.0
2023-12-04 20:59:14,655:INFO:              sktime: 0.21.1
2023-12-04 20:59:14,656:INFO:               tbats: 1.1.3
2023-12-04 20:59:14,656:INFO:            pmdarima: 2.0.4
2023-12-04 20:59:14,656:INFO:              psutil: 5.9.0
2023-12-04 20:59:14,656:INFO:          markupsafe: 2.1.1
2023-12-04 20:59:14,657:INFO:             pickle5: Not installed
2023-12-04 20:59:14,657:INFO:         cloudpickle: 3.0.0
2023-12-04 20:59:14,657:INFO:         deprecation: 2.1.0
2023-12-04 20:59:14,657:INFO:              xxhash: 3.4.1
2023-12-04 20:59:14,658:INFO:           wurlitzer: Not installed
2023-12-04 20:59:14,658:INFO:PyCaret optional dependencies:
2023-12-04 20:59:14,658:INFO:                shap: 0.43.0
2023-12-04 20:59:14,659:INFO:           interpret: 0.4.4
2023-12-04 20:59:14,661:INFO:                umap: 0.5.5
2023-12-04 20:59:14,661:INFO:     ydata_profiling: 4.6.2
2023-12-04 20:59:14,662:INFO:  explainerdashboard: 0.4.3
2023-12-04 20:59:14,662:INFO:             autoviz: Not installed
2023-12-04 20:59:14,662:INFO:           fairlearn: 0.7.0
2023-12-04 20:59:14,662:INFO:          deepchecks: Not installed
2023-12-04 20:59:14,662:INFO:             xgboost: Not installed
2023-12-04 20:59:14,662:INFO:            catboost: Not installed
2023-12-04 20:59:14,662:INFO:              kmodes: Not installed
2023-12-04 20:59:14,662:INFO:             mlxtend: Not installed
2023-12-04 20:59:14,662:INFO:       statsforecast: Not installed
2023-12-04 20:59:14,662:INFO:        tune_sklearn: Not installed
2023-12-04 20:59:14,662:INFO:                 ray: Not installed
2023-12-04 20:59:14,662:INFO:            hyperopt: Not installed
2023-12-04 20:59:14,666:INFO:              optuna: Not installed
2023-12-04 20:59:14,666:INFO:               skopt: Not installed
2023-12-04 20:59:14,666:INFO:              mlflow: Not installed
2023-12-04 20:59:14,667:INFO:              gradio: Not installed
2023-12-04 20:59:14,667:INFO:             fastapi: Not installed
2023-12-04 20:59:14,667:INFO:             uvicorn: Not installed
2023-12-04 20:59:14,667:INFO:              m2cgen: Not installed
2023-12-04 20:59:14,667:INFO:           evidently: Not installed
2023-12-04 20:59:14,667:INFO:               fugue: Not installed
2023-12-04 20:59:14,667:INFO:           streamlit: 1.26.0
2023-12-04 20:59:14,667:INFO:             prophet: Not installed
2023-12-04 20:59:14,667:INFO:None
2023-12-04 20:59:14,667:INFO:Set up data.
2023-12-04 20:59:14,832:INFO:Set up folding strategy.
2023-12-04 20:59:14,832:INFO:Set up train/test split.
2023-12-04 20:59:14,911:INFO:Set up index.
2023-12-04 20:59:14,912:INFO:Assigning column types.
2023-12-04 20:59:14,920:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 20:59:15,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:59:15,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:15,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:15,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:15,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 20:59:15,470:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:15,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:15,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:15,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 20:59:15,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:15,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:15,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:15,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 20:59:16,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:16,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:16,056:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 20:59:16,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:16,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:16,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:16,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:16,600:INFO:Preparing preprocessing pipeline...
2023-12-04 20:59:16,605:INFO:Set up label encoding.
2023-12-04 20:59:16,605:INFO:Set up simple imputation.
2023-12-04 20:59:16,631:INFO:Set up encoding of ordinal features.
2023-12-04 20:59:16,644:INFO:Set up encoding of categorical features.
2023-12-04 20:59:16,644:INFO:Set up imbalanced handling.
2023-12-04 20:59:16,649:INFO:Set up column transformation.
2023-12-04 20:59:16,654:INFO:Set up column name cleaning.
2023-12-04 20:59:21,497:INFO:Finished creating preprocessing pipeline.
2023-12-04 20:59:21,568:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 20:59:21,568:INFO:Creating final display dataframe.
2023-12-04 20:59:28,088:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53753, 67)
6   Transformed train set shape        (42031, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation                knn
14       Categorical imputation                knn
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method             adasyn
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               d327
2023-12-04 20:59:28,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:28,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:28,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:28,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 20:59:28,577:INFO:setup() successfully completed in 14.06s...............
2023-12-04 20:59:48,201:INFO:Initializing compare_models()
2023-12-04 20:59:48,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 20:59:48,201:INFO:Checking exceptions
2023-12-04 20:59:48,227:INFO:Preparing display monitor
2023-12-04 20:59:48,284:INFO:Initializing Logistic Regression
2023-12-04 20:59:48,284:INFO:Total runtime is 0.0 minutes
2023-12-04 20:59:48,294:INFO:SubProcess create_model() called ==================================
2023-12-04 20:59:48,295:INFO:Initializing create_model()
2023-12-04 20:59:48,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 20:59:48,295:INFO:Checking exceptions
2023-12-04 20:59:48,295:INFO:Importing libraries
2023-12-04 20:59:48,295:INFO:Copying training dataset
2023-12-04 20:59:48,351:INFO:Defining folds
2023-12-04 20:59:48,351:INFO:Declaring metric variables
2023-12-04 20:59:48,368:INFO:Importing untrained model
2023-12-04 20:59:48,384:INFO:Logistic Regression Imported successfully
2023-12-04 20:59:48,413:INFO:Starting cross validation
2023-12-04 20:59:48,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:00:31,879:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:00:32,100:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:00:32,258:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:00:32,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:00:32,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,557:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,622:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,686:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,784:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,815:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,837:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,847:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,902:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,904:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,972:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:00:32,972:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:03,639:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:01:03,986:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:01:03,998:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:01:04,069:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:01:04,186:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,379:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,491:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,524:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,564:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,620:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,636:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,666:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,687:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:04,725:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:21,667:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:01:21,736:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:01:21,960:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:21,992:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:22,003:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:22,031:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:22,041:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:22,082:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:22,126:INFO:Calculating mean and std
2023-12-04 21:01:22,134:INFO:Creating metrics dataframe
2023-12-04 21:01:22,152:INFO:Uploading results into container
2023-12-04 21:01:22,154:INFO:Uploading model into container now
2023-12-04 21:01:22,154:INFO:_master_model_container: 1
2023-12-04 21:01:22,154:INFO:_display_container: 2
2023-12-04 21:01:22,154:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-04 21:01:22,159:INFO:create_model() successfully completed......................................
2023-12-04 21:01:22,535:INFO:SubProcess create_model() end ==================================
2023-12-04 21:01:22,535:INFO:Creating metrics dataframe
2023-12-04 21:01:22,568:INFO:Initializing K Neighbors Classifier
2023-12-04 21:01:22,568:INFO:Total runtime is 1.571391793092092 minutes
2023-12-04 21:01:22,577:INFO:SubProcess create_model() called ==================================
2023-12-04 21:01:22,579:INFO:Initializing create_model()
2023-12-04 21:01:22,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:01:22,580:INFO:Checking exceptions
2023-12-04 21:01:22,580:INFO:Importing libraries
2023-12-04 21:01:22,583:INFO:Copying training dataset
2023-12-04 21:01:22,626:INFO:Defining folds
2023-12-04 21:01:22,627:INFO:Declaring metric variables
2023-12-04 21:01:22,653:INFO:Importing untrained model
2023-12-04 21:01:22,677:INFO:K Neighbors Classifier Imported successfully
2023-12-04 21:01:22,713:INFO:Starting cross validation
2023-12-04 21:01:22,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:01:42,085:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,157:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,190:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,224:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,224:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,257:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,268:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,293:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,319:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,340:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,355:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:01:42,395:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,362:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,470:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,552:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,717:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,771:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,819:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,836:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,841:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:00,943:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:01,010:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:11,592:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:11,631:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:11,676:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:11,743:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:11,782:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:11,817:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:11,889:INFO:Calculating mean and std
2023-12-04 21:02:11,891:INFO:Creating metrics dataframe
2023-12-04 21:02:11,901:INFO:Uploading results into container
2023-12-04 21:02:11,903:INFO:Uploading model into container now
2023-12-04 21:02:11,903:INFO:_master_model_container: 2
2023-12-04 21:02:11,903:INFO:_display_container: 2
2023-12-04 21:02:11,904:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-04 21:02:11,904:INFO:create_model() successfully completed......................................
2023-12-04 21:02:12,183:INFO:SubProcess create_model() end ==================================
2023-12-04 21:02:12,184:INFO:Creating metrics dataframe
2023-12-04 21:02:12,218:INFO:Initializing Naive Bayes
2023-12-04 21:02:12,219:INFO:Total runtime is 2.398918398221334 minutes
2023-12-04 21:02:12,228:INFO:SubProcess create_model() called ==================================
2023-12-04 21:02:12,230:INFO:Initializing create_model()
2023-12-04 21:02:12,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:02:12,232:INFO:Checking exceptions
2023-12-04 21:02:12,232:INFO:Importing libraries
2023-12-04 21:02:12,232:INFO:Copying training dataset
2023-12-04 21:02:12,267:INFO:Defining folds
2023-12-04 21:02:12,269:INFO:Declaring metric variables
2023-12-04 21:02:12,281:INFO:Importing untrained model
2023-12-04 21:02:12,305:INFO:Naive Bayes Imported successfully
2023-12-04 21:02:12,335:INFO:Starting cross validation
2023-12-04 21:02:12,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:02:24,391:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,459:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,516:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,645:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,675:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,698:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,724:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,729:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,797:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:24,802:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,216:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,278:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,308:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,371:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,372:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,387:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,397:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,433:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,463:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,517:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:36,545:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:43,712:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:43,751:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:43,791:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:43,849:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:43,886:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:43,935:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:44,016:INFO:Calculating mean and std
2023-12-04 21:02:44,019:INFO:Creating metrics dataframe
2023-12-04 21:02:44,042:INFO:Uploading results into container
2023-12-04 21:02:44,042:INFO:Uploading model into container now
2023-12-04 21:02:44,048:INFO:_master_model_container: 3
2023-12-04 21:02:44,048:INFO:_display_container: 2
2023-12-04 21:02:44,049:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-04 21:02:44,049:INFO:create_model() successfully completed......................................
2023-12-04 21:02:44,360:INFO:SubProcess create_model() end ==================================
2023-12-04 21:02:44,360:INFO:Creating metrics dataframe
2023-12-04 21:02:44,398:INFO:Initializing Decision Tree Classifier
2023-12-04 21:02:44,398:INFO:Total runtime is 2.935231868426005 minutes
2023-12-04 21:02:44,410:INFO:SubProcess create_model() called ==================================
2023-12-04 21:02:44,410:INFO:Initializing create_model()
2023-12-04 21:02:44,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:02:44,410:INFO:Checking exceptions
2023-12-04 21:02:44,410:INFO:Importing libraries
2023-12-04 21:02:44,410:INFO:Copying training dataset
2023-12-04 21:02:44,489:INFO:Defining folds
2023-12-04 21:02:44,489:INFO:Declaring metric variables
2023-12-04 21:02:44,528:INFO:Importing untrained model
2023-12-04 21:02:44,540:INFO:Decision Tree Classifier Imported successfully
2023-12-04 21:02:44,560:INFO:Starting cross validation
2023-12-04 21:02:44,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:02:58,368:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,422:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,484:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,500:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,534:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,560:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,566:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,590:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,625:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,674:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:02:58,700:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,270:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,328:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,350:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,395:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,410:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,469:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,475:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,552:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,564:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,609:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,621:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:12,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:19,661:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:19,693:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:19,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:19,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:19,749:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:19,797:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:19,866:INFO:Calculating mean and std
2023-12-04 21:03:19,867:INFO:Creating metrics dataframe
2023-12-04 21:03:19,878:INFO:Uploading results into container
2023-12-04 21:03:19,879:INFO:Uploading model into container now
2023-12-04 21:03:19,880:INFO:_master_model_container: 4
2023-12-04 21:03:19,880:INFO:_display_container: 2
2023-12-04 21:03:19,880:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-04 21:03:19,880:INFO:create_model() successfully completed......................................
2023-12-04 21:03:20,173:INFO:SubProcess create_model() end ==================================
2023-12-04 21:03:20,173:INFO:Creating metrics dataframe
2023-12-04 21:03:20,192:INFO:Initializing SVM - Linear Kernel
2023-12-04 21:03:20,193:INFO:Total runtime is 3.5318033536275224 minutes
2023-12-04 21:03:20,199:INFO:SubProcess create_model() called ==================================
2023-12-04 21:03:20,200:INFO:Initializing create_model()
2023-12-04 21:03:20,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:03:20,201:INFO:Checking exceptions
2023-12-04 21:03:20,202:INFO:Importing libraries
2023-12-04 21:03:20,202:INFO:Copying training dataset
2023-12-04 21:03:20,234:INFO:Defining folds
2023-12-04 21:03:20,234:INFO:Declaring metric variables
2023-12-04 21:03:20,246:INFO:Importing untrained model
2023-12-04 21:03:20,265:INFO:SVM - Linear Kernel Imported successfully
2023-12-04 21:03:20,284:INFO:Starting cross validation
2023-12-04 21:03:20,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:03:33,617:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:33,622:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:33,635:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:33,645:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:33,686:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:33,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:33,738:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:33,754:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:33,938:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:33,961:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:34,028:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:34,081:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:34,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:34,247:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:34,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:34,369:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:47,504:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,562:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,618:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,711:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:47,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,743:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:47,764:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,791:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,825:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,841:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:47,882:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:48,124:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:48,143:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:48,193:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:48,242:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:56,218:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:56,232:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:56,278:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:56,318:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:56,390:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:03:56,406:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:56,441:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:56,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:03:56,540:INFO:Calculating mean and std
2023-12-04 21:03:56,543:INFO:Creating metrics dataframe
2023-12-04 21:03:56,551:INFO:Uploading results into container
2023-12-04 21:03:56,553:INFO:Uploading model into container now
2023-12-04 21:03:56,553:INFO:_master_model_container: 5
2023-12-04 21:03:56,554:INFO:_display_container: 2
2023-12-04 21:03:56,555:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-04 21:03:56,556:INFO:create_model() successfully completed......................................
2023-12-04 21:03:56,877:INFO:SubProcess create_model() end ==================================
2023-12-04 21:03:56,877:INFO:Creating metrics dataframe
2023-12-04 21:03:56,914:INFO:Initializing Ridge Classifier
2023-12-04 21:03:56,914:INFO:Total runtime is 4.143838930130005 minutes
2023-12-04 21:03:56,929:INFO:SubProcess create_model() called ==================================
2023-12-04 21:03:56,930:INFO:Initializing create_model()
2023-12-04 21:03:56,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:03:56,931:INFO:Checking exceptions
2023-12-04 21:03:56,931:INFO:Importing libraries
2023-12-04 21:03:56,931:INFO:Copying training dataset
2023-12-04 21:03:57,012:INFO:Defining folds
2023-12-04 21:03:57,012:INFO:Declaring metric variables
2023-12-04 21:03:57,022:INFO:Importing untrained model
2023-12-04 21:03:57,040:INFO:Ridge Classifier Imported successfully
2023-12-04 21:03:57,061:INFO:Starting cross validation
2023-12-04 21:03:57,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:04:06,656:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:06,671:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:06,682:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,703:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:06,703:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,738:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,748:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:06,764:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,772:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,795:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,797:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,818:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,842:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,858:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:06,905:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,029:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:17,053:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,118:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,204:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:17,228:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,256:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:17,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,289:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:17,301:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,314:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,343:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,351:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,420:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:17,440:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:23,780:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:23,793:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:23,825:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:04:23,839:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:23,849:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:23,882:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:23,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:23,945:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:24,007:INFO:Calculating mean and std
2023-12-04 21:04:24,009:INFO:Creating metrics dataframe
2023-12-04 21:04:24,015:INFO:Uploading results into container
2023-12-04 21:04:24,019:INFO:Uploading model into container now
2023-12-04 21:04:24,021:INFO:_master_model_container: 6
2023-12-04 21:04:24,021:INFO:_display_container: 2
2023-12-04 21:04:24,022:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-04 21:04:24,022:INFO:create_model() successfully completed......................................
2023-12-04 21:04:24,308:INFO:SubProcess create_model() end ==================================
2023-12-04 21:04:24,308:INFO:Creating metrics dataframe
2023-12-04 21:04:24,328:INFO:Initializing Random Forest Classifier
2023-12-04 21:04:24,328:INFO:Total runtime is 4.60072994629542 minutes
2023-12-04 21:04:24,336:INFO:SubProcess create_model() called ==================================
2023-12-04 21:04:24,336:INFO:Initializing create_model()
2023-12-04 21:04:24,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:04:24,337:INFO:Checking exceptions
2023-12-04 21:04:24,337:INFO:Importing libraries
2023-12-04 21:04:24,337:INFO:Copying training dataset
2023-12-04 21:04:24,363:INFO:Defining folds
2023-12-04 21:04:24,364:INFO:Declaring metric variables
2023-12-04 21:04:24,372:INFO:Importing untrained model
2023-12-04 21:04:24,378:INFO:Random Forest Classifier Imported successfully
2023-12-04 21:04:24,412:INFO:Starting cross validation
2023-12-04 21:04:24,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:04:54,852:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:54,915:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,023:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,128:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,129:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,165:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,284:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,344:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,378:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,405:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:04:55,476:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:23,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,103:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,132:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,186:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,242:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,330:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,339:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,392:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,454:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,671:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,723:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:24,778:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:38,704:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:38,759:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:38,810:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:39,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:39,038:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:39,071:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:39,145:INFO:Calculating mean and std
2023-12-04 21:05:39,148:INFO:Creating metrics dataframe
2023-12-04 21:05:39,163:INFO:Uploading results into container
2023-12-04 21:05:39,166:INFO:Uploading model into container now
2023-12-04 21:05:39,168:INFO:_master_model_container: 7
2023-12-04 21:05:39,168:INFO:_display_container: 2
2023-12-04 21:05:39,172:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:05:39,172:INFO:create_model() successfully completed......................................
2023-12-04 21:05:39,406:INFO:SubProcess create_model() end ==================================
2023-12-04 21:05:39,406:INFO:Creating metrics dataframe
2023-12-04 21:05:39,428:INFO:Initializing Quadratic Discriminant Analysis
2023-12-04 21:05:39,428:INFO:Total runtime is 5.852391680081685 minutes
2023-12-04 21:05:39,436:INFO:SubProcess create_model() called ==================================
2023-12-04 21:05:39,437:INFO:Initializing create_model()
2023-12-04 21:05:39,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:05:39,437:INFO:Checking exceptions
2023-12-04 21:05:39,437:INFO:Importing libraries
2023-12-04 21:05:39,438:INFO:Copying training dataset
2023-12-04 21:05:39,452:INFO:Defining folds
2023-12-04 21:05:39,453:INFO:Declaring metric variables
2023-12-04 21:05:39,463:INFO:Importing untrained model
2023-12-04 21:05:39,469:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-04 21:05:39,487:INFO:Starting cross validation
2023-12-04 21:05:39,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:05:48,256:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:48,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:48,341:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:48,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:49,069:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,079:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,095:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,126:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,136:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,159:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,166:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,179:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,189:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,210:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:49,252:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:05:49,279:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:57,785:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:57,887:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:57,973:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:58,008:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:05:58,573:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,625:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,632:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,645:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,655:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,678:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,683:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,709:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,739:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,754:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:05:58,769:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:04,468:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:06:04,468:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:06:04,868:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:04,868:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:04,909:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:04,909:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:04,937:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:04,938:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:04,991:INFO:Calculating mean and std
2023-12-04 21:06:04,993:INFO:Creating metrics dataframe
2023-12-04 21:06:05,002:INFO:Uploading results into container
2023-12-04 21:06:05,003:INFO:Uploading model into container now
2023-12-04 21:06:05,003:INFO:_master_model_container: 8
2023-12-04 21:06:05,004:INFO:_display_container: 2
2023-12-04 21:06:05,004:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-04 21:06:05,004:INFO:create_model() successfully completed......................................
2023-12-04 21:06:05,226:INFO:SubProcess create_model() end ==================================
2023-12-04 21:06:05,226:INFO:Creating metrics dataframe
2023-12-04 21:06:05,242:INFO:Initializing Ada Boost Classifier
2023-12-04 21:06:05,242:INFO:Total runtime is 6.282633833090464 minutes
2023-12-04 21:06:05,249:INFO:SubProcess create_model() called ==================================
2023-12-04 21:06:05,250:INFO:Initializing create_model()
2023-12-04 21:06:05,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:06:05,251:INFO:Checking exceptions
2023-12-04 21:06:05,251:INFO:Importing libraries
2023-12-04 21:06:05,251:INFO:Copying training dataset
2023-12-04 21:06:05,275:INFO:Defining folds
2023-12-04 21:06:05,275:INFO:Declaring metric variables
2023-12-04 21:06:05,288:INFO:Importing untrained model
2023-12-04 21:06:05,296:INFO:Ada Boost Classifier Imported successfully
2023-12-04 21:06:05,319:INFO:Starting cross validation
2023-12-04 21:06:05,325:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:06:23,554:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,679:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,716:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,742:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,769:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,776:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,832:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,848:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,931:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:23,985:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:24,045:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,436:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,568:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,593:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,659:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,687:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,715:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,717:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,738:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,793:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,795:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:42,841:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:55,285:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:55,331:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:55,382:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:55,414:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:55,458:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:55,489:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:06:55,542:INFO:Calculating mean and std
2023-12-04 21:06:55,545:INFO:Creating metrics dataframe
2023-12-04 21:06:55,552:INFO:Uploading results into container
2023-12-04 21:06:55,553:INFO:Uploading model into container now
2023-12-04 21:06:55,556:INFO:_master_model_container: 9
2023-12-04 21:06:55,556:INFO:_display_container: 2
2023-12-04 21:06:55,557:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-04 21:06:55,558:INFO:create_model() successfully completed......................................
2023-12-04 21:06:55,882:INFO:SubProcess create_model() end ==================================
2023-12-04 21:06:55,882:INFO:Creating metrics dataframe
2023-12-04 21:06:55,950:INFO:Initializing Gradient Boosting Classifier
2023-12-04 21:06:55,950:INFO:Total runtime is 7.1277721405029295 minutes
2023-12-04 21:06:55,973:INFO:SubProcess create_model() called ==================================
2023-12-04 21:06:55,974:INFO:Initializing create_model()
2023-12-04 21:06:55,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:06:55,976:INFO:Checking exceptions
2023-12-04 21:06:55,976:INFO:Importing libraries
2023-12-04 21:06:55,976:INFO:Copying training dataset
2023-12-04 21:06:56,029:INFO:Defining folds
2023-12-04 21:06:56,029:INFO:Declaring metric variables
2023-12-04 21:06:56,041:INFO:Importing untrained model
2023-12-04 21:06:56,053:INFO:Gradient Boosting Classifier Imported successfully
2023-12-04 21:06:56,079:INFO:Starting cross validation
2023-12-04 21:06:56,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:07:44,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,345:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,402:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,515:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,569:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,625:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,674:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,752:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,923:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:44,984:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:07:45,040:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:31,972:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,035:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,094:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,266:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,320:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,377:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,641:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,702:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,729:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,764:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,789:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:08:32,859:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:04,412:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:04,432:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:04,454:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:04,477:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:04,494:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:04,520:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:04,573:INFO:Calculating mean and std
2023-12-04 21:09:04,575:INFO:Creating metrics dataframe
2023-12-04 21:09:04,583:INFO:Uploading results into container
2023-12-04 21:09:04,585:INFO:Uploading model into container now
2023-12-04 21:09:04,586:INFO:_master_model_container: 10
2023-12-04 21:09:04,586:INFO:_display_container: 2
2023-12-04 21:09:04,587:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-04 21:09:04,589:INFO:create_model() successfully completed......................................
2023-12-04 21:09:04,903:INFO:SubProcess create_model() end ==================================
2023-12-04 21:09:04,903:INFO:Creating metrics dataframe
2023-12-04 21:09:04,936:INFO:Initializing Linear Discriminant Analysis
2023-12-04 21:09:04,937:INFO:Total runtime is 9.277551710605621 minutes
2023-12-04 21:09:04,945:INFO:SubProcess create_model() called ==================================
2023-12-04 21:09:04,946:INFO:Initializing create_model()
2023-12-04 21:09:04,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:09:04,948:INFO:Checking exceptions
2023-12-04 21:09:04,948:INFO:Importing libraries
2023-12-04 21:09:04,948:INFO:Copying training dataset
2023-12-04 21:09:04,987:INFO:Defining folds
2023-12-04 21:09:04,987:INFO:Declaring metric variables
2023-12-04 21:09:04,999:INFO:Importing untrained model
2023-12-04 21:09:05,016:INFO:Linear Discriminant Analysis Imported successfully
2023-12-04 21:09:05,047:INFO:Starting cross validation
2023-12-04 21:09:05,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:09:18,160:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,213:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,213:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,268:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,273:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,279:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,289:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,329:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,334:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:18,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:28,890:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:28,902:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:28,981:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:28,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,045:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,055:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,076:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,096:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,124:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,157:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,202:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:29,239:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:36,433:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:36,453:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:36,481:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:36,502:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:36,517:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:36,541:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:09:36,597:INFO:Calculating mean and std
2023-12-04 21:09:36,600:INFO:Creating metrics dataframe
2023-12-04 21:09:36,605:INFO:Uploading results into container
2023-12-04 21:09:36,611:INFO:Uploading model into container now
2023-12-04 21:09:36,612:INFO:_master_model_container: 11
2023-12-04 21:09:36,612:INFO:_display_container: 2
2023-12-04 21:09:36,613:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-04 21:09:36,613:INFO:create_model() successfully completed......................................
2023-12-04 21:09:36,928:INFO:SubProcess create_model() end ==================================
2023-12-04 21:09:36,928:INFO:Creating metrics dataframe
2023-12-04 21:09:36,973:INFO:Initializing Extra Trees Classifier
2023-12-04 21:09:36,974:INFO:Total runtime is 9.811502341429392 minutes
2023-12-04 21:09:36,985:INFO:SubProcess create_model() called ==================================
2023-12-04 21:09:36,985:INFO:Initializing create_model()
2023-12-04 21:09:36,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:09:36,989:INFO:Checking exceptions
2023-12-04 21:09:36,989:INFO:Importing libraries
2023-12-04 21:09:36,989:INFO:Copying training dataset
2023-12-04 21:09:37,033:INFO:Defining folds
2023-12-04 21:09:37,033:INFO:Declaring metric variables
2023-12-04 21:09:37,048:INFO:Importing untrained model
2023-12-04 21:09:37,092:INFO:Extra Trees Classifier Imported successfully
2023-12-04 21:09:37,131:INFO:Starting cross validation
2023-12-04 21:09:37,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:10:06,301:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:06,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:06,442:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:06,488:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:06,516:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:06,734:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:06,948:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:06,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:07,033:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:07,065:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:07,131:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:07,143:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:36,563:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:36,691:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:36,714:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:36,751:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:36,769:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:36,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:37,152:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:37,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:37,287:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:37,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:37,496:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:37,550:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:52,736:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:52,789:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:52,928:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:53,032:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:53,090:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:53,131:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:10:53,200:INFO:Calculating mean and std
2023-12-04 21:10:53,202:INFO:Creating metrics dataframe
2023-12-04 21:10:53,206:INFO:Uploading results into container
2023-12-04 21:10:53,210:INFO:Uploading model into container now
2023-12-04 21:10:53,211:INFO:_master_model_container: 12
2023-12-04 21:10:53,211:INFO:_display_container: 2
2023-12-04 21:10:53,212:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:10:53,212:INFO:create_model() successfully completed......................................
2023-12-04 21:10:53,477:INFO:SubProcess create_model() end ==================================
2023-12-04 21:10:53,477:INFO:Creating metrics dataframe
2023-12-04 21:10:53,513:INFO:Initializing Light Gradient Boosting Machine
2023-12-04 21:10:53,514:INFO:Total runtime is 11.087170044581095 minutes
2023-12-04 21:10:53,526:INFO:SubProcess create_model() called ==================================
2023-12-04 21:10:53,527:INFO:Initializing create_model()
2023-12-04 21:10:53,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:10:53,528:INFO:Checking exceptions
2023-12-04 21:10:53,528:INFO:Importing libraries
2023-12-04 21:10:53,528:INFO:Copying training dataset
2023-12-04 21:10:53,554:INFO:Defining folds
2023-12-04 21:10:53,554:INFO:Declaring metric variables
2023-12-04 21:10:53,565:INFO:Importing untrained model
2023-12-04 21:10:53,576:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:10:53,608:INFO:Starting cross validation
2023-12-04 21:10:53,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:11:08,094:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:08,142:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:08,189:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:08,199:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:08,241:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:08,314:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:09,032:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:09,090:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:09,092:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:09,150:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:09,154:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:09,229:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:22,317:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:22,371:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:22,422:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:23,099:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:23,173:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:23,233:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:23,353:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:23,421:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:23,487:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:24,623:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:24,703:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:24,797:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:30,402:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:30,464:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:30,509:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:30,809:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:30,863:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:30,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:30,951:INFO:Calculating mean and std
2023-12-04 21:11:30,954:INFO:Creating metrics dataframe
2023-12-04 21:11:30,965:INFO:Uploading results into container
2023-12-04 21:11:30,967:INFO:Uploading model into container now
2023-12-04 21:11:30,970:INFO:_master_model_container: 13
2023-12-04 21:11:30,971:INFO:_display_container: 2
2023-12-04 21:11:30,972:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:11:30,972:INFO:create_model() successfully completed......................................
2023-12-04 21:11:31,362:INFO:SubProcess create_model() end ==================================
2023-12-04 21:11:31,362:INFO:Creating metrics dataframe
2023-12-04 21:11:31,405:INFO:Initializing Dummy Classifier
2023-12-04 21:11:31,405:INFO:Total runtime is 11.718675061066945 minutes
2023-12-04 21:11:31,414:INFO:SubProcess create_model() called ==================================
2023-12-04 21:11:31,415:INFO:Initializing create_model()
2023-12-04 21:11:31,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A1492D370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:11:31,416:INFO:Checking exceptions
2023-12-04 21:11:31,416:INFO:Importing libraries
2023-12-04 21:11:31,416:INFO:Copying training dataset
2023-12-04 21:11:31,482:INFO:Defining folds
2023-12-04 21:11:31,484:INFO:Declaring metric variables
2023-12-04 21:11:31,504:INFO:Importing untrained model
2023-12-04 21:11:31,516:INFO:Dummy Classifier Imported successfully
2023-12-04 21:11:31,545:INFO:Starting cross validation
2023-12-04 21:11:31,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:11:40,935:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:40,961:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,006:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,042:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,059:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:41,081:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:41,087:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,108:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,119:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,129:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,164:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:41,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,204:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:41,215:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:41,236:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:49,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,035:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,057:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,070:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:50,077:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,095:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,111:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,116:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,130:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,157:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:50,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:50,185:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:50,205:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:50,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:55,459:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:55,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:55,539:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:55,565:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:55,605:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:55,652:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:55,673:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:11:55,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:11:55,766:INFO:Calculating mean and std
2023-12-04 21:11:55,768:INFO:Creating metrics dataframe
2023-12-04 21:11:55,775:INFO:Uploading results into container
2023-12-04 21:11:55,779:INFO:Uploading model into container now
2023-12-04 21:11:55,779:INFO:_master_model_container: 14
2023-12-04 21:11:55,779:INFO:_display_container: 2
2023-12-04 21:11:55,780:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-04 21:11:55,780:INFO:create_model() successfully completed......................................
2023-12-04 21:11:56,045:INFO:SubProcess create_model() end ==================================
2023-12-04 21:11:56,045:INFO:Creating metrics dataframe
2023-12-04 21:11:56,122:INFO:Initializing create_model()
2023-12-04 21:11:56,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:11:56,122:INFO:Checking exceptions
2023-12-04 21:11:56,130:INFO:Importing libraries
2023-12-04 21:11:56,130:INFO:Copying training dataset
2023-12-04 21:11:56,172:INFO:Defining folds
2023-12-04 21:11:56,172:INFO:Declaring metric variables
2023-12-04 21:11:56,172:INFO:Importing untrained model
2023-12-04 21:11:56,172:INFO:Declaring custom model
2023-12-04 21:11:56,177:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:11:56,188:INFO:Cross validation set to False
2023-12-04 21:11:56,189:INFO:Fitting Model
2023-12-04 21:12:01,933:INFO:[LightGBM] [Info] Number of positive: 21218, number of negative: 20813
2023-12-04 21:12:01,968:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.018387 seconds.
2023-12-04 21:12:01,968:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-04 21:12:01,968:INFO:[LightGBM] [Info] Total Bins 11998
2023-12-04 21:12:01,973:INFO:[LightGBM] [Info] Number of data points in the train set: 42031, number of used features: 64
2023-12-04 21:12:01,973:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.504818 -> initscore=0.019272
2023-12-04 21:12:01,973:INFO:[LightGBM] [Info] Start training from score 0.019272
2023-12-04 21:12:03,362:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:12:03,362:INFO:create_model() successfully completed......................................
2023-12-04 21:12:03,832:INFO:_master_model_container: 14
2023-12-04 21:12:03,832:INFO:_display_container: 2
2023-12-04 21:12:03,833:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:12:03,834:INFO:compare_models() successfully completed......................................
2023-12-04 21:13:53,593:INFO:Initializing create_model()
2023-12-04 21:13:53,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:13:53,596:INFO:Checking exceptions
2023-12-04 21:13:53,639:INFO:Importing libraries
2023-12-04 21:13:53,639:INFO:Copying training dataset
2023-12-04 21:13:53,671:INFO:Defining folds
2023-12-04 21:13:53,671:INFO:Declaring metric variables
2023-12-04 21:13:53,682:INFO:Importing untrained model
2023-12-04 21:13:53,694:INFO:Gradient Boosting Classifier Imported successfully
2023-12-04 21:13:53,726:INFO:Starting cross validation
2023-12-04 21:13:53,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:14:50,697:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:50,760:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:50,797:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:50,833:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:50,871:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:50,955:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:51,188:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:51,255:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:51,305:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:51,339:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:51,398:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:14:51,420:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:56,646:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:56,739:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:56,819:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:56,995:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,197:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,323:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,408:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,821:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:15:57,904:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:16:48,986:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:16:49,069:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:16:49,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:16:49,161:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:16:49,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:16:49,278:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:16:49,361:INFO:Calculating mean and std
2023-12-04 21:16:49,371:INFO:Creating metrics dataframe
2023-12-04 21:16:49,406:INFO:Finalizing model
2023-12-04 21:17:37,166:INFO:Uploading results into container
2023-12-04 21:17:37,176:INFO:Uploading model into container now
2023-12-04 21:17:37,238:INFO:_master_model_container: 15
2023-12-04 21:17:37,238:INFO:_display_container: 3
2023-12-04 21:17:37,238:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-04 21:17:37,238:INFO:create_model() successfully completed......................................
2023-12-04 21:17:37,621:INFO:Initializing create_model()
2023-12-04 21:17:37,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A15EB9E80>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:17:37,621:INFO:Checking exceptions
2023-12-04 21:17:37,686:INFO:Importing libraries
2023-12-04 21:17:37,686:INFO:Copying training dataset
2023-12-04 21:17:37,728:INFO:Defining folds
2023-12-04 21:17:37,728:INFO:Declaring metric variables
2023-12-04 21:17:37,744:INFO:Importing untrained model
2023-12-04 21:17:37,759:INFO:Ada Boost Classifier Imported successfully
2023-12-04 21:17:37,816:INFO:Starting cross validation
2023-12-04 21:17:37,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:18:05,573:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,621:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,777:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,781:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,783:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,792:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,874:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,881:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:05,973:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:30,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:30,677:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:30,756:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:30,878:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:30,987:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:31,008:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:31,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:31,086:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:31,109:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:31,112:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:31,191:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:31,203:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:48,567:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:48,629:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:48,676:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:48,792:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:48,823:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:48,859:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:18:48,916:INFO:Calculating mean and std
2023-12-04 21:18:48,922:INFO:Creating metrics dataframe
2023-12-04 21:18:48,932:INFO:Finalizing model
2023-12-04 21:19:04,593:INFO:Uploading results into container
2023-12-04 21:19:04,598:INFO:Uploading model into container now
2023-12-04 21:19:04,640:INFO:_master_model_container: 16
2023-12-04 21:19:04,640:INFO:_display_container: 4
2023-12-04 21:19:04,641:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-04 21:19:04,641:INFO:create_model() successfully completed......................................
2023-12-04 21:29:58,997:INFO:PyCaret ClassificationExperiment
2023-12-04 21:29:58,997:INFO:Logging name: clf-default-name
2023-12-04 21:29:59,001:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 21:29:59,001:INFO:version 3.2.0
2023-12-04 21:29:59,001:INFO:Initializing setup()
2023-12-04 21:29:59,002:INFO:self.USI: d43a
2023-12-04 21:29:59,002:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 21:29:59,002:INFO:Checking environment
2023-12-04 21:29:59,002:INFO:python_version: 3.9.18
2023-12-04 21:29:59,003:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 21:29:59,003:INFO:machine: AMD64
2023-12-04 21:29:59,003:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 21:29:59,003:INFO:Memory: svmem(total=7955767296, available=1210781696, percent=84.8, used=6744985600, free=1210781696)
2023-12-04 21:29:59,003:INFO:Physical Core: 2
2023-12-04 21:29:59,003:INFO:Logical Core: 4
2023-12-04 21:29:59,003:INFO:Checking libraries
2023-12-04 21:29:59,003:INFO:System:
2023-12-04 21:29:59,003:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 21:29:59,003:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 21:29:59,003:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 21:29:59,004:INFO:PyCaret required dependencies:
2023-12-04 21:29:59,004:INFO:                 pip: 23.3.1
2023-12-04 21:29:59,004:INFO:          setuptools: 68.0.0
2023-12-04 21:29:59,004:INFO:             pycaret: 3.2.0
2023-12-04 21:29:59,004:INFO:             IPython: 8.15.0
2023-12-04 21:29:59,004:INFO:          ipywidgets: 7.6.5
2023-12-04 21:29:59,004:INFO:                tqdm: 4.64.1
2023-12-04 21:29:59,005:INFO:               numpy: 1.25.2
2023-12-04 21:29:59,005:INFO:              pandas: 1.5.3
2023-12-04 21:29:59,005:INFO:              jinja2: 3.1.2
2023-12-04 21:29:59,006:INFO:               scipy: 1.9.3
2023-12-04 21:29:59,006:INFO:              joblib: 1.2.0
2023-12-04 21:29:59,006:INFO:             sklearn: 1.2.2
2023-12-04 21:29:59,006:INFO:                pyod: 1.1.2
2023-12-04 21:29:59,006:INFO:            imblearn: 0.11.0
2023-12-04 21:29:59,006:INFO:   category_encoders: 2.6.3
2023-12-04 21:29:59,006:INFO:            lightgbm: 4.1.0
2023-12-04 21:29:59,006:INFO:               numba: 0.58.1
2023-12-04 21:29:59,006:INFO:            requests: 2.28.1
2023-12-04 21:29:59,006:INFO:          matplotlib: 3.6.2
2023-12-04 21:29:59,006:INFO:          scikitplot: 0.3.7
2023-12-04 21:29:59,007:INFO:         yellowbrick: 1.5
2023-12-04 21:29:59,007:INFO:              plotly: 5.18.0
2023-12-04 21:29:59,007:INFO:    plotly-resampler: Not installed
2023-12-04 21:29:59,007:INFO:             kaleido: 0.2.1
2023-12-04 21:29:59,007:INFO:           schemdraw: 0.15
2023-12-04 21:29:59,007:INFO:         statsmodels: 0.14.0
2023-12-04 21:29:59,007:INFO:              sktime: 0.21.1
2023-12-04 21:29:59,007:INFO:               tbats: 1.1.3
2023-12-04 21:29:59,007:INFO:            pmdarima: 2.0.4
2023-12-04 21:29:59,007:INFO:              psutil: 5.9.0
2023-12-04 21:29:59,007:INFO:          markupsafe: 2.1.1
2023-12-04 21:29:59,008:INFO:             pickle5: Not installed
2023-12-04 21:29:59,008:INFO:         cloudpickle: 3.0.0
2023-12-04 21:29:59,008:INFO:         deprecation: 2.1.0
2023-12-04 21:29:59,008:INFO:              xxhash: 3.4.1
2023-12-04 21:29:59,008:INFO:           wurlitzer: Not installed
2023-12-04 21:29:59,008:INFO:PyCaret optional dependencies:
2023-12-04 21:29:59,008:INFO:                shap: 0.43.0
2023-12-04 21:29:59,008:INFO:           interpret: 0.4.4
2023-12-04 21:29:59,008:INFO:                umap: 0.5.5
2023-12-04 21:29:59,008:INFO:     ydata_profiling: 4.6.2
2023-12-04 21:29:59,008:INFO:  explainerdashboard: 0.4.3
2023-12-04 21:29:59,009:INFO:             autoviz: Not installed
2023-12-04 21:29:59,009:INFO:           fairlearn: 0.7.0
2023-12-04 21:29:59,009:INFO:          deepchecks: Not installed
2023-12-04 21:29:59,009:INFO:             xgboost: Not installed
2023-12-04 21:29:59,009:INFO:            catboost: Not installed
2023-12-04 21:29:59,010:INFO:              kmodes: Not installed
2023-12-04 21:29:59,010:INFO:             mlxtend: Not installed
2023-12-04 21:29:59,010:INFO:       statsforecast: Not installed
2023-12-04 21:29:59,010:INFO:        tune_sklearn: Not installed
2023-12-04 21:29:59,010:INFO:                 ray: Not installed
2023-12-04 21:29:59,010:INFO:            hyperopt: Not installed
2023-12-04 21:29:59,010:INFO:              optuna: Not installed
2023-12-04 21:29:59,011:INFO:               skopt: Not installed
2023-12-04 21:29:59,011:INFO:              mlflow: Not installed
2023-12-04 21:29:59,011:INFO:              gradio: Not installed
2023-12-04 21:29:59,011:INFO:             fastapi: Not installed
2023-12-04 21:29:59,011:INFO:             uvicorn: Not installed
2023-12-04 21:29:59,011:INFO:              m2cgen: Not installed
2023-12-04 21:29:59,011:INFO:           evidently: Not installed
2023-12-04 21:29:59,011:INFO:               fugue: Not installed
2023-12-04 21:29:59,011:INFO:           streamlit: 1.26.0
2023-12-04 21:29:59,011:INFO:             prophet: Not installed
2023-12-04 21:29:59,011:INFO:None
2023-12-04 21:29:59,012:INFO:Set up data.
2023-12-04 21:29:59,097:INFO:Set up folding strategy.
2023-12-04 21:29:59,098:INFO:Set up train/test split.
2023-12-04 21:29:59,166:INFO:Set up index.
2023-12-04 21:29:59,166:INFO:Assigning column types.
2023-12-04 21:29:59,174:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 21:29:59,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:29:59,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:29:59,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,388:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:29:59,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:29:59,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,452:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 21:29:59,564:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:29:59,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:29:59,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:29:59,804:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 21:30:00,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:00,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:00,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:00,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:00,614:INFO:Preparing preprocessing pipeline...
2023-12-04 21:30:00,652:INFO:Set up label encoding.
2023-12-04 21:30:00,652:INFO:Set up simple imputation.
2023-12-04 21:30:00,703:INFO:Set up encoding of ordinal features.
2023-12-04 21:30:00,712:INFO:Set up encoding of categorical features.
2023-12-04 21:30:00,713:INFO:Set up imbalanced handling.
2023-12-04 21:30:00,713:INFO:Set up column transformation.
2023-12-04 21:30:00,715:INFO:Set up column name cleaning.
2023-12-04 21:30:02,217:INFO:Finished creating preprocessing pipeline.
2023-12-04 21:30:02,294:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 21:30:02,294:INFO:Creating final display dataframe.
2023-12-04 21:30:03,985:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               d43a
2023-12-04 21:30:04,480:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:04,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:04,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:04,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:30:04,923:INFO:setup() successfully completed in 6.0s...............
2023-12-04 21:30:04,982:INFO:Initializing compare_models()
2023-12-04 21:30:04,982:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A168754C0>, include=None, fold=5, round=2, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A168754C0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 21:30:04,982:INFO:Checking exceptions
2023-12-04 21:30:05,004:INFO:Preparing display monitor
2023-12-04 21:30:05,103:INFO:Initializing Logistic Regression
2023-12-04 21:30:05,104:INFO:Total runtime is 1.6629695892333984e-05 minutes
2023-12-04 21:30:05,114:INFO:SubProcess create_model() called ==================================
2023-12-04 21:30:05,119:INFO:Initializing create_model()
2023-12-04 21:30:05,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A168754C0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A16875640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:30:05,119:INFO:Checking exceptions
2023-12-04 21:30:05,119:INFO:Importing libraries
2023-12-04 21:30:05,121:INFO:Copying training dataset
2023-12-04 21:30:05,174:INFO:Defining folds
2023-12-04 21:30:05,176:INFO:Declaring metric variables
2023-12-04 21:30:05,188:INFO:Importing untrained model
2023-12-04 21:30:05,199:INFO:Logistic Regression Imported successfully
2023-12-04 21:30:05,227:INFO:Starting cross validation
2023-12-04 21:30:05,236:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:30:54,758:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:30:54,793:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:30:55,284:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:30:55,335:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:30:55,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:55,808:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:55,993:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,024:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,120:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,149:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,204:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,524:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:30:56,530:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:15,270:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:31:15,859:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:16,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:16,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:16,325:INFO:Calculating mean and std
2023-12-04 21:31:16,328:INFO:Creating metrics dataframe
2023-12-04 21:31:16,336:INFO:Uploading results into container
2023-12-04 21:31:16,339:INFO:Uploading model into container now
2023-12-04 21:31:16,340:INFO:_master_model_container: 1
2023-12-04 21:31:16,340:INFO:_display_container: 2
2023-12-04 21:31:16,341:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-04 21:31:16,342:INFO:create_model() successfully completed......................................
2023-12-04 21:31:16,910:INFO:SubProcess create_model() end ==================================
2023-12-04 21:31:16,910:INFO:Creating metrics dataframe
2023-12-04 21:31:16,928:INFO:Initializing K Neighbors Classifier
2023-12-04 21:31:16,928:INFO:Total runtime is 1.1970817923545838 minutes
2023-12-04 21:31:16,937:INFO:SubProcess create_model() called ==================================
2023-12-04 21:31:16,937:INFO:Initializing create_model()
2023-12-04 21:31:16,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A168754C0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A16875640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:31:16,937:INFO:Checking exceptions
2023-12-04 21:31:16,938:INFO:Importing libraries
2023-12-04 21:31:16,939:INFO:Copying training dataset
2023-12-04 21:31:16,974:INFO:Defining folds
2023-12-04 21:31:16,974:INFO:Declaring metric variables
2023-12-04 21:31:17,018:INFO:Importing untrained model
2023-12-04 21:31:17,037:INFO:K Neighbors Classifier Imported successfully
2023-12-04 21:31:17,068:INFO:Starting cross validation
2023-12-04 21:31:17,102:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:31:56,967:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,053:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,176:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,236:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,297:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,334:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,462:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,479:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,619:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,655:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,689:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:31:57,752:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:05,590:INFO:PyCaret ClassificationExperiment
2023-12-04 21:32:05,591:INFO:Logging name: clf-default-name
2023-12-04 21:32:05,591:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 21:32:05,591:INFO:version 3.2.0
2023-12-04 21:32:05,591:INFO:Initializing setup()
2023-12-04 21:32:05,591:INFO:self.USI: 029f
2023-12-04 21:32:05,591:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 21:32:05,591:INFO:Checking environment
2023-12-04 21:32:05,592:INFO:python_version: 3.9.18
2023-12-04 21:32:05,592:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 21:32:05,592:INFO:machine: AMD64
2023-12-04 21:32:05,592:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 21:32:05,592:INFO:Memory: svmem(total=7955767296, available=1377611776, percent=82.7, used=6578155520, free=1377611776)
2023-12-04 21:32:05,592:INFO:Physical Core: 2
2023-12-04 21:32:05,592:INFO:Logical Core: 4
2023-12-04 21:32:05,592:INFO:Checking libraries
2023-12-04 21:32:05,592:INFO:System:
2023-12-04 21:32:05,592:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 21:32:05,593:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 21:32:05,593:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 21:32:05,593:INFO:PyCaret required dependencies:
2023-12-04 21:32:05,593:INFO:                 pip: 23.3.1
2023-12-04 21:32:05,593:INFO:          setuptools: 68.0.0
2023-12-04 21:32:05,593:INFO:             pycaret: 3.2.0
2023-12-04 21:32:05,593:INFO:             IPython: 8.15.0
2023-12-04 21:32:05,593:INFO:          ipywidgets: 7.6.5
2023-12-04 21:32:05,593:INFO:                tqdm: 4.64.1
2023-12-04 21:32:05,594:INFO:               numpy: 1.25.2
2023-12-04 21:32:05,594:INFO:              pandas: 1.5.3
2023-12-04 21:32:05,594:INFO:              jinja2: 3.1.2
2023-12-04 21:32:05,594:INFO:               scipy: 1.9.3
2023-12-04 21:32:05,594:INFO:              joblib: 1.2.0
2023-12-04 21:32:05,594:INFO:             sklearn: 1.2.2
2023-12-04 21:32:05,594:INFO:                pyod: 1.1.2
2023-12-04 21:32:05,594:INFO:            imblearn: 0.11.0
2023-12-04 21:32:05,594:INFO:   category_encoders: 2.6.3
2023-12-04 21:32:05,595:INFO:            lightgbm: 4.1.0
2023-12-04 21:32:05,595:INFO:               numba: 0.58.1
2023-12-04 21:32:05,595:INFO:            requests: 2.28.1
2023-12-04 21:32:05,595:INFO:          matplotlib: 3.6.2
2023-12-04 21:32:05,595:INFO:          scikitplot: 0.3.7
2023-12-04 21:32:05,595:INFO:         yellowbrick: 1.5
2023-12-04 21:32:05,595:INFO:              plotly: 5.18.0
2023-12-04 21:32:05,595:INFO:    plotly-resampler: Not installed
2023-12-04 21:32:05,595:INFO:             kaleido: 0.2.1
2023-12-04 21:32:05,595:INFO:           schemdraw: 0.15
2023-12-04 21:32:05,595:INFO:         statsmodels: 0.14.0
2023-12-04 21:32:05,596:INFO:              sktime: 0.21.1
2023-12-04 21:32:05,596:INFO:               tbats: 1.1.3
2023-12-04 21:32:05,596:INFO:            pmdarima: 2.0.4
2023-12-04 21:32:05,596:INFO:              psutil: 5.9.0
2023-12-04 21:32:05,596:INFO:          markupsafe: 2.1.1
2023-12-04 21:32:05,596:INFO:             pickle5: Not installed
2023-12-04 21:32:05,597:INFO:         cloudpickle: 3.0.0
2023-12-04 21:32:05,597:INFO:         deprecation: 2.1.0
2023-12-04 21:32:05,597:INFO:              xxhash: 3.4.1
2023-12-04 21:32:05,597:INFO:           wurlitzer: Not installed
2023-12-04 21:32:05,597:INFO:PyCaret optional dependencies:
2023-12-04 21:32:05,597:INFO:                shap: 0.43.0
2023-12-04 21:32:05,597:INFO:           interpret: 0.4.4
2023-12-04 21:32:05,598:INFO:                umap: 0.5.5
2023-12-04 21:32:05,598:INFO:     ydata_profiling: 4.6.2
2023-12-04 21:32:05,598:INFO:  explainerdashboard: 0.4.3
2023-12-04 21:32:05,598:INFO:             autoviz: Not installed
2023-12-04 21:32:05,598:INFO:           fairlearn: 0.7.0
2023-12-04 21:32:05,598:INFO:          deepchecks: Not installed
2023-12-04 21:32:05,598:INFO:             xgboost: Not installed
2023-12-04 21:32:05,598:INFO:            catboost: Not installed
2023-12-04 21:32:05,598:INFO:              kmodes: Not installed
2023-12-04 21:32:05,598:INFO:             mlxtend: Not installed
2023-12-04 21:32:05,598:INFO:       statsforecast: Not installed
2023-12-04 21:32:05,598:INFO:        tune_sklearn: Not installed
2023-12-04 21:32:05,598:INFO:                 ray: Not installed
2023-12-04 21:32:05,599:INFO:            hyperopt: Not installed
2023-12-04 21:32:05,599:INFO:              optuna: Not installed
2023-12-04 21:32:05,599:INFO:               skopt: Not installed
2023-12-04 21:32:05,599:INFO:              mlflow: Not installed
2023-12-04 21:32:05,599:INFO:              gradio: Not installed
2023-12-04 21:32:05,599:INFO:             fastapi: Not installed
2023-12-04 21:32:05,599:INFO:             uvicorn: Not installed
2023-12-04 21:32:05,599:INFO:              m2cgen: Not installed
2023-12-04 21:32:05,599:INFO:           evidently: Not installed
2023-12-04 21:32:05,599:INFO:               fugue: Not installed
2023-12-04 21:32:05,599:INFO:           streamlit: 1.26.0
2023-12-04 21:32:05,599:INFO:             prophet: Not installed
2023-12-04 21:32:05,599:INFO:None
2023-12-04 21:32:05,599:INFO:Set up data.
2023-12-04 21:32:05,677:INFO:Set up folding strategy.
2023-12-04 21:32:05,678:INFO:Set up train/test split.
2023-12-04 21:32:05,727:INFO:Set up index.
2023-12-04 21:32:05,728:INFO:Assigning column types.
2023-12-04 21:32:05,737:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 21:32:05,793:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:32:05,794:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:32:05,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:05,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:05,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:32:05,895:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:32:05,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:05,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:05,935:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 21:32:05,994:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:32:06,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:32:06,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,164:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 21:32:06,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:06,412:INFO:Preparing preprocessing pipeline...
2023-12-04 21:32:06,415:INFO:Set up label encoding.
2023-12-04 21:32:06,415:INFO:Set up simple imputation.
2023-12-04 21:32:06,427:INFO:Set up encoding of ordinal features.
2023-12-04 21:32:06,432:INFO:Set up encoding of categorical features.
2023-12-04 21:32:06,432:INFO:Set up imbalanced handling.
2023-12-04 21:32:06,432:INFO:Set up column transformation.
2023-12-04 21:32:06,434:INFO:Set up column name cleaning.
2023-12-04 21:32:07,729:INFO:Finished creating preprocessing pipeline.
2023-12-04 21:32:08,001:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 21:32:08,002:INFO:Creating final display dataframe.
2023-12-04 21:32:08,896:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               029f
2023-12-04 21:32:09,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:09,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:09,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:09,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:32:09,486:INFO:setup() successfully completed in 3.93s...............
2023-12-04 21:32:09,487:INFO:Initializing compare_models()
2023-12-04 21:32:09,487:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 21:32:09,487:INFO:Checking exceptions
2023-12-04 21:32:09,500:INFO:Preparing display monitor
2023-12-04 21:32:09,595:INFO:Initializing Logistic Regression
2023-12-04 21:32:09,595:INFO:Total runtime is 0.0 minutes
2023-12-04 21:32:09,627:INFO:SubProcess create_model() called ==================================
2023-12-04 21:32:09,628:INFO:Initializing create_model()
2023-12-04 21:32:09,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:32:09,629:INFO:Checking exceptions
2023-12-04 21:32:09,629:INFO:Importing libraries
2023-12-04 21:32:09,630:INFO:Copying training dataset
2023-12-04 21:32:09,684:INFO:Defining folds
2023-12-04 21:32:09,684:INFO:Declaring metric variables
2023-12-04 21:32:09,701:INFO:Importing untrained model
2023-12-04 21:32:09,713:INFO:Logistic Regression Imported successfully
2023-12-04 21:32:09,736:INFO:Starting cross validation
2023-12-04 21:32:09,749:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:32:50,416:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:32:50,571:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:32:50,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:32:50,789:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:32:50,972:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,107:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,113:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,212:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,291:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,294:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,322:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,384:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,429:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,446:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,509:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:32:51,558:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:04,419:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:33:04,756:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:04,839:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:04,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:05,065:INFO:Calculating mean and std
2023-12-04 21:33:05,068:INFO:Creating metrics dataframe
2023-12-04 21:33:05,081:INFO:Uploading results into container
2023-12-04 21:33:05,083:INFO:Uploading model into container now
2023-12-04 21:33:05,085:INFO:_master_model_container: 1
2023-12-04 21:33:05,085:INFO:_display_container: 2
2023-12-04 21:33:05,085:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-04 21:33:05,085:INFO:create_model() successfully completed......................................
2023-12-04 21:33:05,462:INFO:SubProcess create_model() end ==================================
2023-12-04 21:33:05,462:INFO:Creating metrics dataframe
2023-12-04 21:33:05,487:INFO:Initializing K Neighbors Classifier
2023-12-04 21:33:05,488:INFO:Total runtime is 0.9315397143363953 minutes
2023-12-04 21:33:05,497:INFO:SubProcess create_model() called ==================================
2023-12-04 21:33:05,497:INFO:Initializing create_model()
2023-12-04 21:33:05,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:33:05,497:INFO:Checking exceptions
2023-12-04 21:33:05,497:INFO:Importing libraries
2023-12-04 21:33:05,497:INFO:Copying training dataset
2023-12-04 21:33:05,541:INFO:Defining folds
2023-12-04 21:33:05,541:INFO:Declaring metric variables
2023-12-04 21:33:05,552:INFO:Importing untrained model
2023-12-04 21:33:05,569:INFO:K Neighbors Classifier Imported successfully
2023-12-04 21:33:05,590:INFO:Starting cross validation
2023-12-04 21:33:05,597:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:33:36,508:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,620:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,634:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,644:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,747:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,770:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,790:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,809:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,891:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,891:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:36,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:37,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:48,753:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:48,822:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:48,874:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:48,965:INFO:Calculating mean and std
2023-12-04 21:33:48,965:INFO:Creating metrics dataframe
2023-12-04 21:33:48,975:INFO:Uploading results into container
2023-12-04 21:33:48,975:INFO:Uploading model into container now
2023-12-04 21:33:48,975:INFO:_master_model_container: 2
2023-12-04 21:33:48,978:INFO:_display_container: 2
2023-12-04 21:33:48,979:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-04 21:33:48,979:INFO:create_model() successfully completed......................................
2023-12-04 21:33:49,265:INFO:SubProcess create_model() end ==================================
2023-12-04 21:33:49,265:INFO:Creating metrics dataframe
2023-12-04 21:33:49,287:INFO:Initializing Naive Bayes
2023-12-04 21:33:49,287:INFO:Total runtime is 1.6615310867627462 minutes
2023-12-04 21:33:49,294:INFO:SubProcess create_model() called ==================================
2023-12-04 21:33:49,294:INFO:Initializing create_model()
2023-12-04 21:33:49,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:33:49,294:INFO:Checking exceptions
2023-12-04 21:33:49,294:INFO:Importing libraries
2023-12-04 21:33:49,294:INFO:Copying training dataset
2023-12-04 21:33:49,333:INFO:Defining folds
2023-12-04 21:33:49,334:INFO:Declaring metric variables
2023-12-04 21:33:49,360:INFO:Importing untrained model
2023-12-04 21:33:49,372:INFO:Naive Bayes Imported successfully
2023-12-04 21:33:49,390:INFO:Starting cross validation
2023-12-04 21:33:49,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:33:58,730:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:58,870:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:58,967:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:58,980:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,032:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,086:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,112:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,116:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,240:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,264:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,267:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:33:59,383:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:04,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:04,424:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:04,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:04,583:INFO:Calculating mean and std
2023-12-04 21:34:04,586:INFO:Creating metrics dataframe
2023-12-04 21:34:04,592:INFO:Uploading results into container
2023-12-04 21:34:04,592:INFO:Uploading model into container now
2023-12-04 21:34:04,595:INFO:_master_model_container: 3
2023-12-04 21:34:04,596:INFO:_display_container: 2
2023-12-04 21:34:04,596:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-04 21:34:04,596:INFO:create_model() successfully completed......................................
2023-12-04 21:34:04,884:INFO:SubProcess create_model() end ==================================
2023-12-04 21:34:04,884:INFO:Creating metrics dataframe
2023-12-04 21:34:04,896:INFO:Initializing Decision Tree Classifier
2023-12-04 21:34:04,896:INFO:Total runtime is 1.9216885566711426 minutes
2023-12-04 21:34:04,904:INFO:SubProcess create_model() called ==================================
2023-12-04 21:34:04,904:INFO:Initializing create_model()
2023-12-04 21:34:04,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:34:04,904:INFO:Checking exceptions
2023-12-04 21:34:04,904:INFO:Importing libraries
2023-12-04 21:34:04,909:INFO:Copying training dataset
2023-12-04 21:34:04,940:INFO:Defining folds
2023-12-04 21:34:04,943:INFO:Declaring metric variables
2023-12-04 21:34:04,962:INFO:Importing untrained model
2023-12-04 21:34:04,970:INFO:Decision Tree Classifier Imported successfully
2023-12-04 21:34:04,988:INFO:Starting cross validation
2023-12-04 21:34:04,996:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:34:15,394:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,500:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,561:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,641:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,732:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,814:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,883:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,954:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:15,989:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:16,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:16,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:21,832:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:21,884:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:21,938:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:22,059:INFO:Calculating mean and std
2023-12-04 21:34:22,061:INFO:Creating metrics dataframe
2023-12-04 21:34:22,076:INFO:Uploading results into container
2023-12-04 21:34:22,077:INFO:Uploading model into container now
2023-12-04 21:34:22,079:INFO:_master_model_container: 4
2023-12-04 21:34:22,081:INFO:_display_container: 2
2023-12-04 21:34:22,081:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-04 21:34:22,081:INFO:create_model() successfully completed......................................
2023-12-04 21:34:22,337:INFO:SubProcess create_model() end ==================================
2023-12-04 21:34:22,337:INFO:Creating metrics dataframe
2023-12-04 21:34:22,350:INFO:Initializing SVM - Linear Kernel
2023-12-04 21:34:22,350:INFO:Total runtime is 2.2125829021135965 minutes
2023-12-04 21:34:22,354:INFO:SubProcess create_model() called ==================================
2023-12-04 21:34:22,354:INFO:Initializing create_model()
2023-12-04 21:34:22,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:34:22,354:INFO:Checking exceptions
2023-12-04 21:34:22,354:INFO:Importing libraries
2023-12-04 21:34:22,358:INFO:Copying training dataset
2023-12-04 21:34:22,382:INFO:Defining folds
2023-12-04 21:34:22,382:INFO:Declaring metric variables
2023-12-04 21:34:22,393:INFO:Importing untrained model
2023-12-04 21:34:22,405:INFO:SVM - Linear Kernel Imported successfully
2023-12-04 21:34:22,432:INFO:Starting cross validation
2023-12-04 21:34:22,440:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:34:39,253:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:34:39,289:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:39,400:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:39,534:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:39,583:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:34:39,628:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:39,777:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:39,902:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:40,269:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:34:40,328:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:40,379:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:34:40,425:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:40,440:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:40,570:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:40,585:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:40,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:46,989:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:34:47,005:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:47,074:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:47,132:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:47,204:INFO:Calculating mean and std
2023-12-04 21:34:47,205:INFO:Creating metrics dataframe
2023-12-04 21:34:47,210:INFO:Uploading results into container
2023-12-04 21:34:47,210:INFO:Uploading model into container now
2023-12-04 21:34:47,210:INFO:_master_model_container: 5
2023-12-04 21:34:47,210:INFO:_display_container: 2
2023-12-04 21:34:47,210:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-04 21:34:47,210:INFO:create_model() successfully completed......................................
2023-12-04 21:34:47,451:INFO:SubProcess create_model() end ==================================
2023-12-04 21:34:47,451:INFO:Creating metrics dataframe
2023-12-04 21:34:47,491:INFO:Initializing Ridge Classifier
2023-12-04 21:34:47,491:INFO:Total runtime is 2.6315911253293356 minutes
2023-12-04 21:34:47,501:INFO:SubProcess create_model() called ==================================
2023-12-04 21:34:47,502:INFO:Initializing create_model()
2023-12-04 21:34:47,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:34:47,502:INFO:Checking exceptions
2023-12-04 21:34:47,502:INFO:Importing libraries
2023-12-04 21:34:47,502:INFO:Copying training dataset
2023-12-04 21:34:47,541:INFO:Defining folds
2023-12-04 21:34:47,542:INFO:Declaring metric variables
2023-12-04 21:34:47,551:INFO:Importing untrained model
2023-12-04 21:34:47,569:INFO:Ridge Classifier Imported successfully
2023-12-04 21:34:47,588:INFO:Starting cross validation
2023-12-04 21:34:47,597:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:34:57,934:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:34:57,987:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:34:57,998:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,048:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,067:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:34:58,144:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:34:58,164:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,196:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,228:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,251:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,304:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,333:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,380:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:34:58,542:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:02,598:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:35:02,618:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:02,670:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:02,743:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:02,844:INFO:Calculating mean and std
2023-12-04 21:35:02,844:INFO:Creating metrics dataframe
2023-12-04 21:35:02,852:INFO:Uploading results into container
2023-12-04 21:35:02,854:INFO:Uploading model into container now
2023-12-04 21:35:02,854:INFO:_master_model_container: 6
2023-12-04 21:35:02,854:INFO:_display_container: 2
2023-12-04 21:35:02,857:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-04 21:35:02,858:INFO:create_model() successfully completed......................................
2023-12-04 21:35:03,100:INFO:SubProcess create_model() end ==================================
2023-12-04 21:35:03,100:INFO:Creating metrics dataframe
2023-12-04 21:35:03,124:INFO:Initializing Random Forest Classifier
2023-12-04 21:35:03,124:INFO:Total runtime is 2.892146150271098 minutes
2023-12-04 21:35:03,128:INFO:SubProcess create_model() called ==================================
2023-12-04 21:35:03,133:INFO:Initializing create_model()
2023-12-04 21:35:03,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:35:03,133:INFO:Checking exceptions
2023-12-04 21:35:03,133:INFO:Importing libraries
2023-12-04 21:35:03,133:INFO:Copying training dataset
2023-12-04 21:35:03,159:INFO:Defining folds
2023-12-04 21:35:03,161:INFO:Declaring metric variables
2023-12-04 21:35:03,168:INFO:Importing untrained model
2023-12-04 21:35:03,180:INFO:Random Forest Classifier Imported successfully
2023-12-04 21:35:03,206:INFO:Starting cross validation
2023-12-04 21:35:03,213:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:35:32,491:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:32,778:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:32,824:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:32,953:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:32,967:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:33,019:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:33,182:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:33,259:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:33,503:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:33,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:34,109:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:34,265:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:46,265:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:46,409:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:46,548:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:46,734:INFO:Calculating mean and std
2023-12-04 21:35:46,737:INFO:Creating metrics dataframe
2023-12-04 21:35:46,746:INFO:Uploading results into container
2023-12-04 21:35:46,750:INFO:Uploading model into container now
2023-12-04 21:35:46,751:INFO:_master_model_container: 7
2023-12-04 21:35:46,751:INFO:_display_container: 2
2023-12-04 21:35:46,754:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:35:46,754:INFO:create_model() successfully completed......................................
2023-12-04 21:35:47,112:INFO:SubProcess create_model() end ==================================
2023-12-04 21:35:47,113:INFO:Creating metrics dataframe
2023-12-04 21:35:47,153:INFO:Initializing Quadratic Discriminant Analysis
2023-12-04 21:35:47,153:INFO:Total runtime is 3.625973908106486 minutes
2023-12-04 21:35:47,164:INFO:SubProcess create_model() called ==================================
2023-12-04 21:35:47,164:INFO:Initializing create_model()
2023-12-04 21:35:47,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:35:47,164:INFO:Checking exceptions
2023-12-04 21:35:47,164:INFO:Importing libraries
2023-12-04 21:35:47,164:INFO:Copying training dataset
2023-12-04 21:35:47,221:INFO:Defining folds
2023-12-04 21:35:47,223:INFO:Declaring metric variables
2023-12-04 21:35:47,248:INFO:Importing untrained model
2023-12-04 21:35:47,265:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-04 21:35:47,290:INFO:Starting cross validation
2023-12-04 21:35:47,300:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:35:58,642:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:35:58,667:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:35:58,679:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:35:58,952:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:35:59,719:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:59,724:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:59,731:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:59,919:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:59,927:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:59,929:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:35:59,948:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:00,063:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:00,081:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:00,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:00,164:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:00,284:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:04,926:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:36:05,254:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:05,309:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:05,368:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:05,523:INFO:Calculating mean and std
2023-12-04 21:36:05,528:INFO:Creating metrics dataframe
2023-12-04 21:36:05,539:INFO:Uploading results into container
2023-12-04 21:36:05,540:INFO:Uploading model into container now
2023-12-04 21:36:05,540:INFO:_master_model_container: 8
2023-12-04 21:36:05,540:INFO:_display_container: 2
2023-12-04 21:36:05,544:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-04 21:36:05,544:INFO:create_model() successfully completed......................................
2023-12-04 21:36:05,818:INFO:SubProcess create_model() end ==================================
2023-12-04 21:36:05,818:INFO:Creating metrics dataframe
2023-12-04 21:36:05,843:INFO:Initializing Ada Boost Classifier
2023-12-04 21:36:05,843:INFO:Total runtime is 3.937462588151296 minutes
2023-12-04 21:36:05,850:INFO:SubProcess create_model() called ==================================
2023-12-04 21:36:05,850:INFO:Initializing create_model()
2023-12-04 21:36:05,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:36:05,850:INFO:Checking exceptions
2023-12-04 21:36:05,850:INFO:Importing libraries
2023-12-04 21:36:05,853:INFO:Copying training dataset
2023-12-04 21:36:05,884:INFO:Defining folds
2023-12-04 21:36:05,885:INFO:Declaring metric variables
2023-12-04 21:36:05,922:INFO:Importing untrained model
2023-12-04 21:36:05,945:INFO:Ada Boost Classifier Imported successfully
2023-12-04 21:36:06,011:INFO:Starting cross validation
2023-12-04 21:36:06,021:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:36:25,675:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:25,804:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:25,887:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,014:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,024:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,048:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,107:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,214:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,269:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,277:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,417:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:26,442:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:35,629:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:35,687:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:35,750:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:36:35,857:INFO:Calculating mean and std
2023-12-04 21:36:35,860:INFO:Creating metrics dataframe
2023-12-04 21:36:35,871:INFO:Uploading results into container
2023-12-04 21:36:35,871:INFO:Uploading model into container now
2023-12-04 21:36:35,871:INFO:_master_model_container: 9
2023-12-04 21:36:35,875:INFO:_display_container: 2
2023-12-04 21:36:35,875:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-04 21:36:35,876:INFO:create_model() successfully completed......................................
2023-12-04 21:36:36,104:INFO:SubProcess create_model() end ==================================
2023-12-04 21:36:36,104:INFO:Creating metrics dataframe
2023-12-04 21:36:36,119:INFO:Initializing Gradient Boosting Classifier
2023-12-04 21:36:36,120:INFO:Total runtime is 4.442078638076782 minutes
2023-12-04 21:36:36,123:INFO:SubProcess create_model() called ==================================
2023-12-04 21:36:36,123:INFO:Initializing create_model()
2023-12-04 21:36:36,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:36:36,123:INFO:Checking exceptions
2023-12-04 21:36:36,123:INFO:Importing libraries
2023-12-04 21:36:36,128:INFO:Copying training dataset
2023-12-04 21:36:36,144:INFO:Defining folds
2023-12-04 21:36:36,145:INFO:Declaring metric variables
2023-12-04 21:36:36,154:INFO:Importing untrained model
2023-12-04 21:36:36,161:INFO:Gradient Boosting Classifier Imported successfully
2023-12-04 21:36:36,180:INFO:Starting cross validation
2023-12-04 21:36:36,186:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:37:21,789:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:21,934:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,126:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,152:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,216:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,293:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,305:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,342:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,441:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,503:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:22,664:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:46,443:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:46,526:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:46,601:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:46,750:INFO:Calculating mean and std
2023-12-04 21:37:46,753:INFO:Creating metrics dataframe
2023-12-04 21:37:46,764:INFO:Uploading results into container
2023-12-04 21:37:46,765:INFO:Uploading model into container now
2023-12-04 21:37:46,766:INFO:_master_model_container: 10
2023-12-04 21:37:46,766:INFO:_display_container: 2
2023-12-04 21:37:46,768:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-04 21:37:46,768:INFO:create_model() successfully completed......................................
2023-12-04 21:37:47,067:INFO:SubProcess create_model() end ==================================
2023-12-04 21:37:47,067:INFO:Creating metrics dataframe
2023-12-04 21:37:47,084:INFO:Initializing Linear Discriminant Analysis
2023-12-04 21:37:47,084:INFO:Total runtime is 5.624822870890299 minutes
2023-12-04 21:37:47,096:INFO:SubProcess create_model() called ==================================
2023-12-04 21:37:47,097:INFO:Initializing create_model()
2023-12-04 21:37:47,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:37:47,097:INFO:Checking exceptions
2023-12-04 21:37:47,097:INFO:Importing libraries
2023-12-04 21:37:47,098:INFO:Copying training dataset
2023-12-04 21:37:47,124:INFO:Defining folds
2023-12-04 21:37:47,124:INFO:Declaring metric variables
2023-12-04 21:37:47,135:INFO:Importing untrained model
2023-12-04 21:37:47,145:INFO:Linear Discriminant Analysis Imported successfully
2023-12-04 21:37:47,180:INFO:Starting cross validation
2023-12-04 21:37:47,194:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:37:57,994:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,001:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,085:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,151:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,160:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,208:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,260:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,363:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,379:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,391:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,446:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:37:58,553:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:03,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:04,034:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:04,090:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:04,159:INFO:Calculating mean and std
2023-12-04 21:38:04,160:INFO:Creating metrics dataframe
2023-12-04 21:38:04,165:INFO:Uploading results into container
2023-12-04 21:38:04,166:INFO:Uploading model into container now
2023-12-04 21:38:04,167:INFO:_master_model_container: 11
2023-12-04 21:38:04,167:INFO:_display_container: 2
2023-12-04 21:38:04,167:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-04 21:38:04,168:INFO:create_model() successfully completed......................................
2023-12-04 21:38:04,445:INFO:SubProcess create_model() end ==================================
2023-12-04 21:38:04,445:INFO:Creating metrics dataframe
2023-12-04 21:38:04,465:INFO:Initializing Extra Trees Classifier
2023-12-04 21:38:04,465:INFO:Total runtime is 5.914497860272725 minutes
2023-12-04 21:38:04,474:INFO:SubProcess create_model() called ==================================
2023-12-04 21:38:04,475:INFO:Initializing create_model()
2023-12-04 21:38:04,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:38:04,476:INFO:Checking exceptions
2023-12-04 21:38:04,476:INFO:Importing libraries
2023-12-04 21:38:04,476:INFO:Copying training dataset
2023-12-04 21:38:04,501:INFO:Defining folds
2023-12-04 21:38:04,502:INFO:Declaring metric variables
2023-12-04 21:38:04,514:INFO:Importing untrained model
2023-12-04 21:38:04,528:INFO:Extra Trees Classifier Imported successfully
2023-12-04 21:38:04,552:INFO:Starting cross validation
2023-12-04 21:38:04,561:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:38:35,933:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:36,240:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:36,301:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:36,430:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:36,544:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:36,670:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:36,710:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:36,973:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:37,077:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:37,133:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:37,224:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:37,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:45,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:45,508:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:45,567:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:45,649:INFO:Calculating mean and std
2023-12-04 21:38:45,654:INFO:Creating metrics dataframe
2023-12-04 21:38:45,662:INFO:Uploading results into container
2023-12-04 21:38:45,663:INFO:Uploading model into container now
2023-12-04 21:38:45,664:INFO:_master_model_container: 12
2023-12-04 21:38:45,665:INFO:_display_container: 2
2023-12-04 21:38:45,667:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:38:45,667:INFO:create_model() successfully completed......................................
2023-12-04 21:38:45,949:INFO:SubProcess create_model() end ==================================
2023-12-04 21:38:45,949:INFO:Creating metrics dataframe
2023-12-04 21:38:45,967:INFO:Initializing Light Gradient Boosting Machine
2023-12-04 21:38:45,967:INFO:Total runtime is 6.60619249343872 minutes
2023-12-04 21:38:45,976:INFO:SubProcess create_model() called ==================================
2023-12-04 21:38:45,976:INFO:Initializing create_model()
2023-12-04 21:38:45,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:38:45,977:INFO:Checking exceptions
2023-12-04 21:38:45,977:INFO:Importing libraries
2023-12-04 21:38:45,977:INFO:Copying training dataset
2023-12-04 21:38:45,993:INFO:Defining folds
2023-12-04 21:38:45,993:INFO:Declaring metric variables
2023-12-04 21:38:46,002:INFO:Importing untrained model
2023-12-04 21:38:46,011:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:38:46,029:INFO:Starting cross validation
2023-12-04 21:38:46,035:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:38:58,343:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:58,462:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:58,468:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:58,567:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:58,606:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:58,762:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:58,893:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:58,928:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:59,011:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:59,034:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:59,129:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:38:59,139:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:03,267:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:03,333:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:03,384:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:03,474:INFO:Calculating mean and std
2023-12-04 21:39:03,474:INFO:Creating metrics dataframe
2023-12-04 21:39:03,489:INFO:Uploading results into container
2023-12-04 21:39:03,490:INFO:Uploading model into container now
2023-12-04 21:39:03,491:INFO:_master_model_container: 13
2023-12-04 21:39:03,491:INFO:_display_container: 2
2023-12-04 21:39:03,492:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:39:03,492:INFO:create_model() successfully completed......................................
2023-12-04 21:39:03,774:INFO:SubProcess create_model() end ==================================
2023-12-04 21:39:03,774:INFO:Creating metrics dataframe
2023-12-04 21:39:03,806:INFO:Initializing Dummy Classifier
2023-12-04 21:39:03,806:INFO:Total runtime is 6.903518255551655 minutes
2023-12-04 21:39:03,816:INFO:SubProcess create_model() called ==================================
2023-12-04 21:39:03,817:INFO:Initializing create_model()
2023-12-04 21:39:03,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A0FB4D490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:39:03,818:INFO:Checking exceptions
2023-12-04 21:39:03,818:INFO:Importing libraries
2023-12-04 21:39:03,818:INFO:Copying training dataset
2023-12-04 21:39:03,844:INFO:Defining folds
2023-12-04 21:39:03,845:INFO:Declaring metric variables
2023-12-04 21:39:03,855:INFO:Importing untrained model
2023-12-04 21:39:03,865:INFO:Dummy Classifier Imported successfully
2023-12-04 21:39:03,912:INFO:Starting cross validation
2023-12-04 21:39:03,919:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:39:13,715:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,829:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,850:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,850:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,904:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:39:13,919:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:39:13,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:39:13,943:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,957:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,966:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:13,975:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:14,057:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:14,123:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:39:14,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:17,145:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:17,191:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:17,216:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:39:17,239:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:17,300:INFO:Calculating mean and std
2023-12-04 21:39:17,301:INFO:Creating metrics dataframe
2023-12-04 21:39:17,308:INFO:Uploading results into container
2023-12-04 21:39:17,309:INFO:Uploading model into container now
2023-12-04 21:39:17,310:INFO:_master_model_container: 14
2023-12-04 21:39:17,310:INFO:_display_container: 2
2023-12-04 21:39:17,312:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-04 21:39:17,312:INFO:create_model() successfully completed......................................
2023-12-04 21:39:17,525:INFO:SubProcess create_model() end ==================================
2023-12-04 21:39:17,527:INFO:Creating metrics dataframe
2023-12-04 21:39:17,564:INFO:Initializing create_model()
2023-12-04 21:39:17,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A146D1580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:39:17,564:INFO:Checking exceptions
2023-12-04 21:39:17,564:INFO:Importing libraries
2023-12-04 21:39:17,564:INFO:Copying training dataset
2023-12-04 21:39:17,593:INFO:Defining folds
2023-12-04 21:39:17,593:INFO:Declaring metric variables
2023-12-04 21:39:17,593:INFO:Importing untrained model
2023-12-04 21:39:17,593:INFO:Declaring custom model
2023-12-04 21:39:17,597:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:39:17,605:INFO:Cross validation set to False
2023-12-04 21:39:17,606:INFO:Fitting Model
2023-12-04 21:39:22,902:INFO:[LightGBM] [Info] Number of positive: 20813, number of negative: 20813
2023-12-04 21:39:22,924:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.010338 seconds.
2023-12-04 21:39:22,924:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-04 21:39:22,924:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-04 21:39:22,926:INFO:[LightGBM] [Info] Total Bins 12135
2023-12-04 21:39:22,928:INFO:[LightGBM] [Info] Number of data points in the train set: 41626, number of used features: 64
2023-12-04 21:39:22,929:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-04 21:39:23,795:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:39:23,795:INFO:create_model() successfully completed......................................
2023-12-04 21:39:24,158:INFO:_master_model_container: 14
2023-12-04 21:39:24,158:INFO:_display_container: 2
2023-12-04 21:39:24,160:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:39:24,160:INFO:compare_models() successfully completed......................................
2023-12-04 21:39:24,244:INFO:PyCaret ClassificationExperiment
2023-12-04 21:39:24,244:INFO:Logging name: clf-default-name
2023-12-04 21:39:24,244:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 21:39:24,244:INFO:version 3.2.0
2023-12-04 21:39:24,244:INFO:Initializing setup()
2023-12-04 21:39:24,244:INFO:self.USI: 1a3c
2023-12-04 21:39:24,244:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 21:39:24,244:INFO:Checking environment
2023-12-04 21:39:24,244:INFO:python_version: 3.9.18
2023-12-04 21:39:24,249:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 21:39:24,249:INFO:machine: AMD64
2023-12-04 21:39:24,249:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 21:39:24,249:INFO:Memory: svmem(total=7955767296, available=1057177600, percent=86.7, used=6898589696, free=1057177600)
2023-12-04 21:39:24,249:INFO:Physical Core: 2
2023-12-04 21:39:24,249:INFO:Logical Core: 4
2023-12-04 21:39:24,249:INFO:Checking libraries
2023-12-04 21:39:24,249:INFO:System:
2023-12-04 21:39:24,249:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 21:39:24,249:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 21:39:24,249:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 21:39:24,249:INFO:PyCaret required dependencies:
2023-12-04 21:39:24,249:INFO:                 pip: 23.3.1
2023-12-04 21:39:24,249:INFO:          setuptools: 68.0.0
2023-12-04 21:39:24,249:INFO:             pycaret: 3.2.0
2023-12-04 21:39:24,249:INFO:             IPython: 8.15.0
2023-12-04 21:39:24,249:INFO:          ipywidgets: 7.6.5
2023-12-04 21:39:24,249:INFO:                tqdm: 4.64.1
2023-12-04 21:39:24,249:INFO:               numpy: 1.25.2
2023-12-04 21:39:24,249:INFO:              pandas: 1.5.3
2023-12-04 21:39:24,249:INFO:              jinja2: 3.1.2
2023-12-04 21:39:24,253:INFO:               scipy: 1.9.3
2023-12-04 21:39:24,253:INFO:              joblib: 1.2.0
2023-12-04 21:39:24,253:INFO:             sklearn: 1.2.2
2023-12-04 21:39:24,253:INFO:                pyod: 1.1.2
2023-12-04 21:39:24,253:INFO:            imblearn: 0.11.0
2023-12-04 21:39:24,253:INFO:   category_encoders: 2.6.3
2023-12-04 21:39:24,253:INFO:            lightgbm: 4.1.0
2023-12-04 21:39:24,253:INFO:               numba: 0.58.1
2023-12-04 21:39:24,253:INFO:            requests: 2.28.1
2023-12-04 21:39:24,254:INFO:          matplotlib: 3.6.2
2023-12-04 21:39:24,254:INFO:          scikitplot: 0.3.7
2023-12-04 21:39:24,254:INFO:         yellowbrick: 1.5
2023-12-04 21:39:24,254:INFO:              plotly: 5.18.0
2023-12-04 21:39:24,254:INFO:    plotly-resampler: Not installed
2023-12-04 21:39:24,254:INFO:             kaleido: 0.2.1
2023-12-04 21:39:24,254:INFO:           schemdraw: 0.15
2023-12-04 21:39:24,254:INFO:         statsmodels: 0.14.0
2023-12-04 21:39:24,254:INFO:              sktime: 0.21.1
2023-12-04 21:39:24,254:INFO:               tbats: 1.1.3
2023-12-04 21:39:24,255:INFO:            pmdarima: 2.0.4
2023-12-04 21:39:24,255:INFO:              psutil: 5.9.0
2023-12-04 21:39:24,255:INFO:          markupsafe: 2.1.1
2023-12-04 21:39:24,255:INFO:             pickle5: Not installed
2023-12-04 21:39:24,255:INFO:         cloudpickle: 3.0.0
2023-12-04 21:39:24,255:INFO:         deprecation: 2.1.0
2023-12-04 21:39:24,255:INFO:              xxhash: 3.4.1
2023-12-04 21:39:24,255:INFO:           wurlitzer: Not installed
2023-12-04 21:39:24,256:INFO:PyCaret optional dependencies:
2023-12-04 21:39:24,256:INFO:                shap: 0.43.0
2023-12-04 21:39:24,256:INFO:           interpret: 0.4.4
2023-12-04 21:39:24,256:INFO:                umap: 0.5.5
2023-12-04 21:39:24,256:INFO:     ydata_profiling: 4.6.2
2023-12-04 21:39:24,256:INFO:  explainerdashboard: 0.4.3
2023-12-04 21:39:24,256:INFO:             autoviz: Not installed
2023-12-04 21:39:24,256:INFO:           fairlearn: 0.7.0
2023-12-04 21:39:24,256:INFO:          deepchecks: Not installed
2023-12-04 21:39:24,257:INFO:             xgboost: Not installed
2023-12-04 21:39:24,257:INFO:            catboost: Not installed
2023-12-04 21:39:24,257:INFO:              kmodes: Not installed
2023-12-04 21:39:24,257:INFO:             mlxtend: Not installed
2023-12-04 21:39:24,257:INFO:       statsforecast: Not installed
2023-12-04 21:39:24,257:INFO:        tune_sklearn: Not installed
2023-12-04 21:39:24,257:INFO:                 ray: Not installed
2023-12-04 21:39:24,257:INFO:            hyperopt: Not installed
2023-12-04 21:39:24,258:INFO:              optuna: Not installed
2023-12-04 21:39:24,258:INFO:               skopt: Not installed
2023-12-04 21:39:24,258:INFO:              mlflow: Not installed
2023-12-04 21:39:24,258:INFO:              gradio: Not installed
2023-12-04 21:39:24,258:INFO:             fastapi: Not installed
2023-12-04 21:39:24,258:INFO:             uvicorn: Not installed
2023-12-04 21:39:24,259:INFO:              m2cgen: Not installed
2023-12-04 21:39:24,259:INFO:           evidently: Not installed
2023-12-04 21:39:24,259:INFO:               fugue: Not installed
2023-12-04 21:39:24,259:INFO:           streamlit: 1.26.0
2023-12-04 21:39:24,260:INFO:             prophet: Not installed
2023-12-04 21:39:24,260:INFO:None
2023-12-04 21:39:24,260:INFO:Set up data.
2023-12-04 21:39:24,337:INFO:Set up folding strategy.
2023-12-04 21:39:24,337:INFO:Set up train/test split.
2023-12-04 21:39:24,396:INFO:Set up index.
2023-12-04 21:39:24,397:INFO:Assigning column types.
2023-12-04 21:39:24,406:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 21:39:24,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:39:24,466:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:39:24,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:39:24,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:39:24,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,609:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 21:39:24,673:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:39:24,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:39:24,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,808:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 21:39:24,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:24,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:25,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:25,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:25,009:INFO:Preparing preprocessing pipeline...
2023-12-04 21:39:25,012:INFO:Set up label encoding.
2023-12-04 21:39:25,012:INFO:Set up simple imputation.
2023-12-04 21:39:25,019:INFO:Set up encoding of ordinal features.
2023-12-04 21:39:25,027:INFO:Set up encoding of categorical features.
2023-12-04 21:39:25,027:INFO:Set up imbalanced handling.
2023-12-04 21:39:25,027:INFO:Set up column transformation.
2023-12-04 21:39:25,027:INFO:Set up column name cleaning.
2023-12-04 21:39:25,827:INFO:Finished creating preprocessing pipeline.
2023-12-04 21:39:25,864:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 21:39:25,865:INFO:Creating final display dataframe.
2023-12-04 21:39:27,084:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation             median
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method    borderlinesmote
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               1a3c
2023-12-04 21:39:27,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:27,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:27,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:27,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:39:27,580:INFO:setup() successfully completed in 3.42s...............
2023-12-04 21:39:27,654:INFO:Initializing compare_models()
2023-12-04 21:39:27,654:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 21:39:27,654:INFO:Checking exceptions
2023-12-04 21:39:27,664:INFO:Preparing display monitor
2023-12-04 21:39:27,730:INFO:Initializing Logistic Regression
2023-12-04 21:39:27,731:INFO:Total runtime is 1.663366953531901e-05 minutes
2023-12-04 21:39:27,742:INFO:SubProcess create_model() called ==================================
2023-12-04 21:39:27,744:INFO:Initializing create_model()
2023-12-04 21:39:27,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:39:27,744:INFO:Checking exceptions
2023-12-04 21:39:27,745:INFO:Importing libraries
2023-12-04 21:39:27,745:INFO:Copying training dataset
2023-12-04 21:39:27,804:INFO:Defining folds
2023-12-04 21:39:27,804:INFO:Declaring metric variables
2023-12-04 21:39:27,822:INFO:Importing untrained model
2023-12-04 21:39:27,835:INFO:Logistic Regression Imported successfully
2023-12-04 21:39:27,858:INFO:Starting cross validation
2023-12-04 21:39:27,867:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:39:49,958:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:39:50,317:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:39:50,331:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:39:50,348:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:39:50,568:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:50,690:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:50,833:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:50,890:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:50,916:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:50,954:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:51,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:51,028:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:51,058:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:51,128:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:51,176:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:39:51,190:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:00,042:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:40:00,276:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:00,362:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:00,441:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:00,504:INFO:Calculating mean and std
2023-12-04 21:40:00,509:INFO:Creating metrics dataframe
2023-12-04 21:40:00,514:INFO:Uploading results into container
2023-12-04 21:40:00,515:INFO:Uploading model into container now
2023-12-04 21:40:00,516:INFO:_master_model_container: 1
2023-12-04 21:40:00,516:INFO:_display_container: 2
2023-12-04 21:40:00,518:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-04 21:40:00,519:INFO:create_model() successfully completed......................................
2023-12-04 21:40:00,793:INFO:SubProcess create_model() end ==================================
2023-12-04 21:40:00,793:INFO:Creating metrics dataframe
2023-12-04 21:40:00,804:INFO:Initializing K Neighbors Classifier
2023-12-04 21:40:00,804:INFO:Total runtime is 0.5512447794278462 minutes
2023-12-04 21:40:00,812:INFO:SubProcess create_model() called ==================================
2023-12-04 21:40:00,812:INFO:Initializing create_model()
2023-12-04 21:40:00,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:40:00,813:INFO:Checking exceptions
2023-12-04 21:40:00,813:INFO:Importing libraries
2023-12-04 21:40:00,813:INFO:Copying training dataset
2023-12-04 21:40:00,833:INFO:Defining folds
2023-12-04 21:40:00,835:INFO:Declaring metric variables
2023-12-04 21:40:00,844:INFO:Importing untrained model
2023-12-04 21:40:00,866:INFO:K Neighbors Classifier Imported successfully
2023-12-04 21:40:00,882:INFO:Starting cross validation
2023-12-04 21:40:00,885:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:40:20,761:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:20,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,086:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,113:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,139:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,236:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,299:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,373:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,389:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,416:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:21,480:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:27,349:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:27,413:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:27,467:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:27,543:INFO:Calculating mean and std
2023-12-04 21:40:27,545:INFO:Creating metrics dataframe
2023-12-04 21:40:27,549:INFO:Uploading results into container
2023-12-04 21:40:27,549:INFO:Uploading model into container now
2023-12-04 21:40:27,549:INFO:_master_model_container: 2
2023-12-04 21:40:27,549:INFO:_display_container: 2
2023-12-04 21:40:27,553:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-04 21:40:27,554:INFO:create_model() successfully completed......................................
2023-12-04 21:40:27,779:INFO:SubProcess create_model() end ==================================
2023-12-04 21:40:27,779:INFO:Creating metrics dataframe
2023-12-04 21:40:27,794:INFO:Initializing Naive Bayes
2023-12-04 21:40:27,794:INFO:Total runtime is 1.0010696609814962 minutes
2023-12-04 21:40:27,799:INFO:SubProcess create_model() called ==================================
2023-12-04 21:40:27,800:INFO:Initializing create_model()
2023-12-04 21:40:27,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:40:27,800:INFO:Checking exceptions
2023-12-04 21:40:27,800:INFO:Importing libraries
2023-12-04 21:40:27,800:INFO:Copying training dataset
2023-12-04 21:40:27,823:INFO:Defining folds
2023-12-04 21:40:27,823:INFO:Declaring metric variables
2023-12-04 21:40:27,830:INFO:Importing untrained model
2023-12-04 21:40:27,841:INFO:Naive Bayes Imported successfully
2023-12-04 21:40:27,863:INFO:Starting cross validation
2023-12-04 21:40:27,870:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:40:36,192:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,217:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,242:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,333:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,338:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,378:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,423:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,453:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,453:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:36,499:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:39,165:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:39,212:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:39,261:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:39,326:INFO:Calculating mean and std
2023-12-04 21:40:39,328:INFO:Creating metrics dataframe
2023-12-04 21:40:39,336:INFO:Uploading results into container
2023-12-04 21:40:39,336:INFO:Uploading model into container now
2023-12-04 21:40:39,336:INFO:_master_model_container: 3
2023-12-04 21:40:39,336:INFO:_display_container: 2
2023-12-04 21:40:39,336:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-04 21:40:39,336:INFO:create_model() successfully completed......................................
2023-12-04 21:40:39,588:INFO:SubProcess create_model() end ==================================
2023-12-04 21:40:39,589:INFO:Creating metrics dataframe
2023-12-04 21:40:39,608:INFO:Initializing Decision Tree Classifier
2023-12-04 21:40:39,608:INFO:Total runtime is 1.1979761242866516 minutes
2023-12-04 21:40:39,615:INFO:SubProcess create_model() called ==================================
2023-12-04 21:40:39,615:INFO:Initializing create_model()
2023-12-04 21:40:39,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:40:39,615:INFO:Checking exceptions
2023-12-04 21:40:39,615:INFO:Importing libraries
2023-12-04 21:40:39,615:INFO:Copying training dataset
2023-12-04 21:40:39,670:INFO:Defining folds
2023-12-04 21:40:39,671:INFO:Declaring metric variables
2023-12-04 21:40:39,678:INFO:Importing untrained model
2023-12-04 21:40:39,685:INFO:Decision Tree Classifier Imported successfully
2023-12-04 21:40:39,701:INFO:Starting cross validation
2023-12-04 21:40:39,727:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:40:51,177:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,398:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,476:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,527:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,602:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,614:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,707:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,784:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,886:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:51,967:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:52,018:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:52,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:56,320:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:56,410:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:56,518:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:40:56,624:INFO:Calculating mean and std
2023-12-04 21:40:56,626:INFO:Creating metrics dataframe
2023-12-04 21:40:56,640:INFO:Uploading results into container
2023-12-04 21:40:56,640:INFO:Uploading model into container now
2023-12-04 21:40:56,640:INFO:_master_model_container: 4
2023-12-04 21:40:56,640:INFO:_display_container: 2
2023-12-04 21:40:56,640:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-04 21:40:56,640:INFO:create_model() successfully completed......................................
2023-12-04 21:40:56,919:INFO:SubProcess create_model() end ==================================
2023-12-04 21:40:56,919:INFO:Creating metrics dataframe
2023-12-04 21:40:56,944:INFO:Initializing SVM - Linear Kernel
2023-12-04 21:40:56,949:INFO:Total runtime is 1.4869925538698832 minutes
2023-12-04 21:40:56,954:INFO:SubProcess create_model() called ==================================
2023-12-04 21:40:56,954:INFO:Initializing create_model()
2023-12-04 21:40:56,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:40:56,954:INFO:Checking exceptions
2023-12-04 21:40:56,954:INFO:Importing libraries
2023-12-04 21:40:56,959:INFO:Copying training dataset
2023-12-04 21:40:56,990:INFO:Defining folds
2023-12-04 21:40:56,990:INFO:Declaring metric variables
2023-12-04 21:40:57,001:INFO:Importing untrained model
2023-12-04 21:40:57,012:INFO:SVM - Linear Kernel Imported successfully
2023-12-04 21:40:57,035:INFO:Starting cross validation
2023-12-04 21:40:57,043:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:41:08,127:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:41:08,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:08,274:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:08,396:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,144:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:41:09,194:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,425:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,464:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:41:09,526:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,617:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:41:09,664:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,669:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,829:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:09,868:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:10,075:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:13,759:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:41:13,783:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:13,835:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:13,883:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:13,950:INFO:Calculating mean and std
2023-12-04 21:41:13,955:INFO:Creating metrics dataframe
2023-12-04 21:41:13,959:INFO:Uploading results into container
2023-12-04 21:41:13,959:INFO:Uploading model into container now
2023-12-04 21:41:13,959:INFO:_master_model_container: 5
2023-12-04 21:41:13,959:INFO:_display_container: 2
2023-12-04 21:41:13,959:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-04 21:41:13,959:INFO:create_model() successfully completed......................................
2023-12-04 21:41:14,173:INFO:SubProcess create_model() end ==================================
2023-12-04 21:41:14,173:INFO:Creating metrics dataframe
2023-12-04 21:41:14,197:INFO:Initializing Ridge Classifier
2023-12-04 21:41:14,197:INFO:Total runtime is 1.7744608124097188 minutes
2023-12-04 21:41:14,203:INFO:SubProcess create_model() called ==================================
2023-12-04 21:41:14,204:INFO:Initializing create_model()
2023-12-04 21:41:14,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:41:14,204:INFO:Checking exceptions
2023-12-04 21:41:14,204:INFO:Importing libraries
2023-12-04 21:41:14,205:INFO:Copying training dataset
2023-12-04 21:41:14,218:INFO:Defining folds
2023-12-04 21:41:14,218:INFO:Declaring metric variables
2023-12-04 21:41:14,223:INFO:Importing untrained model
2023-12-04 21:41:14,238:INFO:Ridge Classifier Imported successfully
2023-12-04 21:41:14,256:INFO:Starting cross validation
2023-12-04 21:41:14,264:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:41:22,318:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:41:22,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,369:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:41:22,387:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:41:22,394:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:41:22,414:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,433:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,440:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,490:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,525:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,545:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,560:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,605:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,630:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,673:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:22,676:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:25,359:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:41:25,380:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:25,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:25,472:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:25,537:INFO:Calculating mean and std
2023-12-04 21:41:25,540:INFO:Creating metrics dataframe
2023-12-04 21:41:25,550:INFO:Uploading results into container
2023-12-04 21:41:25,551:INFO:Uploading model into container now
2023-12-04 21:41:25,552:INFO:_master_model_container: 6
2023-12-04 21:41:25,552:INFO:_display_container: 2
2023-12-04 21:41:25,552:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-04 21:41:25,552:INFO:create_model() successfully completed......................................
2023-12-04 21:41:25,767:INFO:SubProcess create_model() end ==================================
2023-12-04 21:41:25,772:INFO:Creating metrics dataframe
2023-12-04 21:41:25,785:INFO:Initializing Random Forest Classifier
2023-12-04 21:41:25,785:INFO:Total runtime is 1.967583179473877 minutes
2023-12-04 21:41:25,789:INFO:SubProcess create_model() called ==================================
2023-12-04 21:41:25,790:INFO:Initializing create_model()
2023-12-04 21:41:25,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:41:25,790:INFO:Checking exceptions
2023-12-04 21:41:25,790:INFO:Importing libraries
2023-12-04 21:41:25,790:INFO:Copying training dataset
2023-12-04 21:41:25,805:INFO:Defining folds
2023-12-04 21:41:25,805:INFO:Declaring metric variables
2023-12-04 21:41:25,808:INFO:Importing untrained model
2023-12-04 21:41:25,819:INFO:Random Forest Classifier Imported successfully
2023-12-04 21:41:25,838:INFO:Starting cross validation
2023-12-04 21:41:25,847:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:41:52,076:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,315:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,321:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,408:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,470:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,516:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,597:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:52,758:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:53,191:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:53,315:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:53,431:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:59,778:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:59,866:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:41:59,938:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:00,052:INFO:Calculating mean and std
2023-12-04 21:42:00,052:INFO:Creating metrics dataframe
2023-12-04 21:42:00,065:INFO:Uploading results into container
2023-12-04 21:42:00,067:INFO:Uploading model into container now
2023-12-04 21:42:00,071:INFO:_master_model_container: 7
2023-12-04 21:42:00,071:INFO:_display_container: 2
2023-12-04 21:42:00,073:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:42:00,074:INFO:create_model() successfully completed......................................
2023-12-04 21:42:00,349:INFO:SubProcess create_model() end ==================================
2023-12-04 21:42:00,349:INFO:Creating metrics dataframe
2023-12-04 21:42:00,374:INFO:Initializing Quadratic Discriminant Analysis
2023-12-04 21:42:00,374:INFO:Total runtime is 2.5440651774406433 minutes
2023-12-04 21:42:00,385:INFO:SubProcess create_model() called ==================================
2023-12-04 21:42:00,385:INFO:Initializing create_model()
2023-12-04 21:42:00,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:42:00,385:INFO:Checking exceptions
2023-12-04 21:42:00,385:INFO:Importing libraries
2023-12-04 21:42:00,385:INFO:Copying training dataset
2023-12-04 21:42:00,419:INFO:Defining folds
2023-12-04 21:42:00,419:INFO:Declaring metric variables
2023-12-04 21:42:00,430:INFO:Importing untrained model
2023-12-04 21:42:00,440:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-04 21:42:00,469:INFO:Starting cross validation
2023-12-04 21:42:00,483:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:42:09,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:42:09,461:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:42:09,587:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:42:09,592:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:42:10,393:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,420:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,485:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,508:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,538:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,595:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,611:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,629:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,648:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,717:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:10,722:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:13,219:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:42:13,545:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:13,596:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:13,642:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:13,715:INFO:Calculating mean and std
2023-12-04 21:42:13,716:INFO:Creating metrics dataframe
2023-12-04 21:42:13,721:INFO:Uploading results into container
2023-12-04 21:42:13,721:INFO:Uploading model into container now
2023-12-04 21:42:13,724:INFO:_master_model_container: 8
2023-12-04 21:42:13,725:INFO:_display_container: 2
2023-12-04 21:42:13,725:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-04 21:42:13,725:INFO:create_model() successfully completed......................................
2023-12-04 21:42:13,949:INFO:SubProcess create_model() end ==================================
2023-12-04 21:42:13,949:INFO:Creating metrics dataframe
2023-12-04 21:42:13,962:INFO:Initializing Ada Boost Classifier
2023-12-04 21:42:13,962:INFO:Total runtime is 2.770542287826538 minutes
2023-12-04 21:42:13,969:INFO:SubProcess create_model() called ==================================
2023-12-04 21:42:13,969:INFO:Initializing create_model()
2023-12-04 21:42:13,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:42:13,969:INFO:Checking exceptions
2023-12-04 21:42:13,969:INFO:Importing libraries
2023-12-04 21:42:13,969:INFO:Copying training dataset
2023-12-04 21:42:13,989:INFO:Defining folds
2023-12-04 21:42:13,989:INFO:Declaring metric variables
2023-12-04 21:42:13,996:INFO:Importing untrained model
2023-12-04 21:42:14,002:INFO:Ada Boost Classifier Imported successfully
2023-12-04 21:42:14,022:INFO:Starting cross validation
2023-12-04 21:42:14,029:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:42:35,171:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,317:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,340:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,392:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,493:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,518:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,521:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,665:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,691:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,765:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:35,938:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:42,479:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:42,525:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:42,570:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:42:42,638:INFO:Calculating mean and std
2023-12-04 21:42:42,640:INFO:Creating metrics dataframe
2023-12-04 21:42:42,644:INFO:Uploading results into container
2023-12-04 21:42:42,645:INFO:Uploading model into container now
2023-12-04 21:42:42,645:INFO:_master_model_container: 9
2023-12-04 21:42:42,645:INFO:_display_container: 2
2023-12-04 21:42:42,645:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-04 21:42:42,645:INFO:create_model() successfully completed......................................
2023-12-04 21:42:42,867:INFO:SubProcess create_model() end ==================================
2023-12-04 21:42:42,868:INFO:Creating metrics dataframe
2023-12-04 21:42:42,901:INFO:Initializing Gradient Boosting Classifier
2023-12-04 21:42:42,901:INFO:Total runtime is 3.252857689062754 minutes
2023-12-04 21:42:42,905:INFO:SubProcess create_model() called ==================================
2023-12-04 21:42:42,905:INFO:Initializing create_model()
2023-12-04 21:42:42,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:42:42,905:INFO:Checking exceptions
2023-12-04 21:42:42,905:INFO:Importing libraries
2023-12-04 21:42:42,905:INFO:Copying training dataset
2023-12-04 21:42:42,925:INFO:Defining folds
2023-12-04 21:42:42,925:INFO:Declaring metric variables
2023-12-04 21:42:42,933:INFO:Importing untrained model
2023-12-04 21:42:42,940:INFO:Gradient Boosting Classifier Imported successfully
2023-12-04 21:42:42,955:INFO:Starting cross validation
2023-12-04 21:42:42,965:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:43:29,142:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,259:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,356:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,405:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,571:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,651:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,700:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,793:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:29,911:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:30,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:47,596:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:47,650:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:47,707:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:47,777:INFO:Calculating mean and std
2023-12-04 21:43:47,778:INFO:Creating metrics dataframe
2023-12-04 21:43:47,782:INFO:Uploading results into container
2023-12-04 21:43:47,784:INFO:Uploading model into container now
2023-12-04 21:43:47,784:INFO:_master_model_container: 10
2023-12-04 21:43:47,784:INFO:_display_container: 2
2023-12-04 21:43:47,784:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-04 21:43:47,784:INFO:create_model() successfully completed......................................
2023-12-04 21:43:47,997:INFO:SubProcess create_model() end ==================================
2023-12-04 21:43:47,997:INFO:Creating metrics dataframe
2023-12-04 21:43:48,026:INFO:Initializing Linear Discriminant Analysis
2023-12-04 21:43:48,026:INFO:Total runtime is 4.338277447223663 minutes
2023-12-04 21:43:48,035:INFO:SubProcess create_model() called ==================================
2023-12-04 21:43:48,035:INFO:Initializing create_model()
2023-12-04 21:43:48,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:43:48,036:INFO:Checking exceptions
2023-12-04 21:43:48,036:INFO:Importing libraries
2023-12-04 21:43:48,036:INFO:Copying training dataset
2023-12-04 21:43:48,057:INFO:Defining folds
2023-12-04 21:43:48,059:INFO:Declaring metric variables
2023-12-04 21:43:48,066:INFO:Importing untrained model
2023-12-04 21:43:48,075:INFO:Linear Discriminant Analysis Imported successfully
2023-12-04 21:43:48,103:INFO:Starting cross validation
2023-12-04 21:43:48,109:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:43:58,953:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:58,953:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,050:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,074:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,085:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,146:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,198:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,211:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,277:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,282:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:43:59,469:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:03,324:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:03,407:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:03,512:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:03,594:INFO:Calculating mean and std
2023-12-04 21:44:03,600:INFO:Creating metrics dataframe
2023-12-04 21:44:03,604:INFO:Uploading results into container
2023-12-04 21:44:03,605:INFO:Uploading model into container now
2023-12-04 21:44:03,606:INFO:_master_model_container: 11
2023-12-04 21:44:03,607:INFO:_display_container: 2
2023-12-04 21:44:03,607:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-04 21:44:03,607:INFO:create_model() successfully completed......................................
2023-12-04 21:44:03,846:INFO:SubProcess create_model() end ==================================
2023-12-04 21:44:03,846:INFO:Creating metrics dataframe
2023-12-04 21:44:03,864:INFO:Initializing Extra Trees Classifier
2023-12-04 21:44:03,865:INFO:Total runtime is 4.602257823944091 minutes
2023-12-04 21:44:03,870:INFO:SubProcess create_model() called ==================================
2023-12-04 21:44:03,870:INFO:Initializing create_model()
2023-12-04 21:44:03,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:44:03,870:INFO:Checking exceptions
2023-12-04 21:44:03,870:INFO:Importing libraries
2023-12-04 21:44:03,870:INFO:Copying training dataset
2023-12-04 21:44:03,891:INFO:Defining folds
2023-12-04 21:44:03,891:INFO:Declaring metric variables
2023-12-04 21:44:03,900:INFO:Importing untrained model
2023-12-04 21:44:03,909:INFO:Extra Trees Classifier Imported successfully
2023-12-04 21:44:03,929:INFO:Starting cross validation
2023-12-04 21:44:03,937:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:44:28,620:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:28,816:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:28,869:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:28,869:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:28,964:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:29,005:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:29,014:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:29,161:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:29,253:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:29,684:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:29,799:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:29,913:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:36,507:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:36,556:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:36,609:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:36,683:INFO:Calculating mean and std
2023-12-04 21:44:36,686:INFO:Creating metrics dataframe
2023-12-04 21:44:36,693:INFO:Uploading results into container
2023-12-04 21:44:36,695:INFO:Uploading model into container now
2023-12-04 21:44:36,696:INFO:_master_model_container: 12
2023-12-04 21:44:36,696:INFO:_display_container: 2
2023-12-04 21:44:36,698:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:44:36,698:INFO:create_model() successfully completed......................................
2023-12-04 21:44:36,927:INFO:SubProcess create_model() end ==================================
2023-12-04 21:44:36,927:INFO:Creating metrics dataframe
2023-12-04 21:44:36,945:INFO:Initializing Light Gradient Boosting Machine
2023-12-04 21:44:36,945:INFO:Total runtime is 5.153587186336517 minutes
2023-12-04 21:44:36,949:INFO:SubProcess create_model() called ==================================
2023-12-04 21:44:36,950:INFO:Initializing create_model()
2023-12-04 21:44:36,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:44:36,951:INFO:Checking exceptions
2023-12-04 21:44:36,951:INFO:Importing libraries
2023-12-04 21:44:36,951:INFO:Copying training dataset
2023-12-04 21:44:36,967:INFO:Defining folds
2023-12-04 21:44:36,968:INFO:Declaring metric variables
2023-12-04 21:44:36,976:INFO:Importing untrained model
2023-12-04 21:44:36,981:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:44:36,999:INFO:Starting cross validation
2023-12-04 21:44:37,011:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:44:48,166:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,216:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,289:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,304:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,338:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,400:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,412:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,451:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,800:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,887:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:48,962:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:52,340:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:52,401:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:52,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:44:52,520:INFO:Calculating mean and std
2023-12-04 21:44:52,526:INFO:Creating metrics dataframe
2023-12-04 21:44:52,526:INFO:Uploading results into container
2023-12-04 21:44:52,531:INFO:Uploading model into container now
2023-12-04 21:44:52,531:INFO:_master_model_container: 13
2023-12-04 21:44:52,531:INFO:_display_container: 2
2023-12-04 21:44:52,531:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:44:52,531:INFO:create_model() successfully completed......................................
2023-12-04 21:44:52,821:INFO:SubProcess create_model() end ==================================
2023-12-04 21:44:52,821:INFO:Creating metrics dataframe
2023-12-04 21:44:52,859:INFO:Initializing Dummy Classifier
2023-12-04 21:44:52,859:INFO:Total runtime is 5.418813482920328 minutes
2023-12-04 21:44:52,866:INFO:SubProcess create_model() called ==================================
2023-12-04 21:44:52,871:INFO:Initializing create_model()
2023-12-04 21:44:52,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A13371940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:44:52,871:INFO:Checking exceptions
2023-12-04 21:44:52,871:INFO:Importing libraries
2023-12-04 21:44:52,871:INFO:Copying training dataset
2023-12-04 21:44:52,903:INFO:Defining folds
2023-12-04 21:44:52,903:INFO:Declaring metric variables
2023-12-04 21:44:52,912:INFO:Importing untrained model
2023-12-04 21:44:52,922:INFO:Dummy Classifier Imported successfully
2023-12-04 21:44:52,946:INFO:Starting cross validation
2023-12-04 21:44:52,956:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:45:01,617:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,695:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,798:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,833:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,882:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,911:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:45:01,953:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:45:01,984:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,999:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:01,999:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:45:02,029:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:02,064:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:02,160:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:02,275:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:45:02,335:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:05,947:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:06,062:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:06,100:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:45:06,122:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:06,193:INFO:Calculating mean and std
2023-12-04 21:45:06,193:INFO:Creating metrics dataframe
2023-12-04 21:45:06,202:INFO:Uploading results into container
2023-12-04 21:45:06,202:INFO:Uploading model into container now
2023-12-04 21:45:06,203:INFO:_master_model_container: 14
2023-12-04 21:45:06,203:INFO:_display_container: 2
2023-12-04 21:45:06,203:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-04 21:45:06,205:INFO:create_model() successfully completed......................................
2023-12-04 21:45:06,422:INFO:SubProcess create_model() end ==================================
2023-12-04 21:45:06,422:INFO:Creating metrics dataframe
2023-12-04 21:45:06,464:INFO:Initializing create_model()
2023-12-04 21:45:06,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A10D96940>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:45:06,465:INFO:Checking exceptions
2023-12-04 21:45:06,466:INFO:Importing libraries
2023-12-04 21:45:06,466:INFO:Copying training dataset
2023-12-04 21:45:06,493:INFO:Defining folds
2023-12-04 21:45:06,493:INFO:Declaring metric variables
2023-12-04 21:45:06,494:INFO:Importing untrained model
2023-12-04 21:45:06,494:INFO:Declaring custom model
2023-12-04 21:45:06,498:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:45:06,506:INFO:Cross validation set to False
2023-12-04 21:45:06,506:INFO:Fitting Model
2023-12-04 21:45:10,221:INFO:[LightGBM] [Info] Number of positive: 20813, number of negative: 20813
2023-12-04 21:45:10,251:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.013348 seconds.
2023-12-04 21:45:10,251:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-04 21:45:10,251:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-04 21:45:10,251:INFO:[LightGBM] [Info] Total Bins 11935
2023-12-04 21:45:10,256:INFO:[LightGBM] [Info] Number of data points in the train set: 41626, number of used features: 64
2023-12-04 21:45:10,256:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-04 21:45:11,285:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:45:11,285:INFO:create_model() successfully completed......................................
2023-12-04 21:45:11,703:INFO:_master_model_container: 14
2023-12-04 21:45:11,704:INFO:_display_container: 2
2023-12-04 21:45:11,705:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:45:11,705:INFO:compare_models() successfully completed......................................
2023-12-04 21:45:11,780:INFO:PyCaret ClassificationExperiment
2023-12-04 21:45:11,780:INFO:Logging name: clf-default-name
2023-12-04 21:45:11,780:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-04 21:45:11,780:INFO:version 3.2.0
2023-12-04 21:45:11,780:INFO:Initializing setup()
2023-12-04 21:45:11,780:INFO:self.USI: c5dd
2023-12-04 21:45:11,780:INFO:self._variable_keys: {'html_param', 'y_test', 'y', 'exp_name_log', 'y_train', 'logging_param', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'target_param', 'is_multiclass', 'log_plots_param', 'X', 'idx', 'seed', 'exp_id', 'fold_shuffle_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fix_imbalance', 'pipeline', 'X_train', 'fold_generator', 'data', 'memory', '_available_plots', 'USI'}
2023-12-04 21:45:11,780:INFO:Checking environment
2023-12-04 21:45:11,780:INFO:python_version: 3.9.18
2023-12-04 21:45:11,780:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-04 21:45:11,780:INFO:machine: AMD64
2023-12-04 21:45:11,780:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-04 21:45:11,785:INFO:Memory: svmem(total=7955767296, available=1242566656, percent=84.4, used=6713200640, free=1242566656)
2023-12-04 21:45:11,785:INFO:Physical Core: 2
2023-12-04 21:45:11,785:INFO:Logical Core: 4
2023-12-04 21:45:11,785:INFO:Checking libraries
2023-12-04 21:45:11,785:INFO:System:
2023-12-04 21:45:11,785:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-04 21:45:11,785:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-04 21:45:11,785:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-04 21:45:11,785:INFO:PyCaret required dependencies:
2023-12-04 21:45:11,785:INFO:                 pip: 23.3.1
2023-12-04 21:45:11,785:INFO:          setuptools: 68.0.0
2023-12-04 21:45:11,785:INFO:             pycaret: 3.2.0
2023-12-04 21:45:11,785:INFO:             IPython: 8.15.0
2023-12-04 21:45:11,785:INFO:          ipywidgets: 7.6.5
2023-12-04 21:45:11,785:INFO:                tqdm: 4.64.1
2023-12-04 21:45:11,785:INFO:               numpy: 1.25.2
2023-12-04 21:45:11,785:INFO:              pandas: 1.5.3
2023-12-04 21:45:11,785:INFO:              jinja2: 3.1.2
2023-12-04 21:45:11,785:INFO:               scipy: 1.9.3
2023-12-04 21:45:11,785:INFO:              joblib: 1.2.0
2023-12-04 21:45:11,785:INFO:             sklearn: 1.2.2
2023-12-04 21:45:11,785:INFO:                pyod: 1.1.2
2023-12-04 21:45:11,785:INFO:            imblearn: 0.11.0
2023-12-04 21:45:11,790:INFO:   category_encoders: 2.6.3
2023-12-04 21:45:11,790:INFO:            lightgbm: 4.1.0
2023-12-04 21:45:11,790:INFO:               numba: 0.58.1
2023-12-04 21:45:11,790:INFO:            requests: 2.28.1
2023-12-04 21:45:11,790:INFO:          matplotlib: 3.6.2
2023-12-04 21:45:11,790:INFO:          scikitplot: 0.3.7
2023-12-04 21:45:11,790:INFO:         yellowbrick: 1.5
2023-12-04 21:45:11,790:INFO:              plotly: 5.18.0
2023-12-04 21:45:11,790:INFO:    plotly-resampler: Not installed
2023-12-04 21:45:11,790:INFO:             kaleido: 0.2.1
2023-12-04 21:45:11,790:INFO:           schemdraw: 0.15
2023-12-04 21:45:11,790:INFO:         statsmodels: 0.14.0
2023-12-04 21:45:11,790:INFO:              sktime: 0.21.1
2023-12-04 21:45:11,790:INFO:               tbats: 1.1.3
2023-12-04 21:45:11,790:INFO:            pmdarima: 2.0.4
2023-12-04 21:45:11,790:INFO:              psutil: 5.9.0
2023-12-04 21:45:11,790:INFO:          markupsafe: 2.1.1
2023-12-04 21:45:11,790:INFO:             pickle5: Not installed
2023-12-04 21:45:11,790:INFO:         cloudpickle: 3.0.0
2023-12-04 21:45:11,790:INFO:         deprecation: 2.1.0
2023-12-04 21:45:11,790:INFO:              xxhash: 3.4.1
2023-12-04 21:45:11,790:INFO:           wurlitzer: Not installed
2023-12-04 21:45:11,790:INFO:PyCaret optional dependencies:
2023-12-04 21:45:11,790:INFO:                shap: 0.43.0
2023-12-04 21:45:11,790:INFO:           interpret: 0.4.4
2023-12-04 21:45:11,790:INFO:                umap: 0.5.5
2023-12-04 21:45:11,790:INFO:     ydata_profiling: 4.6.2
2023-12-04 21:45:11,790:INFO:  explainerdashboard: 0.4.3
2023-12-04 21:45:11,790:INFO:             autoviz: Not installed
2023-12-04 21:45:11,790:INFO:           fairlearn: 0.7.0
2023-12-04 21:45:11,790:INFO:          deepchecks: Not installed
2023-12-04 21:45:11,790:INFO:             xgboost: Not installed
2023-12-04 21:45:11,790:INFO:            catboost: Not installed
2023-12-04 21:45:11,790:INFO:              kmodes: Not installed
2023-12-04 21:45:11,790:INFO:             mlxtend: Not installed
2023-12-04 21:45:11,790:INFO:       statsforecast: Not installed
2023-12-04 21:45:11,790:INFO:        tune_sklearn: Not installed
2023-12-04 21:45:11,790:INFO:                 ray: Not installed
2023-12-04 21:45:11,790:INFO:            hyperopt: Not installed
2023-12-04 21:45:11,790:INFO:              optuna: Not installed
2023-12-04 21:45:11,790:INFO:               skopt: Not installed
2023-12-04 21:45:11,790:INFO:              mlflow: Not installed
2023-12-04 21:45:11,790:INFO:              gradio: Not installed
2023-12-04 21:45:11,790:INFO:             fastapi: Not installed
2023-12-04 21:45:11,790:INFO:             uvicorn: Not installed
2023-12-04 21:45:11,790:INFO:              m2cgen: Not installed
2023-12-04 21:45:11,790:INFO:           evidently: Not installed
2023-12-04 21:45:11,790:INFO:               fugue: Not installed
2023-12-04 21:45:11,790:INFO:           streamlit: 1.26.0
2023-12-04 21:45:11,790:INFO:             prophet: Not installed
2023-12-04 21:45:11,790:INFO:None
2023-12-04 21:45:11,790:INFO:Set up data.
2023-12-04 21:45:11,877:INFO:Set up folding strategy.
2023-12-04 21:45:11,877:INFO:Set up train/test split.
2023-12-04 21:45:11,940:INFO:Set up index.
2023-12-04 21:45:11,940:INFO:Assigning column types.
2023-12-04 21:45:11,956:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-04 21:45:12,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:45:12,036:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:45:12,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,189:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-04 21:45:12,189:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:45:12,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,250:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-04 21:45:12,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:45:12,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,464:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-04 21:45:12,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,524:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-04 21:45:12,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:12,829:INFO:Preparing preprocessing pipeline...
2023-12-04 21:45:12,839:INFO:Set up label encoding.
2023-12-04 21:45:12,839:INFO:Set up simple imputation.
2023-12-04 21:45:12,912:INFO:Set up encoding of ordinal features.
2023-12-04 21:45:12,920:INFO:Set up encoding of categorical features.
2023-12-04 21:45:12,922:INFO:Set up imbalanced handling.
2023-12-04 21:45:12,922:INFO:Set up column transformation.
2023-12-04 21:45:12,922:INFO:Set up column name cleaning.
2023-12-04 21:45:13,893:INFO:Finished creating preprocessing pipeline.
2023-12-04 21:45:13,976:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-04 21:45:13,976:INFO:Creating final display dataframe.
2023-12-04 21:45:15,317:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53753, 67)
6   Transformed train set shape        (42031, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation                knn
14       Categorical imputation                knn
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method             adasyn
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               c5dd
2023-12-04 21:45:15,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:15,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:15,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:15,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-04 21:45:15,599:INFO:setup() successfully completed in 3.89s...............
2023-12-04 21:45:15,656:INFO:Initializing compare_models()
2023-12-04 21:45:15,656:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-04 21:45:15,656:INFO:Checking exceptions
2023-12-04 21:45:15,671:INFO:Preparing display monitor
2023-12-04 21:45:15,733:INFO:Initializing Logistic Regression
2023-12-04 21:45:15,733:INFO:Total runtime is 0.0 minutes
2023-12-04 21:45:15,747:INFO:SubProcess create_model() called ==================================
2023-12-04 21:45:15,748:INFO:Initializing create_model()
2023-12-04 21:45:15,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:45:15,749:INFO:Checking exceptions
2023-12-04 21:45:15,749:INFO:Importing libraries
2023-12-04 21:45:15,749:INFO:Copying training dataset
2023-12-04 21:45:15,789:INFO:Defining folds
2023-12-04 21:45:15,789:INFO:Declaring metric variables
2023-12-04 21:45:15,803:INFO:Importing untrained model
2023-12-04 21:45:15,813:INFO:Logistic Regression Imported successfully
2023-12-04 21:45:15,837:INFO:Starting cross validation
2023-12-04 21:45:15,854:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:45:45,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:45:45,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:45:45,506:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:45:45,654:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:45:46,146:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,173:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,188:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,319:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,340:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,345:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,350:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,464:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,474:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,474:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,489:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:46,648:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:54,511:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-04 21:45:54,757:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:54,811:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:54,865:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:45:54,936:INFO:Calculating mean and std
2023-12-04 21:45:54,936:INFO:Creating metrics dataframe
2023-12-04 21:45:54,943:INFO:Uploading results into container
2023-12-04 21:45:54,944:INFO:Uploading model into container now
2023-12-04 21:45:54,944:INFO:_master_model_container: 1
2023-12-04 21:45:54,945:INFO:_display_container: 2
2023-12-04 21:45:54,945:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-04 21:45:54,945:INFO:create_model() successfully completed......................................
2023-12-04 21:45:55,189:INFO:SubProcess create_model() end ==================================
2023-12-04 21:45:55,189:INFO:Creating metrics dataframe
2023-12-04 21:45:55,214:INFO:Initializing K Neighbors Classifier
2023-12-04 21:45:55,214:INFO:Total runtime is 0.6580033938090006 minutes
2023-12-04 21:45:55,225:INFO:SubProcess create_model() called ==================================
2023-12-04 21:45:55,226:INFO:Initializing create_model()
2023-12-04 21:45:55,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:45:55,226:INFO:Checking exceptions
2023-12-04 21:45:55,227:INFO:Importing libraries
2023-12-04 21:45:55,227:INFO:Copying training dataset
2023-12-04 21:45:55,283:INFO:Defining folds
2023-12-04 21:45:55,284:INFO:Declaring metric variables
2023-12-04 21:45:55,293:INFO:Importing untrained model
2023-12-04 21:45:55,301:INFO:K Neighbors Classifier Imported successfully
2023-12-04 21:45:55,332:INFO:Starting cross validation
2023-12-04 21:45:55,340:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:46:14,208:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,447:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,563:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,618:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,680:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,713:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,805:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,830:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,921:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:14,961:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:15,070:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:21,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:21,147:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:21,210:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:21,286:INFO:Calculating mean and std
2023-12-04 21:46:21,286:INFO:Creating metrics dataframe
2023-12-04 21:46:21,294:INFO:Uploading results into container
2023-12-04 21:46:21,295:INFO:Uploading model into container now
2023-12-04 21:46:21,295:INFO:_master_model_container: 2
2023-12-04 21:46:21,295:INFO:_display_container: 2
2023-12-04 21:46:21,296:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-04 21:46:21,296:INFO:create_model() successfully completed......................................
2023-12-04 21:46:21,507:INFO:SubProcess create_model() end ==================================
2023-12-04 21:46:21,507:INFO:Creating metrics dataframe
2023-12-04 21:46:21,519:INFO:Initializing Naive Bayes
2023-12-04 21:46:21,522:INFO:Total runtime is 1.0964767376581828 minutes
2023-12-04 21:46:21,537:INFO:SubProcess create_model() called ==================================
2023-12-04 21:46:21,537:INFO:Initializing create_model()
2023-12-04 21:46:21,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:46:21,537:INFO:Checking exceptions
2023-12-04 21:46:21,537:INFO:Importing libraries
2023-12-04 21:46:21,537:INFO:Copying training dataset
2023-12-04 21:46:21,574:INFO:Defining folds
2023-12-04 21:46:21,576:INFO:Declaring metric variables
2023-12-04 21:46:21,589:INFO:Importing untrained model
2023-12-04 21:46:21,602:INFO:Naive Bayes Imported successfully
2023-12-04 21:46:21,620:INFO:Starting cross validation
2023-12-04 21:46:21,627:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:46:29,046:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,189:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,244:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,294:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,294:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,344:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,394:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,442:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,457:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,535:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:29,597:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:32,912:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:32,990:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:33,054:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:33,149:INFO:Calculating mean and std
2023-12-04 21:46:33,154:INFO:Creating metrics dataframe
2023-12-04 21:46:33,166:INFO:Uploading results into container
2023-12-04 21:46:33,167:INFO:Uploading model into container now
2023-12-04 21:46:33,168:INFO:_master_model_container: 3
2023-12-04 21:46:33,169:INFO:_display_container: 2
2023-12-04 21:46:33,169:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-04 21:46:33,169:INFO:create_model() successfully completed......................................
2023-12-04 21:46:33,463:INFO:SubProcess create_model() end ==================================
2023-12-04 21:46:33,463:INFO:Creating metrics dataframe
2023-12-04 21:46:33,483:INFO:Initializing Decision Tree Classifier
2023-12-04 21:46:33,484:INFO:Total runtime is 1.2958502292633056 minutes
2023-12-04 21:46:33,490:INFO:SubProcess create_model() called ==================================
2023-12-04 21:46:33,490:INFO:Initializing create_model()
2023-12-04 21:46:33,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:46:33,490:INFO:Checking exceptions
2023-12-04 21:46:33,490:INFO:Importing libraries
2023-12-04 21:46:33,490:INFO:Copying training dataset
2023-12-04 21:46:33,517:INFO:Defining folds
2023-12-04 21:46:33,518:INFO:Declaring metric variables
2023-12-04 21:46:33,530:INFO:Importing untrained model
2023-12-04 21:46:33,542:INFO:Decision Tree Classifier Imported successfully
2023-12-04 21:46:33,564:INFO:Starting cross validation
2023-12-04 21:46:33,571:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:46:42,497:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,545:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,668:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,674:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,734:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,739:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,793:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,808:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,868:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:42,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:45,924:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:45,974:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:46,024:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:46,094:INFO:Calculating mean and std
2023-12-04 21:46:46,094:INFO:Creating metrics dataframe
2023-12-04 21:46:46,101:INFO:Uploading results into container
2023-12-04 21:46:46,102:INFO:Uploading model into container now
2023-12-04 21:46:46,102:INFO:_master_model_container: 4
2023-12-04 21:46:46,102:INFO:_display_container: 2
2023-12-04 21:46:46,103:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-04 21:46:46,103:INFO:create_model() successfully completed......................................
2023-12-04 21:46:46,306:INFO:SubProcess create_model() end ==================================
2023-12-04 21:46:46,306:INFO:Creating metrics dataframe
2023-12-04 21:46:46,321:INFO:Initializing SVM - Linear Kernel
2023-12-04 21:46:46,323:INFO:Total runtime is 1.5098230282465617 minutes
2023-12-04 21:46:46,334:INFO:SubProcess create_model() called ==================================
2023-12-04 21:46:46,335:INFO:Initializing create_model()
2023-12-04 21:46:46,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:46:46,335:INFO:Checking exceptions
2023-12-04 21:46:46,335:INFO:Importing libraries
2023-12-04 21:46:46,335:INFO:Copying training dataset
2023-12-04 21:46:46,362:INFO:Defining folds
2023-12-04 21:46:46,363:INFO:Declaring metric variables
2023-12-04 21:46:46,378:INFO:Importing untrained model
2023-12-04 21:46:46,388:INFO:SVM - Linear Kernel Imported successfully
2023-12-04 21:46:46,416:INFO:Starting cross validation
2023-12-04 21:46:46,428:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:46:56,853:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:46:56,887:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:56,971:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,073:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,226:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:46:57,271:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,368:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,425:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:46:57,466:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,470:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,587:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,694:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,754:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:46:57,791:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,886:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:46:57,955:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:01,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-04 21:47:01,329:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:01,375:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:01,421:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:01,486:INFO:Calculating mean and std
2023-12-04 21:47:01,487:INFO:Creating metrics dataframe
2023-12-04 21:47:01,499:INFO:Uploading results into container
2023-12-04 21:47:01,499:INFO:Uploading model into container now
2023-12-04 21:47:01,499:INFO:_master_model_container: 5
2023-12-04 21:47:01,499:INFO:_display_container: 2
2023-12-04 21:47:01,499:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-04 21:47:01,499:INFO:create_model() successfully completed......................................
2023-12-04 21:47:01,703:INFO:SubProcess create_model() end ==================================
2023-12-04 21:47:01,703:INFO:Creating metrics dataframe
2023-12-04 21:47:01,720:INFO:Initializing Ridge Classifier
2023-12-04 21:47:01,720:INFO:Total runtime is 1.766438619295756 minutes
2023-12-04 21:47:01,725:INFO:SubProcess create_model() called ==================================
2023-12-04 21:47:01,725:INFO:Initializing create_model()
2023-12-04 21:47:01,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:47:01,725:INFO:Checking exceptions
2023-12-04 21:47:01,725:INFO:Importing libraries
2023-12-04 21:47:01,725:INFO:Copying training dataset
2023-12-04 21:47:01,750:INFO:Defining folds
2023-12-04 21:47:01,754:INFO:Declaring metric variables
2023-12-04 21:47:01,771:INFO:Importing untrained model
2023-12-04 21:47:01,787:INFO:Ridge Classifier Imported successfully
2023-12-04 21:47:01,817:INFO:Starting cross validation
2023-12-04 21:47:01,823:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:47:09,646:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:47:09,707:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:09,722:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:47:09,772:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:09,777:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:47:09,838:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:09,843:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:09,894:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:47:09,954:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:09,959:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:09,999:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:10,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:10,119:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:10,119:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:10,174:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:10,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:12,923:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-04 21:47:12,943:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:12,986:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:13,036:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:13,098:INFO:Calculating mean and std
2023-12-04 21:47:13,099:INFO:Creating metrics dataframe
2023-12-04 21:47:13,107:INFO:Uploading results into container
2023-12-04 21:47:13,110:INFO:Uploading model into container now
2023-12-04 21:47:13,111:INFO:_master_model_container: 6
2023-12-04 21:47:13,111:INFO:_display_container: 2
2023-12-04 21:47:13,111:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-04 21:47:13,112:INFO:create_model() successfully completed......................................
2023-12-04 21:47:13,320:INFO:SubProcess create_model() end ==================================
2023-12-04 21:47:13,320:INFO:Creating metrics dataframe
2023-12-04 21:47:13,333:INFO:Initializing Random Forest Classifier
2023-12-04 21:47:13,333:INFO:Total runtime is 1.9599863052368163 minutes
2023-12-04 21:47:13,341:INFO:SubProcess create_model() called ==================================
2023-12-04 21:47:13,342:INFO:Initializing create_model()
2023-12-04 21:47:13,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:47:13,342:INFO:Checking exceptions
2023-12-04 21:47:13,342:INFO:Importing libraries
2023-12-04 21:47:13,342:INFO:Copying training dataset
2023-12-04 21:47:13,360:INFO:Defining folds
2023-12-04 21:47:13,361:INFO:Declaring metric variables
2023-12-04 21:47:13,370:INFO:Importing untrained model
2023-12-04 21:47:13,380:INFO:Random Forest Classifier Imported successfully
2023-12-04 21:47:13,403:INFO:Starting cross validation
2023-12-04 21:47:13,413:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:47:38,240:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:38,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:38,399:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:38,606:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:38,656:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:38,811:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:38,894:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:39,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:39,119:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:39,210:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:39,238:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:39,349:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:45,846:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:45,897:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:45,946:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:46,018:INFO:Calculating mean and std
2023-12-04 21:47:46,020:INFO:Creating metrics dataframe
2023-12-04 21:47:46,028:INFO:Uploading results into container
2023-12-04 21:47:46,032:INFO:Uploading model into container now
2023-12-04 21:47:46,032:INFO:_master_model_container: 7
2023-12-04 21:47:46,032:INFO:_display_container: 2
2023-12-04 21:47:46,033:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:47:46,034:INFO:create_model() successfully completed......................................
2023-12-04 21:47:46,248:INFO:SubProcess create_model() end ==================================
2023-12-04 21:47:46,248:INFO:Creating metrics dataframe
2023-12-04 21:47:46,260:INFO:Initializing Quadratic Discriminant Analysis
2023-12-04 21:47:46,260:INFO:Total runtime is 2.508777360121409 minutes
2023-12-04 21:47:46,267:INFO:SubProcess create_model() called ==================================
2023-12-04 21:47:46,267:INFO:Initializing create_model()
2023-12-04 21:47:46,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:47:46,267:INFO:Checking exceptions
2023-12-04 21:47:46,268:INFO:Importing libraries
2023-12-04 21:47:46,268:INFO:Copying training dataset
2023-12-04 21:47:46,286:INFO:Defining folds
2023-12-04 21:47:46,286:INFO:Declaring metric variables
2023-12-04 21:47:46,295:INFO:Importing untrained model
2023-12-04 21:47:46,304:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-04 21:47:46,319:INFO:Starting cross validation
2023-12-04 21:47:46,324:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:47:53,705:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:47:53,788:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:47:53,845:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:47:53,961:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:47:54,846:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:54,932:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:54,947:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:54,977:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,012:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,095:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,129:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,151:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,211:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,226:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:55,286:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:57,865:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-04 21:47:58,186:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:58,232:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:58,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:47:58,344:INFO:Calculating mean and std
2023-12-04 21:47:58,349:INFO:Creating metrics dataframe
2023-12-04 21:47:58,352:INFO:Uploading results into container
2023-12-04 21:47:58,352:INFO:Uploading model into container now
2023-12-04 21:47:58,352:INFO:_master_model_container: 8
2023-12-04 21:47:58,352:INFO:_display_container: 2
2023-12-04 21:47:58,352:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-04 21:47:58,352:INFO:create_model() successfully completed......................................
2023-12-04 21:47:58,564:INFO:SubProcess create_model() end ==================================
2023-12-04 21:47:58,564:INFO:Creating metrics dataframe
2023-12-04 21:47:58,589:INFO:Initializing Ada Boost Classifier
2023-12-04 21:47:58,589:INFO:Total runtime is 2.7142530282338457 minutes
2023-12-04 21:47:58,596:INFO:SubProcess create_model() called ==================================
2023-12-04 21:47:58,597:INFO:Initializing create_model()
2023-12-04 21:47:58,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:47:58,598:INFO:Checking exceptions
2023-12-04 21:47:58,598:INFO:Importing libraries
2023-12-04 21:47:58,598:INFO:Copying training dataset
2023-12-04 21:47:58,611:INFO:Defining folds
2023-12-04 21:47:58,611:INFO:Declaring metric variables
2023-12-04 21:47:58,623:INFO:Importing untrained model
2023-12-04 21:47:58,629:INFO:Ada Boost Classifier Imported successfully
2023-12-04 21:47:58,647:INFO:Starting cross validation
2023-12-04 21:47:58,656:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:48:14,152:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,196:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,200:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,267:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,306:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,308:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,386:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,386:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,425:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,425:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:14,606:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:20,507:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:20,562:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:20,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:48:20,672:INFO:Calculating mean and std
2023-12-04 21:48:20,674:INFO:Creating metrics dataframe
2023-12-04 21:48:20,680:INFO:Uploading results into container
2023-12-04 21:48:20,681:INFO:Uploading model into container now
2023-12-04 21:48:20,682:INFO:_master_model_container: 9
2023-12-04 21:48:20,682:INFO:_display_container: 2
2023-12-04 21:48:20,682:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-04 21:48:20,683:INFO:create_model() successfully completed......................................
2023-12-04 21:48:20,907:INFO:SubProcess create_model() end ==================================
2023-12-04 21:48:20,907:INFO:Creating metrics dataframe
2023-12-04 21:48:20,923:INFO:Initializing Gradient Boosting Classifier
2023-12-04 21:48:20,923:INFO:Total runtime is 3.0864878376324967 minutes
2023-12-04 21:48:20,928:INFO:SubProcess create_model() called ==================================
2023-12-04 21:48:20,928:INFO:Initializing create_model()
2023-12-04 21:48:20,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:48:20,931:INFO:Checking exceptions
2023-12-04 21:48:20,931:INFO:Importing libraries
2023-12-04 21:48:20,932:INFO:Copying training dataset
2023-12-04 21:48:20,946:INFO:Defining folds
2023-12-04 21:48:20,946:INFO:Declaring metric variables
2023-12-04 21:48:20,954:INFO:Importing untrained model
2023-12-04 21:48:20,961:INFO:Gradient Boosting Classifier Imported successfully
2023-12-04 21:48:20,983:INFO:Starting cross validation
2023-12-04 21:48:20,990:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:49:01,107:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,208:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,219:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,361:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,406:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,494:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,524:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,544:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,642:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,750:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:01,750:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:21,487:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:21,560:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:21,641:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:21,739:INFO:Calculating mean and std
2023-12-04 21:49:21,741:INFO:Creating metrics dataframe
2023-12-04 21:49:21,746:INFO:Uploading results into container
2023-12-04 21:49:21,748:INFO:Uploading model into container now
2023-12-04 21:49:21,748:INFO:_master_model_container: 10
2023-12-04 21:49:21,748:INFO:_display_container: 2
2023-12-04 21:49:21,748:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-04 21:49:21,748:INFO:create_model() successfully completed......................................
2023-12-04 21:49:21,970:INFO:SubProcess create_model() end ==================================
2023-12-04 21:49:21,973:INFO:Creating metrics dataframe
2023-12-04 21:49:21,989:INFO:Initializing Linear Discriminant Analysis
2023-12-04 21:49:21,989:INFO:Total runtime is 4.1042559425036105 minutes
2023-12-04 21:49:21,994:INFO:SubProcess create_model() called ==================================
2023-12-04 21:49:21,994:INFO:Initializing create_model()
2023-12-04 21:49:21,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:49:21,994:INFO:Checking exceptions
2023-12-04 21:49:21,994:INFO:Importing libraries
2023-12-04 21:49:21,994:INFO:Copying training dataset
2023-12-04 21:49:22,013:INFO:Defining folds
2023-12-04 21:49:22,014:INFO:Declaring metric variables
2023-12-04 21:49:22,022:INFO:Importing untrained model
2023-12-04 21:49:22,029:INFO:Linear Discriminant Analysis Imported successfully
2023-12-04 21:49:22,049:INFO:Starting cross validation
2023-12-04 21:49:22,062:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:49:31,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,440:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,518:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,526:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,532:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,602:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,663:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,688:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,698:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,738:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,863:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:31,873:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:35,065:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:35,113:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:35,162:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:35,227:INFO:Calculating mean and std
2023-12-04 21:49:35,229:INFO:Creating metrics dataframe
2023-12-04 21:49:35,233:INFO:Uploading results into container
2023-12-04 21:49:35,233:INFO:Uploading model into container now
2023-12-04 21:49:35,233:INFO:_master_model_container: 11
2023-12-04 21:49:35,233:INFO:_display_container: 2
2023-12-04 21:49:35,233:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-04 21:49:35,233:INFO:create_model() successfully completed......................................
2023-12-04 21:49:35,440:INFO:SubProcess create_model() end ==================================
2023-12-04 21:49:35,440:INFO:Creating metrics dataframe
2023-12-04 21:49:35,460:INFO:Initializing Extra Trees Classifier
2023-12-04 21:49:35,465:INFO:Total runtime is 4.328865313529968 minutes
2023-12-04 21:49:35,473:INFO:SubProcess create_model() called ==================================
2023-12-04 21:49:35,473:INFO:Initializing create_model()
2023-12-04 21:49:35,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:49:35,473:INFO:Checking exceptions
2023-12-04 21:49:35,473:INFO:Importing libraries
2023-12-04 21:49:35,473:INFO:Copying training dataset
2023-12-04 21:49:35,506:INFO:Defining folds
2023-12-04 21:49:35,506:INFO:Declaring metric variables
2023-12-04 21:49:35,515:INFO:Importing untrained model
2023-12-04 21:49:35,526:INFO:Extra Trees Classifier Imported successfully
2023-12-04 21:49:35,546:INFO:Starting cross validation
2023-12-04 21:49:35,562:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:49:58,096:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,204:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,326:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,422:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,552:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,571:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,618:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,670:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,740:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:49:58,850:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:06,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:06,424:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:06,494:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:06,576:INFO:Calculating mean and std
2023-12-04 21:50:06,578:INFO:Creating metrics dataframe
2023-12-04 21:50:06,584:INFO:Uploading results into container
2023-12-04 21:50:06,585:INFO:Uploading model into container now
2023-12-04 21:50:06,586:INFO:_master_model_container: 12
2023-12-04 21:50:06,586:INFO:_display_container: 2
2023-12-04 21:50:06,587:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-04 21:50:06,587:INFO:create_model() successfully completed......................................
2023-12-04 21:50:06,815:INFO:SubProcess create_model() end ==================================
2023-12-04 21:50:06,820:INFO:Creating metrics dataframe
2023-12-04 21:50:06,839:INFO:Initializing Light Gradient Boosting Machine
2023-12-04 21:50:06,839:INFO:Total runtime is 4.85176568031311 minutes
2023-12-04 21:50:06,845:INFO:SubProcess create_model() called ==================================
2023-12-04 21:50:06,845:INFO:Initializing create_model()
2023-12-04 21:50:06,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:50:06,845:INFO:Checking exceptions
2023-12-04 21:50:06,845:INFO:Importing libraries
2023-12-04 21:50:06,846:INFO:Copying training dataset
2023-12-04 21:50:06,865:INFO:Defining folds
2023-12-04 21:50:06,865:INFO:Declaring metric variables
2023-12-04 21:50:06,870:INFO:Importing untrained model
2023-12-04 21:50:06,880:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:50:06,895:INFO:Starting cross validation
2023-12-04 21:50:06,903:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:50:18,373:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:18,408:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:18,489:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:18,519:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:18,594:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:18,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:19,336:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:19,433:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:19,457:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:19,550:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:19,568:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:19,655:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:22,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:22,954:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:23,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:23,078:INFO:Calculating mean and std
2023-12-04 21:50:23,078:INFO:Creating metrics dataframe
2023-12-04 21:50:23,084:INFO:Uploading results into container
2023-12-04 21:50:23,085:INFO:Uploading model into container now
2023-12-04 21:50:23,086:INFO:_master_model_container: 13
2023-12-04 21:50:23,087:INFO:_display_container: 2
2023-12-04 21:50:23,088:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:50:23,088:INFO:create_model() successfully completed......................................
2023-12-04 21:50:23,304:INFO:SubProcess create_model() end ==================================
2023-12-04 21:50:23,304:INFO:Creating metrics dataframe
2023-12-04 21:50:23,321:INFO:Initializing Dummy Classifier
2023-12-04 21:50:23,321:INFO:Total runtime is 5.126450796922048 minutes
2023-12-04 21:50:23,326:INFO:SubProcess create_model() called ==================================
2023-12-04 21:50:23,328:INFO:Initializing create_model()
2023-12-04 21:50:23,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A168FF100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:50:23,329:INFO:Checking exceptions
2023-12-04 21:50:23,329:INFO:Importing libraries
2023-12-04 21:50:23,329:INFO:Copying training dataset
2023-12-04 21:50:23,350:INFO:Defining folds
2023-12-04 21:50:23,351:INFO:Declaring metric variables
2023-12-04 21:50:23,358:INFO:Importing untrained model
2023-12-04 21:50:23,368:INFO:Dummy Classifier Imported successfully
2023-12-04 21:50:23,450:INFO:Starting cross validation
2023-12-04 21:50:23,464:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-04 21:50:30,680:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,688:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,801:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,810:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,861:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,872:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:50:30,874:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:50:30,928:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,938:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:30,980:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:31,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:31,044:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:50:31,064:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:50:31,104:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:31,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:34,239:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:34,302:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:34,349:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-04 21:50:34,369:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-04 21:50:34,444:INFO:Calculating mean and std
2023-12-04 21:50:34,444:INFO:Creating metrics dataframe
2023-12-04 21:50:34,449:INFO:Uploading results into container
2023-12-04 21:50:34,452:INFO:Uploading model into container now
2023-12-04 21:50:34,452:INFO:_master_model_container: 14
2023-12-04 21:50:34,452:INFO:_display_container: 2
2023-12-04 21:50:34,452:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-04 21:50:34,452:INFO:create_model() successfully completed......................................
2023-12-04 21:50:34,669:INFO:SubProcess create_model() end ==================================
2023-12-04 21:50:34,674:INFO:Creating metrics dataframe
2023-12-04 21:50:34,713:INFO:Initializing create_model()
2023-12-04 21:50:34,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:50:34,713:INFO:Checking exceptions
2023-12-04 21:50:34,718:INFO:Importing libraries
2023-12-04 21:50:34,718:INFO:Copying training dataset
2023-12-04 21:50:34,750:INFO:Defining folds
2023-12-04 21:50:34,751:INFO:Declaring metric variables
2023-12-04 21:50:34,752:INFO:Importing untrained model
2023-12-04 21:50:34,752:INFO:Declaring custom model
2023-12-04 21:50:34,754:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:50:34,757:INFO:Cross validation set to False
2023-12-04 21:50:34,757:INFO:Fitting Model
2023-12-04 21:50:38,337:INFO:[LightGBM] [Info] Number of positive: 21218, number of negative: 20813
2023-12-04 21:50:38,367:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.014474 seconds.
2023-12-04 21:50:38,367:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-04 21:50:38,367:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-04 21:50:38,372:INFO:[LightGBM] [Info] Total Bins 11998
2023-12-04 21:50:38,372:INFO:[LightGBM] [Info] Number of data points in the train set: 42031, number of used features: 64
2023-12-04 21:50:38,372:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.504818 -> initscore=0.019272
2023-12-04 21:50:38,372:INFO:[LightGBM] [Info] Start training from score 0.019272
2023-12-04 21:50:39,254:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:50:39,254:INFO:create_model() successfully completed......................................
2023-12-04 21:50:39,607:INFO:_master_model_container: 14
2023-12-04 21:50:39,608:INFO:_display_container: 2
2023-12-04 21:50:39,609:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:50:39,610:INFO:compare_models() successfully completed......................................
2023-12-04 21:55:26,533:INFO:Initializing finalize_model()
2023-12-04 21:55:26,535:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-04 21:55:26,536:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:55:26,548:INFO:Initializing create_model()
2023-12-04 21:55:26,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:55:26,549:INFO:Checking exceptions
2023-12-04 21:55:26,552:INFO:Importing libraries
2023-12-04 21:55:26,553:INFO:Copying training dataset
2023-12-04 21:55:26,554:INFO:Defining folds
2023-12-04 21:55:26,555:INFO:Declaring metric variables
2023-12-04 21:55:26,555:INFO:Importing untrained model
2023-12-04 21:55:26,556:INFO:Declaring custom model
2023-12-04 21:55:26,558:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:55:26,565:INFO:Cross validation set to False
2023-12-04 21:55:26,565:INFO:Fitting Model
2023-12-04 21:55:33,800:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-04 21:55:33,852:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.033148 seconds.
2023-12-04 21:55:33,852:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-04 21:55:33,854:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-04 21:55:33,857:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-04 21:55:33,860:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-04 21:55:33,860:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-04 21:55:36,029:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:55:36,030:INFO:create_model() successfully completed......................................
2023-12-04 21:55:36,453:INFO:_master_model_container: 14
2023-12-04 21:55:36,453:INFO:_display_container: 2
2023-12-04 21:55:36,514:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:55:36,514:INFO:finalize_model() successfully completed......................................
2023-12-04 21:57:47,484:INFO:Initializing finalize_model()
2023-12-04 21:57:47,484:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-04 21:57:47,486:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:57:47,499:INFO:Initializing create_model()
2023-12-04 21:57:47,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:57:47,499:INFO:Checking exceptions
2023-12-04 21:57:47,502:INFO:Importing libraries
2023-12-04 21:57:47,502:INFO:Copying training dataset
2023-12-04 21:57:47,503:INFO:Defining folds
2023-12-04 21:57:47,503:INFO:Declaring metric variables
2023-12-04 21:57:47,504:INFO:Importing untrained model
2023-12-04 21:57:47,504:INFO:Declaring custom model
2023-12-04 21:57:47,506:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:57:47,512:INFO:Cross validation set to False
2023-12-04 21:57:47,512:INFO:Fitting Model
2023-12-04 21:57:56,977:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-04 21:57:57,060:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.052600 seconds.
2023-12-04 21:57:57,074:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-04 21:57:57,075:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-04 21:57:57,087:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-04 21:57:57,092:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-04 21:57:57,092:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-04 21:57:59,022:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:57:59,022:INFO:create_model() successfully completed......................................
2023-12-04 21:57:59,338:INFO:_master_model_container: 14
2023-12-04 21:57:59,338:INFO:_display_container: 2
2023-12-04 21:57:59,385:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:57:59,385:INFO:finalize_model() successfully completed......................................
2023-12-04 21:58:12,785:INFO:Initializing finalize_model()
2023-12-04 21:58:12,785:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-04 21:58:12,786:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-04 21:58:12,800:INFO:Initializing create_model()
2023-12-04 21:58:12,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A14B3CF70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-04 21:58:12,801:INFO:Checking exceptions
2023-12-04 21:58:12,804:INFO:Importing libraries
2023-12-04 21:58:12,804:INFO:Copying training dataset
2023-12-04 21:58:12,805:INFO:Defining folds
2023-12-04 21:58:12,805:INFO:Declaring metric variables
2023-12-04 21:58:12,806:INFO:Importing untrained model
2023-12-04 21:58:12,806:INFO:Declaring custom model
2023-12-04 21:58:12,807:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-04 21:58:12,815:INFO:Cross validation set to False
2023-12-04 21:58:12,815:INFO:Fitting Model
2023-12-04 21:58:24,816:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-04 21:58:24,871:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.023852 seconds.
2023-12-04 21:58:24,871:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-04 21:58:24,871:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-04 21:58:24,871:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-04 21:58:24,871:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-04 21:58:24,876:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-04 21:58:24,876:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-04 21:58:26,227:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:58:26,227:INFO:create_model() successfully completed......................................
2023-12-04 21:58:26,462:INFO:_master_model_container: 14
2023-12-04 21:58:26,462:INFO:_display_container: 2
2023-12-04 21:58:26,505:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:58:26,505:INFO:finalize_model() successfully completed......................................
2023-12-04 21:59:15,876:INFO:Initializing save_model()
2023-12-04 21:59:15,876:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-04 21:59:15,876:INFO:Adding model into prep_pipe
2023-12-04 21:59:15,876:WARNING:Only Model saved as it was a pipeline.
2023-12-04 21:59:15,934:INFO:models/model_exp1.pkl saved in current working directory
2023-12-04 21:59:16,006:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:59:16,007:INFO:save_model() successfully completed......................................
2023-12-04 21:59:27,845:INFO:Initializing save_model()
2023-12-04 21:59:27,845:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-04 21:59:27,845:INFO:Adding model into prep_pipe
2023-12-04 21:59:27,845:WARNING:Only Model saved as it was a pipeline.
2023-12-04 21:59:27,924:INFO:models/model_exp2.pkl saved in current working directory
2023-12-04 21:59:27,999:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:59:27,999:INFO:save_model() successfully completed......................................
2023-12-04 21:59:39,526:INFO:Initializing save_model()
2023-12-04 21:59:39,526:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-04 21:59:39,526:INFO:Adding model into prep_pipe
2023-12-04 21:59:39,526:WARNING:Only Model saved as it was a pipeline.
2023-12-04 21:59:39,607:INFO:models/model_exp3.pkl saved in current working directory
2023-12-04 21:59:39,682:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-04 21:59:39,682:INFO:save_model() successfully completed......................................
2023-12-06 21:43:58,190:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_9624\3661803333.py:4: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  import pandas_profiling

2023-12-06 21:43:59,208:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-06 21:46:13,412:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-06 21:46:33,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 21:46:33,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 21:46:33,143:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 21:46:33,143:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 21:46:34,051:INFO:PyCaret ClassificationExperiment
2023-12-06 21:46:34,052:INFO:Logging name: clf-default-name
2023-12-06 21:46:34,052:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-06 21:46:34,052:INFO:version 3.2.0
2023-12-06 21:46:34,052:INFO:Initializing setup()
2023-12-06 21:46:34,052:INFO:self.USI: 9a5a
2023-12-06 21:46:34,053:INFO:self._variable_keys: {'data', 'y_test', '_ml_usecase', 'fold_groups_param', 'html_param', 'log_plots_param', 'fold_generator', 'idx', 'fold_shuffle_param', 'exp_name_log', 'pipeline', '_available_plots', 'X_train', 'fix_imbalance', 'is_multiclass', 'X', 'seed', 'y_train', 'n_jobs_param', 'X_test', 'exp_id', 'memory', 'gpu_param', 'y', 'target_param', 'USI', 'logging_param', 'gpu_n_jobs_param'}
2023-12-06 21:46:34,053:INFO:Checking environment
2023-12-06 21:46:34,053:INFO:python_version: 3.9.18
2023-12-06 21:46:34,053:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-06 21:46:34,053:INFO:machine: AMD64
2023-12-06 21:46:34,053:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-06 21:46:34,054:INFO:Memory: svmem(total=7955767296, available=842829824, percent=89.4, used=7112937472, free=842829824)
2023-12-06 21:46:34,054:INFO:Physical Core: 2
2023-12-06 21:46:34,054:INFO:Logical Core: 4
2023-12-06 21:46:34,054:INFO:Checking libraries
2023-12-06 21:46:34,054:INFO:System:
2023-12-06 21:46:34,054:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-06 21:46:34,054:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-06 21:46:34,055:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-06 21:46:34,055:INFO:PyCaret required dependencies:
2023-12-06 21:46:34,248:INFO:                 pip: 23.3.1
2023-12-06 21:46:34,248:INFO:          setuptools: 68.0.0
2023-12-06 21:46:34,249:INFO:             pycaret: 3.2.0
2023-12-06 21:46:34,249:INFO:             IPython: 8.15.0
2023-12-06 21:46:34,249:INFO:          ipywidgets: 7.6.5
2023-12-06 21:46:34,249:INFO:                tqdm: 4.64.1
2023-12-06 21:46:34,249:INFO:               numpy: 1.25.2
2023-12-06 21:46:34,250:INFO:              pandas: 1.5.3
2023-12-06 21:46:34,250:INFO:              jinja2: 3.1.2
2023-12-06 21:46:34,250:INFO:               scipy: 1.9.3
2023-12-06 21:46:34,250:INFO:              joblib: 1.2.0
2023-12-06 21:46:34,250:INFO:             sklearn: 1.2.2
2023-12-06 21:46:34,250:INFO:                pyod: 1.1.2
2023-12-06 21:46:34,250:INFO:            imblearn: 0.11.0
2023-12-06 21:46:34,251:INFO:   category_encoders: 2.6.3
2023-12-06 21:46:34,251:INFO:            lightgbm: 4.1.0
2023-12-06 21:46:34,251:INFO:               numba: 0.58.1
2023-12-06 21:46:34,251:INFO:            requests: 2.28.1
2023-12-06 21:46:34,251:INFO:          matplotlib: 3.6.2
2023-12-06 21:46:34,251:INFO:          scikitplot: 0.3.7
2023-12-06 21:46:34,251:INFO:         yellowbrick: 1.5
2023-12-06 21:46:34,251:INFO:              plotly: 5.18.0
2023-12-06 21:46:34,252:INFO:    plotly-resampler: Not installed
2023-12-06 21:46:34,252:INFO:             kaleido: 0.2.1
2023-12-06 21:46:34,252:INFO:           schemdraw: 0.15
2023-12-06 21:46:34,252:INFO:         statsmodels: 0.14.0
2023-12-06 21:46:34,252:INFO:              sktime: 0.21.1
2023-12-06 21:46:34,252:INFO:               tbats: 1.1.3
2023-12-06 21:46:34,253:INFO:            pmdarima: 2.0.4
2023-12-06 21:46:34,253:INFO:              psutil: 5.9.0
2023-12-06 21:46:34,253:INFO:          markupsafe: 2.1.1
2023-12-06 21:46:34,253:INFO:             pickle5: Not installed
2023-12-06 21:46:34,253:INFO:         cloudpickle: 3.0.0
2023-12-06 21:46:34,253:INFO:         deprecation: 2.1.0
2023-12-06 21:46:34,253:INFO:              xxhash: 3.4.1
2023-12-06 21:46:34,253:INFO:           wurlitzer: Not installed
2023-12-06 21:46:34,253:INFO:PyCaret optional dependencies:
2023-12-06 21:46:34,297:INFO:                shap: 0.43.0
2023-12-06 21:46:34,298:INFO:           interpret: 0.4.4
2023-12-06 21:46:34,298:INFO:                umap: 0.5.5
2023-12-06 21:46:34,298:INFO:     ydata_profiling: 4.6.2
2023-12-06 21:46:34,298:INFO:  explainerdashboard: 0.4.3
2023-12-06 21:46:34,298:INFO:             autoviz: Not installed
2023-12-06 21:46:34,299:INFO:           fairlearn: 0.7.0
2023-12-06 21:46:34,299:INFO:          deepchecks: Not installed
2023-12-06 21:46:34,299:INFO:             xgboost: Not installed
2023-12-06 21:46:34,299:INFO:            catboost: Not installed
2023-12-06 21:46:34,299:INFO:              kmodes: Not installed
2023-12-06 21:46:34,299:INFO:             mlxtend: Not installed
2023-12-06 21:46:34,299:INFO:       statsforecast: Not installed
2023-12-06 21:46:34,299:INFO:        tune_sklearn: Not installed
2023-12-06 21:46:34,299:INFO:                 ray: Not installed
2023-12-06 21:46:34,300:INFO:            hyperopt: Not installed
2023-12-06 21:46:34,300:INFO:              optuna: Not installed
2023-12-06 21:46:34,300:INFO:               skopt: Not installed
2023-12-06 21:46:34,300:INFO:              mlflow: Not installed
2023-12-06 21:46:34,300:INFO:              gradio: Not installed
2023-12-06 21:46:34,301:INFO:             fastapi: Not installed
2023-12-06 21:46:34,301:INFO:             uvicorn: Not installed
2023-12-06 21:46:34,301:INFO:              m2cgen: Not installed
2023-12-06 21:46:34,301:INFO:           evidently: Not installed
2023-12-06 21:46:34,301:INFO:               fugue: Not installed
2023-12-06 21:46:34,301:INFO:           streamlit: 1.26.0
2023-12-06 21:46:34,301:INFO:             prophet: Not installed
2023-12-06 21:46:34,301:INFO:None
2023-12-06 21:46:34,302:INFO:Set up data.
2023-12-06 21:46:34,457:INFO:Set up folding strategy.
2023-12-06 21:46:34,457:INFO:Set up train/test split.
2023-12-06 21:46:34,611:INFO:Set up index.
2023-12-06 21:46:34,612:INFO:Assigning column types.
2023-12-06 21:46:34,626:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-06 21:46:34,811:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 21:46:34,862:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 21:46:34,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:34,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:35,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 21:46:35,127:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 21:46:35,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:35,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:35,439:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-06 21:46:35,606:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 21:46:35,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:35,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:35,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 21:46:35,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:35,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:35,914:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-06 21:46:36,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:36,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:36,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:36,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:36,327:INFO:Preparing preprocessing pipeline...
2023-12-06 21:46:36,331:INFO:Set up label encoding.
2023-12-06 21:46:36,331:INFO:Set up simple imputation.
2023-12-06 21:46:36,342:INFO:Set up encoding of ordinal features.
2023-12-06 21:46:36,348:INFO:Set up encoding of categorical features.
2023-12-06 21:46:36,348:INFO:Set up imbalanced handling.
2023-12-06 21:46:36,348:INFO:Set up column transformation.
2023-12-06 21:46:36,350:INFO:Set up column name cleaning.
2023-12-06 21:46:37,071:INFO:Finished creating preprocessing pipeline.
2023-12-06 21:46:37,100:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-06 21:46:37,100:INFO:Creating final display dataframe.
2023-12-06 21:46:37,494:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               9a5a
2023-12-06 21:46:37,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:37,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:37,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:37,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 21:46:37,697:INFO:setup() successfully completed in 3.79s...............
2023-12-06 21:46:37,697:INFO:Initializing compare_models()
2023-12-06 21:46:37,697:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-06 21:46:37,697:INFO:Checking exceptions
2023-12-06 21:46:37,702:INFO:Preparing display monitor
2023-12-06 21:46:37,751:INFO:Initializing Logistic Regression
2023-12-06 21:46:37,752:INFO:Total runtime is 1.661380132039388e-05 minutes
2023-12-06 21:46:37,759:INFO:SubProcess create_model() called ==================================
2023-12-06 21:46:37,759:INFO:Initializing create_model()
2023-12-06 21:46:37,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:46:37,759:INFO:Checking exceptions
2023-12-06 21:46:37,759:INFO:Importing libraries
2023-12-06 21:46:37,760:INFO:Copying training dataset
2023-12-06 21:46:37,776:INFO:Defining folds
2023-12-06 21:46:37,776:INFO:Declaring metric variables
2023-12-06 21:46:37,781:INFO:Importing untrained model
2023-12-06 21:46:37,787:INFO:Logistic Regression Imported successfully
2023-12-06 21:46:37,800:INFO:Starting cross validation
2023-12-06 21:46:37,805:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:47:06,176:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 21:47:06,303:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 21:47:06,424:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 21:47:06,465:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 21:47:06,736:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:06,796:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:06,943:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:06,944:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:06,945:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:06,975:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:07,043:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:07,063:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:07,085:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:07,102:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:07,162:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:07,276:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:15,410:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 21:47:15,561:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:15,600:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:15,645:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:15,700:INFO:Calculating mean and std
2023-12-06 21:47:15,700:INFO:Creating metrics dataframe
2023-12-06 21:47:15,705:INFO:Uploading results into container
2023-12-06 21:47:15,705:INFO:Uploading model into container now
2023-12-06 21:47:15,705:INFO:_master_model_container: 1
2023-12-06 21:47:15,705:INFO:_display_container: 2
2023-12-06 21:47:15,705:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-06 21:47:15,705:INFO:create_model() successfully completed......................................
2023-12-06 21:47:16,094:INFO:SubProcess create_model() end ==================================
2023-12-06 21:47:16,095:INFO:Creating metrics dataframe
2023-12-06 21:47:16,111:INFO:Initializing K Neighbors Classifier
2023-12-06 21:47:16,111:INFO:Total runtime is 0.6393200715382893 minutes
2023-12-06 21:47:16,116:INFO:SubProcess create_model() called ==================================
2023-12-06 21:47:16,117:INFO:Initializing create_model()
2023-12-06 21:47:16,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:47:16,118:INFO:Checking exceptions
2023-12-06 21:47:16,118:INFO:Importing libraries
2023-12-06 21:47:16,118:INFO:Copying training dataset
2023-12-06 21:47:16,134:INFO:Defining folds
2023-12-06 21:47:16,134:INFO:Declaring metric variables
2023-12-06 21:47:16,140:INFO:Importing untrained model
2023-12-06 21:47:16,145:INFO:K Neighbors Classifier Imported successfully
2023-12-06 21:47:16,158:INFO:Starting cross validation
2023-12-06 21:47:16,158:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:47:34,013:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,063:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,113:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,163:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,198:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,213:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,253:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,263:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,298:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,348:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:34,398:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:41,580:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:41,620:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:41,665:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:41,720:INFO:Calculating mean and std
2023-12-06 21:47:41,725:INFO:Creating metrics dataframe
2023-12-06 21:47:41,725:INFO:Uploading results into container
2023-12-06 21:47:41,730:INFO:Uploading model into container now
2023-12-06 21:47:41,730:INFO:_master_model_container: 2
2023-12-06 21:47:41,730:INFO:_display_container: 2
2023-12-06 21:47:41,730:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-06 21:47:41,730:INFO:create_model() successfully completed......................................
2023-12-06 21:47:41,958:INFO:SubProcess create_model() end ==================================
2023-12-06 21:47:41,958:INFO:Creating metrics dataframe
2023-12-06 21:47:41,981:INFO:Initializing Naive Bayes
2023-12-06 21:47:41,981:INFO:Total runtime is 1.070490260918935 minutes
2023-12-06 21:47:41,986:INFO:SubProcess create_model() called ==================================
2023-12-06 21:47:41,986:INFO:Initializing create_model()
2023-12-06 21:47:41,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:47:41,986:INFO:Checking exceptions
2023-12-06 21:47:41,986:INFO:Importing libraries
2023-12-06 21:47:41,986:INFO:Copying training dataset
2023-12-06 21:47:41,996:INFO:Defining folds
2023-12-06 21:47:41,996:INFO:Declaring metric variables
2023-12-06 21:47:42,001:INFO:Importing untrained model
2023-12-06 21:47:42,012:INFO:Naive Bayes Imported successfully
2023-12-06 21:47:42,021:INFO:Starting cross validation
2023-12-06 21:47:42,026:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:47:49,292:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,302:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,401:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,407:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,413:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,441:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,499:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,509:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,529:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,545:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,604:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:49,650:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:52,944:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:53,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:53,064:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:47:53,133:INFO:Calculating mean and std
2023-12-06 21:47:53,133:INFO:Creating metrics dataframe
2023-12-06 21:47:53,144:INFO:Uploading results into container
2023-12-06 21:47:53,144:INFO:Uploading model into container now
2023-12-06 21:47:53,144:INFO:_master_model_container: 3
2023-12-06 21:47:53,144:INFO:_display_container: 2
2023-12-06 21:47:53,144:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-06 21:47:53,149:INFO:create_model() successfully completed......................................
2023-12-06 21:47:53,369:INFO:SubProcess create_model() end ==================================
2023-12-06 21:47:53,369:INFO:Creating metrics dataframe
2023-12-06 21:47:53,384:INFO:Initializing Decision Tree Classifier
2023-12-06 21:47:53,384:INFO:Total runtime is 1.260551118850708 minutes
2023-12-06 21:47:53,397:INFO:SubProcess create_model() called ==================================
2023-12-06 21:47:53,397:INFO:Initializing create_model()
2023-12-06 21:47:53,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:47:53,397:INFO:Checking exceptions
2023-12-06 21:47:53,397:INFO:Importing libraries
2023-12-06 21:47:53,397:INFO:Copying training dataset
2023-12-06 21:47:53,412:INFO:Defining folds
2023-12-06 21:47:53,412:INFO:Declaring metric variables
2023-12-06 21:47:53,424:INFO:Importing untrained model
2023-12-06 21:47:53,432:INFO:Decision Tree Classifier Imported successfully
2023-12-06 21:47:53,448:INFO:Starting cross validation
2023-12-06 21:47:53,453:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:48:01,949:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:01,989:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,054:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,059:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,094:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,094:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,155:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,165:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,190:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,261:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:02,291:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:05,728:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:05,785:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:05,834:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:05,906:INFO:Calculating mean and std
2023-12-06 21:48:05,906:INFO:Creating metrics dataframe
2023-12-06 21:48:05,911:INFO:Uploading results into container
2023-12-06 21:48:05,911:INFO:Uploading model into container now
2023-12-06 21:48:05,911:INFO:_master_model_container: 4
2023-12-06 21:48:05,911:INFO:_display_container: 2
2023-12-06 21:48:05,911:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-06 21:48:05,911:INFO:create_model() successfully completed......................................
2023-12-06 21:48:06,106:INFO:SubProcess create_model() end ==================================
2023-12-06 21:48:06,106:INFO:Creating metrics dataframe
2023-12-06 21:48:06,117:INFO:Initializing SVM - Linear Kernel
2023-12-06 21:48:06,117:INFO:Total runtime is 1.472752249240875 minutes
2023-12-06 21:48:06,122:INFO:SubProcess create_model() called ==================================
2023-12-06 21:48:06,122:INFO:Initializing create_model()
2023-12-06 21:48:06,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:48:06,122:INFO:Checking exceptions
2023-12-06 21:48:06,122:INFO:Importing libraries
2023-12-06 21:48:06,122:INFO:Copying training dataset
2023-12-06 21:48:06,137:INFO:Defining folds
2023-12-06 21:48:06,137:INFO:Declaring metric variables
2023-12-06 21:48:06,142:INFO:Importing untrained model
2023-12-06 21:48:06,153:INFO:SVM - Linear Kernel Imported successfully
2023-12-06 21:48:06,162:INFO:Starting cross validation
2023-12-06 21:48:06,181:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:48:18,238:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 21:48:18,274:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:18,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:18,464:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:18,585:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 21:48:18,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:18,721:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:18,831:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:19,048:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 21:48:19,097:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:19,118:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 21:48:19,159:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:19,210:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:19,274:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:19,317:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:19,384:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:23,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 21:48:23,609:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:23,649:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:23,689:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:23,745:INFO:Calculating mean and std
2023-12-06 21:48:23,745:INFO:Creating metrics dataframe
2023-12-06 21:48:23,749:INFO:Uploading results into container
2023-12-06 21:48:23,749:INFO:Uploading model into container now
2023-12-06 21:48:23,749:INFO:_master_model_container: 5
2023-12-06 21:48:23,749:INFO:_display_container: 2
2023-12-06 21:48:23,749:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-06 21:48:23,749:INFO:create_model() successfully completed......................................
2023-12-06 21:48:23,934:INFO:SubProcess create_model() end ==================================
2023-12-06 21:48:23,934:INFO:Creating metrics dataframe
2023-12-06 21:48:23,949:INFO:Initializing Ridge Classifier
2023-12-06 21:48:23,949:INFO:Total runtime is 1.7699607610702515 minutes
2023-12-06 21:48:23,954:INFO:SubProcess create_model() called ==================================
2023-12-06 21:48:23,954:INFO:Initializing create_model()
2023-12-06 21:48:23,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:48:23,954:INFO:Checking exceptions
2023-12-06 21:48:23,954:INFO:Importing libraries
2023-12-06 21:48:23,954:INFO:Copying training dataset
2023-12-06 21:48:23,972:INFO:Defining folds
2023-12-06 21:48:23,972:INFO:Declaring metric variables
2023-12-06 21:48:23,976:INFO:Importing untrained model
2023-12-06 21:48:23,982:INFO:Ridge Classifier Imported successfully
2023-12-06 21:48:23,992:INFO:Starting cross validation
2023-12-06 21:48:23,997:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:48:32,686:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 21:48:32,734:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:32,785:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 21:48:32,790:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 21:48:32,840:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:32,845:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:32,860:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:32,943:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 21:48:32,997:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:33,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:33,007:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:33,014:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:33,125:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:33,125:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:33,133:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:33,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:36,117:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 21:48:36,132:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:36,177:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:36,219:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:36,279:INFO:Calculating mean and std
2023-12-06 21:48:36,279:INFO:Creating metrics dataframe
2023-12-06 21:48:36,284:INFO:Uploading results into container
2023-12-06 21:48:36,284:INFO:Uploading model into container now
2023-12-06 21:48:36,284:INFO:_master_model_container: 6
2023-12-06 21:48:36,284:INFO:_display_container: 2
2023-12-06 21:48:36,284:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-06 21:48:36,284:INFO:create_model() successfully completed......................................
2023-12-06 21:48:36,462:INFO:SubProcess create_model() end ==================================
2023-12-06 21:48:36,462:INFO:Creating metrics dataframe
2023-12-06 21:48:36,477:INFO:Initializing Random Forest Classifier
2023-12-06 21:48:36,477:INFO:Total runtime is 1.978764549891154 minutes
2023-12-06 21:48:36,482:INFO:SubProcess create_model() called ==================================
2023-12-06 21:48:36,482:INFO:Initializing create_model()
2023-12-06 21:48:36,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:48:36,482:INFO:Checking exceptions
2023-12-06 21:48:36,482:INFO:Importing libraries
2023-12-06 21:48:36,482:INFO:Copying training dataset
2023-12-06 21:48:36,494:INFO:Defining folds
2023-12-06 21:48:36,494:INFO:Declaring metric variables
2023-12-06 21:48:36,499:INFO:Importing untrained model
2023-12-06 21:48:36,512:INFO:Random Forest Classifier Imported successfully
2023-12-06 21:48:36,528:INFO:Starting cross validation
2023-12-06 21:48:36,531:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:48:59,106:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,328:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,355:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,473:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,506:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,521:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,638:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,643:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:48:59,893:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:00,390:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:00,515:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:00,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:07,836:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:07,891:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:07,941:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:08,013:INFO:Calculating mean and std
2023-12-06 21:49:08,016:INFO:Creating metrics dataframe
2023-12-06 21:49:08,022:INFO:Uploading results into container
2023-12-06 21:49:08,022:INFO:Uploading model into container now
2023-12-06 21:49:08,022:INFO:_master_model_container: 7
2023-12-06 21:49:08,022:INFO:_display_container: 2
2023-12-06 21:49:08,022:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-06 21:49:08,022:INFO:create_model() successfully completed......................................
2023-12-06 21:49:08,268:INFO:SubProcess create_model() end ==================================
2023-12-06 21:49:08,268:INFO:Creating metrics dataframe
2023-12-06 21:49:08,283:INFO:Initializing Quadratic Discriminant Analysis
2023-12-06 21:49:08,283:INFO:Total runtime is 2.508863910039266 minutes
2023-12-06 21:49:08,288:INFO:SubProcess create_model() called ==================================
2023-12-06 21:49:08,288:INFO:Initializing create_model()
2023-12-06 21:49:08,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:49:08,288:INFO:Checking exceptions
2023-12-06 21:49:08,288:INFO:Importing libraries
2023-12-06 21:49:08,288:INFO:Copying training dataset
2023-12-06 21:49:08,303:INFO:Defining folds
2023-12-06 21:49:08,303:INFO:Declaring metric variables
2023-12-06 21:49:08,308:INFO:Importing untrained model
2023-12-06 21:49:08,317:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-06 21:49:08,328:INFO:Starting cross validation
2023-12-06 21:49:08,333:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:49:18,446:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 21:49:18,461:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 21:49:18,500:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 21:49:18,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 21:49:19,331:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,345:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,390:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,416:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,451:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,462:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,512:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,557:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,579:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,579:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,625:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:19,674:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:22,849:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 21:49:23,116:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:23,160:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:23,203:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:23,266:INFO:Calculating mean and std
2023-12-06 21:49:23,271:INFO:Creating metrics dataframe
2023-12-06 21:49:23,271:INFO:Uploading results into container
2023-12-06 21:49:23,276:INFO:Uploading model into container now
2023-12-06 21:49:23,276:INFO:_master_model_container: 8
2023-12-06 21:49:23,276:INFO:_display_container: 2
2023-12-06 21:49:23,276:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-06 21:49:23,276:INFO:create_model() successfully completed......................................
2023-12-06 21:49:23,467:INFO:SubProcess create_model() end ==================================
2023-12-06 21:49:23,467:INFO:Creating metrics dataframe
2023-12-06 21:49:23,484:INFO:Initializing Ada Boost Classifier
2023-12-06 21:49:23,485:INFO:Total runtime is 2.7622311751047772 minutes
2023-12-06 21:49:23,487:INFO:SubProcess create_model() called ==================================
2023-12-06 21:49:23,487:INFO:Initializing create_model()
2023-12-06 21:49:23,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:49:23,487:INFO:Checking exceptions
2023-12-06 21:49:23,487:INFO:Importing libraries
2023-12-06 21:49:23,487:INFO:Copying training dataset
2023-12-06 21:49:23,504:INFO:Defining folds
2023-12-06 21:49:23,504:INFO:Declaring metric variables
2023-12-06 21:49:23,508:INFO:Importing untrained model
2023-12-06 21:49:23,517:INFO:Ada Boost Classifier Imported successfully
2023-12-06 21:49:23,528:INFO:Starting cross validation
2023-12-06 21:49:23,532:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:49:39,633:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,746:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,817:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,836:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,852:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,917:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,949:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:39,971:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:40,068:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:40,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:40,204:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:47,677:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:47,746:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:47,812:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:49:47,901:INFO:Calculating mean and std
2023-12-06 21:49:47,904:INFO:Creating metrics dataframe
2023-12-06 21:49:47,914:INFO:Uploading results into container
2023-12-06 21:49:47,914:INFO:Uploading model into container now
2023-12-06 21:49:47,914:INFO:_master_model_container: 9
2023-12-06 21:49:47,914:INFO:_display_container: 2
2023-12-06 21:49:47,918:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-06 21:49:47,918:INFO:create_model() successfully completed......................................
2023-12-06 21:49:48,150:INFO:SubProcess create_model() end ==================================
2023-12-06 21:49:48,150:INFO:Creating metrics dataframe
2023-12-06 21:49:48,175:INFO:Initializing Gradient Boosting Classifier
2023-12-06 21:49:48,175:INFO:Total runtime is 3.1737330635388696 minutes
2023-12-06 21:49:48,180:INFO:SubProcess create_model() called ==================================
2023-12-06 21:49:48,180:INFO:Initializing create_model()
2023-12-06 21:49:48,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:49:48,180:INFO:Checking exceptions
2023-12-06 21:49:48,180:INFO:Importing libraries
2023-12-06 21:49:48,180:INFO:Copying training dataset
2023-12-06 21:49:48,207:INFO:Defining folds
2023-12-06 21:49:48,207:INFO:Declaring metric variables
2023-12-06 21:49:48,217:INFO:Importing untrained model
2023-12-06 21:49:48,228:INFO:Gradient Boosting Classifier Imported successfully
2023-12-06 21:49:48,244:INFO:Starting cross validation
2023-12-06 21:49:48,253:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:50:26,344:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,346:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,351:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,457:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,467:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,467:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,566:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,576:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,586:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,586:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,701:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:26,802:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:43,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:43,667:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:43,718:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:43,792:INFO:Calculating mean and std
2023-12-06 21:50:43,792:INFO:Creating metrics dataframe
2023-12-06 21:50:43,797:INFO:Uploading results into container
2023-12-06 21:50:43,803:INFO:Uploading model into container now
2023-12-06 21:50:43,804:INFO:_master_model_container: 10
2023-12-06 21:50:43,804:INFO:_display_container: 2
2023-12-06 21:50:43,805:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-06 21:50:43,806:INFO:create_model() successfully completed......................................
2023-12-06 21:50:44,018:INFO:SubProcess create_model() end ==================================
2023-12-06 21:50:44,018:INFO:Creating metrics dataframe
2023-12-06 21:50:44,036:INFO:Initializing Linear Discriminant Analysis
2023-12-06 21:50:44,036:INFO:Total runtime is 4.104740285873413 minutes
2023-12-06 21:50:44,041:INFO:SubProcess create_model() called ==================================
2023-12-06 21:50:44,041:INFO:Initializing create_model()
2023-12-06 21:50:44,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001483FA00940>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000148266697C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 21:50:44,041:INFO:Checking exceptions
2023-12-06 21:50:44,041:INFO:Importing libraries
2023-12-06 21:50:44,041:INFO:Copying training dataset
2023-12-06 21:50:44,057:INFO:Defining folds
2023-12-06 21:50:44,058:INFO:Declaring metric variables
2023-12-06 21:50:44,065:INFO:Importing untrained model
2023-12-06 21:50:44,071:INFO:Linear Discriminant Analysis Imported successfully
2023-12-06 21:50:44,085:INFO:Starting cross validation
2023-12-06 21:50:44,093:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 21:50:55,435:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,446:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,484:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,563:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,574:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,575:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,610:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,680:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,693:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,696:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,722:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 21:50:55,792:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:20:38,825:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_16872\3661803333.py:4: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  import pandas_profiling

2023-12-06 23:20:39,867:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-06 23:20:57,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 23:20:57,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 23:20:57,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 23:20:57,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-06 23:20:58,325:INFO:PyCaret ClassificationExperiment
2023-12-06 23:20:58,325:INFO:Logging name: clf-default-name
2023-12-06 23:20:58,326:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-06 23:20:58,326:INFO:version 3.2.0
2023-12-06 23:20:58,326:INFO:Initializing setup()
2023-12-06 23:20:58,326:INFO:self.USI: 1734
2023-12-06 23:20:58,326:INFO:self._variable_keys: {'data', 'is_multiclass', 'y_test', 'target_param', 'log_plots_param', 'fold_groups_param', 'X_train', 'y', 'seed', '_available_plots', 'X_test', 'fold_shuffle_param', 'memory', 'fold_generator', 'fix_imbalance', '_ml_usecase', 'exp_name_log', 'USI', 'idx', 'n_jobs_param', 'pipeline', 'logging_param', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'X', 'y_train'}
2023-12-06 23:20:58,327:INFO:Checking environment
2023-12-06 23:20:58,327:INFO:python_version: 3.9.18
2023-12-06 23:20:58,327:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-06 23:20:58,327:INFO:machine: AMD64
2023-12-06 23:20:58,327:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-06 23:20:58,327:INFO:Memory: svmem(total=7955767296, available=940027904, percent=88.2, used=7015739392, free=940027904)
2023-12-06 23:20:58,328:INFO:Physical Core: 2
2023-12-06 23:20:58,328:INFO:Logical Core: 4
2023-12-06 23:20:58,328:INFO:Checking libraries
2023-12-06 23:20:58,328:INFO:System:
2023-12-06 23:20:58,328:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-06 23:20:58,328:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-06 23:20:58,329:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-06 23:20:58,329:INFO:PyCaret required dependencies:
2023-12-06 23:20:58,379:INFO:                 pip: 23.3.1
2023-12-06 23:20:58,379:INFO:          setuptools: 68.0.0
2023-12-06 23:20:58,379:INFO:             pycaret: 3.2.0
2023-12-06 23:20:58,379:INFO:             IPython: 8.15.0
2023-12-06 23:20:58,379:INFO:          ipywidgets: 7.6.5
2023-12-06 23:20:58,379:INFO:                tqdm: 4.64.1
2023-12-06 23:20:58,379:INFO:               numpy: 1.25.2
2023-12-06 23:20:58,379:INFO:              pandas: 1.5.3
2023-12-06 23:20:58,379:INFO:              jinja2: 3.1.2
2023-12-06 23:20:58,379:INFO:               scipy: 1.9.3
2023-12-06 23:20:58,379:INFO:              joblib: 1.2.0
2023-12-06 23:20:58,379:INFO:             sklearn: 1.2.2
2023-12-06 23:20:58,379:INFO:                pyod: 1.1.2
2023-12-06 23:20:58,379:INFO:            imblearn: 0.11.0
2023-12-06 23:20:58,379:INFO:   category_encoders: 2.6.3
2023-12-06 23:20:58,379:INFO:            lightgbm: 4.1.0
2023-12-06 23:20:58,379:INFO:               numba: 0.58.1
2023-12-06 23:20:58,379:INFO:            requests: 2.28.1
2023-12-06 23:20:58,379:INFO:          matplotlib: 3.6.2
2023-12-06 23:20:58,379:INFO:          scikitplot: 0.3.7
2023-12-06 23:20:58,384:INFO:         yellowbrick: 1.5
2023-12-06 23:20:58,384:INFO:              plotly: 5.18.0
2023-12-06 23:20:58,384:INFO:    plotly-resampler: Not installed
2023-12-06 23:20:58,384:INFO:             kaleido: 0.2.1
2023-12-06 23:20:58,384:INFO:           schemdraw: 0.15
2023-12-06 23:20:58,384:INFO:         statsmodels: 0.14.0
2023-12-06 23:20:58,384:INFO:              sktime: 0.21.1
2023-12-06 23:20:58,384:INFO:               tbats: 1.1.3
2023-12-06 23:20:58,384:INFO:            pmdarima: 2.0.4
2023-12-06 23:20:58,384:INFO:              psutil: 5.9.0
2023-12-06 23:20:58,384:INFO:          markupsafe: 2.1.1
2023-12-06 23:20:58,384:INFO:             pickle5: Not installed
2023-12-06 23:20:58,384:INFO:         cloudpickle: 3.0.0
2023-12-06 23:20:58,384:INFO:         deprecation: 2.1.0
2023-12-06 23:20:58,384:INFO:              xxhash: 3.4.1
2023-12-06 23:20:58,384:INFO:           wurlitzer: Not installed
2023-12-06 23:20:58,384:INFO:PyCaret optional dependencies:
2023-12-06 23:20:58,399:INFO:                shap: 0.43.0
2023-12-06 23:20:58,399:INFO:           interpret: 0.4.4
2023-12-06 23:20:58,399:INFO:                umap: 0.5.5
2023-12-06 23:20:58,399:INFO:     ydata_profiling: 4.6.2
2023-12-06 23:20:58,399:INFO:  explainerdashboard: 0.4.3
2023-12-06 23:20:58,399:INFO:             autoviz: Not installed
2023-12-06 23:20:58,399:INFO:           fairlearn: 0.7.0
2023-12-06 23:20:58,399:INFO:          deepchecks: Not installed
2023-12-06 23:20:58,399:INFO:             xgboost: Not installed
2023-12-06 23:20:58,399:INFO:            catboost: Not installed
2023-12-06 23:20:58,399:INFO:              kmodes: Not installed
2023-12-06 23:20:58,399:INFO:             mlxtend: Not installed
2023-12-06 23:20:58,399:INFO:       statsforecast: Not installed
2023-12-06 23:20:58,399:INFO:        tune_sklearn: Not installed
2023-12-06 23:20:58,399:INFO:                 ray: Not installed
2023-12-06 23:20:58,399:INFO:            hyperopt: Not installed
2023-12-06 23:20:58,399:INFO:              optuna: Not installed
2023-12-06 23:20:58,399:INFO:               skopt: Not installed
2023-12-06 23:20:58,399:INFO:              mlflow: Not installed
2023-12-06 23:20:58,399:INFO:              gradio: Not installed
2023-12-06 23:20:58,399:INFO:             fastapi: Not installed
2023-12-06 23:20:58,399:INFO:             uvicorn: Not installed
2023-12-06 23:20:58,399:INFO:              m2cgen: Not installed
2023-12-06 23:20:58,399:INFO:           evidently: Not installed
2023-12-06 23:20:58,399:INFO:               fugue: Not installed
2023-12-06 23:20:58,399:INFO:           streamlit: 1.26.0
2023-12-06 23:20:58,399:INFO:             prophet: Not installed
2023-12-06 23:20:58,399:INFO:None
2023-12-06 23:20:58,399:INFO:Set up data.
2023-12-06 23:20:58,477:INFO:Set up folding strategy.
2023-12-06 23:20:58,477:INFO:Set up train/test split.
2023-12-06 23:20:58,522:INFO:Set up index.
2023-12-06 23:20:58,522:INFO:Assigning column types.
2023-12-06 23:20:58,527:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-06 23:20:58,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 23:20:58,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:20:58,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:58,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:58,672:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 23:20:58,677:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:20:58,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:58,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:58,727:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-06 23:20:58,797:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:20:58,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:58,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:58,944:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:20:59,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:59,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:59,009:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-06 23:20:59,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:59,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:59,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:59,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:20:59,239:INFO:Preparing preprocessing pipeline...
2023-12-06 23:20:59,239:INFO:Set up label encoding.
2023-12-06 23:20:59,239:INFO:Set up simple imputation.
2023-12-06 23:20:59,249:INFO:Set up encoding of ordinal features.
2023-12-06 23:20:59,254:INFO:Set up encoding of categorical features.
2023-12-06 23:20:59,254:INFO:Set up imbalanced handling.
2023-12-06 23:20:59,254:INFO:Set up column transformation.
2023-12-06 23:20:59,254:INFO:Set up column name cleaning.
2023-12-06 23:20:59,916:INFO:Finished creating preprocessing pipeline.
2023-12-06 23:20:59,953:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-06 23:20:59,958:INFO:Creating final display dataframe.
2023-12-06 23:21:00,279:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               1734
2023-12-06 23:21:00,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:21:00,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:21:00,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:21:00,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:21:00,456:INFO:setup() successfully completed in 2.23s...............
2023-12-06 23:21:00,456:INFO:Initializing compare_models()
2023-12-06 23:21:00,456:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-06 23:21:00,456:INFO:Checking exceptions
2023-12-06 23:21:00,471:INFO:Preparing display monitor
2023-12-06 23:21:00,513:INFO:Initializing Logistic Regression
2023-12-06 23:21:00,513:INFO:Total runtime is 0.0 minutes
2023-12-06 23:21:00,523:INFO:SubProcess create_model() called ==================================
2023-12-06 23:21:00,523:INFO:Initializing create_model()
2023-12-06 23:21:00,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:21:00,532:INFO:Checking exceptions
2023-12-06 23:21:00,532:INFO:Importing libraries
2023-12-06 23:21:00,532:INFO:Copying training dataset
2023-12-06 23:21:00,554:INFO:Defining folds
2023-12-06 23:21:00,554:INFO:Declaring metric variables
2023-12-06 23:21:00,561:INFO:Importing untrained model
2023-12-06 23:21:00,567:INFO:Logistic Regression Imported successfully
2023-12-06 23:21:00,586:INFO:Starting cross validation
2023-12-06 23:21:00,592:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:21:26,170:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:21:26,173:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:21:26,310:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:21:26,395:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:21:26,571:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,572:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,660:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,688:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,710:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,786:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,791:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,791:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,840:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:26,930:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:27,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:27,097:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:35,402:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:21:35,569:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:35,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:35,698:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:35,764:INFO:Calculating mean and std
2023-12-06 23:21:35,764:INFO:Creating metrics dataframe
2023-12-06 23:21:35,769:INFO:Uploading results into container
2023-12-06 23:21:35,769:INFO:Uploading model into container now
2023-12-06 23:21:35,769:INFO:_master_model_container: 1
2023-12-06 23:21:35,769:INFO:_display_container: 2
2023-12-06 23:21:35,774:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-06 23:21:35,774:INFO:create_model() successfully completed......................................
2023-12-06 23:21:36,065:INFO:SubProcess create_model() end ==================================
2023-12-06 23:21:36,065:INFO:Creating metrics dataframe
2023-12-06 23:21:36,070:INFO:Initializing K Neighbors Classifier
2023-12-06 23:21:36,070:INFO:Total runtime is 0.5926148374875386 minutes
2023-12-06 23:21:36,076:INFO:SubProcess create_model() called ==================================
2023-12-06 23:21:36,076:INFO:Initializing create_model()
2023-12-06 23:21:36,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:21:36,076:INFO:Checking exceptions
2023-12-06 23:21:36,081:INFO:Importing libraries
2023-12-06 23:21:36,081:INFO:Copying training dataset
2023-12-06 23:21:36,093:INFO:Defining folds
2023-12-06 23:21:36,093:INFO:Declaring metric variables
2023-12-06 23:21:36,098:INFO:Importing untrained model
2023-12-06 23:21:36,103:INFO:K Neighbors Classifier Imported successfully
2023-12-06 23:21:36,116:INFO:Starting cross validation
2023-12-06 23:21:36,121:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:21:51,969:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:51,969:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:51,976:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,086:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,091:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,097:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,181:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,186:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,197:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,197:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,343:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:52,437:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:59,383:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:59,438:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:59,482:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:21:59,560:INFO:Calculating mean and std
2023-12-06 23:21:59,560:INFO:Creating metrics dataframe
2023-12-06 23:21:59,571:INFO:Uploading results into container
2023-12-06 23:21:59,572:INFO:Uploading model into container now
2023-12-06 23:21:59,573:INFO:_master_model_container: 2
2023-12-06 23:21:59,573:INFO:_display_container: 2
2023-12-06 23:21:59,574:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-06 23:21:59,575:INFO:create_model() successfully completed......................................
2023-12-06 23:21:59,718:INFO:SubProcess create_model() end ==================================
2023-12-06 23:21:59,718:INFO:Creating metrics dataframe
2023-12-06 23:21:59,738:INFO:Initializing Naive Bayes
2023-12-06 23:21:59,738:INFO:Total runtime is 0.9870785395304362 minutes
2023-12-06 23:21:59,743:INFO:SubProcess create_model() called ==================================
2023-12-06 23:21:59,748:INFO:Initializing create_model()
2023-12-06 23:21:59,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:21:59,748:INFO:Checking exceptions
2023-12-06 23:21:59,749:INFO:Importing libraries
2023-12-06 23:21:59,749:INFO:Copying training dataset
2023-12-06 23:21:59,770:INFO:Defining folds
2023-12-06 23:21:59,771:INFO:Declaring metric variables
2023-12-06 23:21:59,778:INFO:Importing untrained model
2023-12-06 23:21:59,783:INFO:Naive Bayes Imported successfully
2023-12-06 23:21:59,793:INFO:Starting cross validation
2023-12-06 23:21:59,793:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:22:06,490:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,536:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,595:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,633:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,690:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,711:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,726:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,779:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,850:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:06,895:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:09,837:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:09,877:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:09,920:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:09,977:INFO:Calculating mean and std
2023-12-06 23:22:09,982:INFO:Creating metrics dataframe
2023-12-06 23:22:09,982:INFO:Uploading results into container
2023-12-06 23:22:09,982:INFO:Uploading model into container now
2023-12-06 23:22:09,987:INFO:_master_model_container: 3
2023-12-06 23:22:09,987:INFO:_display_container: 2
2023-12-06 23:22:09,987:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-06 23:22:09,987:INFO:create_model() successfully completed......................................
2023-12-06 23:22:10,110:INFO:SubProcess create_model() end ==================================
2023-12-06 23:22:10,110:INFO:Creating metrics dataframe
2023-12-06 23:22:10,120:INFO:Initializing Decision Tree Classifier
2023-12-06 23:22:10,120:INFO:Total runtime is 1.1601123690605164 minutes
2023-12-06 23:22:10,132:INFO:SubProcess create_model() called ==================================
2023-12-06 23:22:10,132:INFO:Initializing create_model()
2023-12-06 23:22:10,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:22:10,132:INFO:Checking exceptions
2023-12-06 23:22:10,132:INFO:Importing libraries
2023-12-06 23:22:10,132:INFO:Copying training dataset
2023-12-06 23:22:10,150:INFO:Defining folds
2023-12-06 23:22:10,150:INFO:Declaring metric variables
2023-12-06 23:22:10,160:INFO:Importing untrained model
2023-12-06 23:22:10,168:INFO:Decision Tree Classifier Imported successfully
2023-12-06 23:22:10,179:INFO:Starting cross validation
2023-12-06 23:22:10,184:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:22:18,524:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,529:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,729:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,762:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,767:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,769:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,825:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,869:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:18,952:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:22,761:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:22,821:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:22,876:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:22,940:INFO:Calculating mean and std
2023-12-06 23:22:22,945:INFO:Creating metrics dataframe
2023-12-06 23:22:22,945:INFO:Uploading results into container
2023-12-06 23:22:22,950:INFO:Uploading model into container now
2023-12-06 23:22:22,950:INFO:_master_model_container: 4
2023-12-06 23:22:22,950:INFO:_display_container: 2
2023-12-06 23:22:22,950:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-06 23:22:22,950:INFO:create_model() successfully completed......................................
2023-12-06 23:22:23,071:INFO:SubProcess create_model() end ==================================
2023-12-06 23:22:23,071:INFO:Creating metrics dataframe
2023-12-06 23:22:23,080:INFO:Initializing SVM - Linear Kernel
2023-12-06 23:22:23,080:INFO:Total runtime is 1.376116418838501 minutes
2023-12-06 23:22:23,085:INFO:SubProcess create_model() called ==================================
2023-12-06 23:22:23,085:INFO:Initializing create_model()
2023-12-06 23:22:23,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:22:23,085:INFO:Checking exceptions
2023-12-06 23:22:23,085:INFO:Importing libraries
2023-12-06 23:22:23,085:INFO:Copying training dataset
2023-12-06 23:22:23,100:INFO:Defining folds
2023-12-06 23:22:23,100:INFO:Declaring metric variables
2023-12-06 23:22:23,105:INFO:Importing untrained model
2023-12-06 23:22:23,114:INFO:SVM - Linear Kernel Imported successfully
2023-12-06 23:22:23,125:INFO:Starting cross validation
2023-12-06 23:22:23,125:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:22:35,285:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:22:35,285:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:22:35,319:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,324:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,421:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,433:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,546:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,557:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,712:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:22:35,759:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,841:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:35,948:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:36,076:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:22:36,108:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:36,186:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:36,293:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:40,934:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:22:40,951:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:40,991:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:41,030:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:41,079:INFO:Calculating mean and std
2023-12-06 23:22:41,079:INFO:Creating metrics dataframe
2023-12-06 23:22:41,084:INFO:Uploading results into container
2023-12-06 23:22:41,084:INFO:Uploading model into container now
2023-12-06 23:22:41,084:INFO:_master_model_container: 5
2023-12-06 23:22:41,084:INFO:_display_container: 2
2023-12-06 23:22:41,084:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-06 23:22:41,084:INFO:create_model() successfully completed......................................
2023-12-06 23:22:41,201:INFO:SubProcess create_model() end ==================================
2023-12-06 23:22:41,201:INFO:Creating metrics dataframe
2023-12-06 23:22:41,213:INFO:Initializing Ridge Classifier
2023-12-06 23:22:41,213:INFO:Total runtime is 1.678321973482768 minutes
2023-12-06 23:22:41,218:INFO:SubProcess create_model() called ==================================
2023-12-06 23:22:41,218:INFO:Initializing create_model()
2023-12-06 23:22:41,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:22:41,223:INFO:Checking exceptions
2023-12-06 23:22:41,223:INFO:Importing libraries
2023-12-06 23:22:41,223:INFO:Copying training dataset
2023-12-06 23:22:41,234:INFO:Defining folds
2023-12-06 23:22:41,234:INFO:Declaring metric variables
2023-12-06 23:22:41,242:INFO:Importing untrained model
2023-12-06 23:22:41,247:INFO:Ridge Classifier Imported successfully
2023-12-06 23:22:41,252:INFO:Starting cross validation
2023-12-06 23:22:41,258:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:22:48,168:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:22:48,208:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,213:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:22:48,253:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,294:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:22:48,308:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,337:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,348:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,375:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:22:48,409:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,409:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,435:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,449:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,515:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,537:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:48,609:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:51,150:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:22:51,168:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:51,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:51,245:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:22:51,335:INFO:Calculating mean and std
2023-12-06 23:22:51,336:INFO:Creating metrics dataframe
2023-12-06 23:22:51,336:INFO:Uploading results into container
2023-12-06 23:22:51,336:INFO:Uploading model into container now
2023-12-06 23:22:51,341:INFO:_master_model_container: 6
2023-12-06 23:22:51,341:INFO:_display_container: 2
2023-12-06 23:22:51,341:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-06 23:22:51,341:INFO:create_model() successfully completed......................................
2023-12-06 23:22:51,459:INFO:SubProcess create_model() end ==================================
2023-12-06 23:22:51,459:INFO:Creating metrics dataframe
2023-12-06 23:22:51,473:INFO:Initializing Random Forest Classifier
2023-12-06 23:22:51,473:INFO:Total runtime is 1.849325493971507 minutes
2023-12-06 23:22:51,478:INFO:SubProcess create_model() called ==================================
2023-12-06 23:22:51,478:INFO:Initializing create_model()
2023-12-06 23:22:51,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:22:51,478:INFO:Checking exceptions
2023-12-06 23:22:51,478:INFO:Importing libraries
2023-12-06 23:22:51,478:INFO:Copying training dataset
2023-12-06 23:22:51,495:INFO:Defining folds
2023-12-06 23:22:51,495:INFO:Declaring metric variables
2023-12-06 23:22:51,495:INFO:Importing untrained model
2023-12-06 23:22:51,503:INFO:Random Forest Classifier Imported successfully
2023-12-06 23:22:51,513:INFO:Starting cross validation
2023-12-06 23:22:51,517:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:23:10,981:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,065:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,198:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,256:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,276:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,299:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,382:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,398:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,422:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,432:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,529:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:11,629:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:18,092:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:18,146:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:18,202:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:18,267:INFO:Calculating mean and std
2023-12-06 23:23:18,267:INFO:Creating metrics dataframe
2023-12-06 23:23:18,272:INFO:Uploading results into container
2023-12-06 23:23:18,277:INFO:Uploading model into container now
2023-12-06 23:23:18,277:INFO:_master_model_container: 7
2023-12-06 23:23:18,277:INFO:_display_container: 2
2023-12-06 23:23:18,280:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-06 23:23:18,280:INFO:create_model() successfully completed......................................
2023-12-06 23:23:18,402:INFO:SubProcess create_model() end ==================================
2023-12-06 23:23:18,402:INFO:Creating metrics dataframe
2023-12-06 23:23:18,416:INFO:Initializing Quadratic Discriminant Analysis
2023-12-06 23:23:18,416:INFO:Total runtime is 2.298373381296794 minutes
2023-12-06 23:23:18,416:INFO:SubProcess create_model() called ==================================
2023-12-06 23:23:18,416:INFO:Initializing create_model()
2023-12-06 23:23:18,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:23:18,421:INFO:Checking exceptions
2023-12-06 23:23:18,421:INFO:Importing libraries
2023-12-06 23:23:18,421:INFO:Copying training dataset
2023-12-06 23:23:18,432:INFO:Defining folds
2023-12-06 23:23:18,432:INFO:Declaring metric variables
2023-12-06 23:23:18,437:INFO:Importing untrained model
2023-12-06 23:23:18,447:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-06 23:23:18,457:INFO:Starting cross validation
2023-12-06 23:23:18,462:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:23:24,545:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:23:24,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:23:24,767:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:23:24,890:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:23:25,362:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,412:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,431:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,469:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,519:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,524:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,529:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,570:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,629:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,646:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,669:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:25,769:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:28,460:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:23:28,727:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:28,772:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:28,827:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:28,889:INFO:Calculating mean and std
2023-12-06 23:23:28,894:INFO:Creating metrics dataframe
2023-12-06 23:23:28,894:INFO:Uploading results into container
2023-12-06 23:23:28,894:INFO:Uploading model into container now
2023-12-06 23:23:28,894:INFO:_master_model_container: 8
2023-12-06 23:23:28,894:INFO:_display_container: 2
2023-12-06 23:23:28,894:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-06 23:23:28,894:INFO:create_model() successfully completed......................................
2023-12-06 23:23:29,022:INFO:SubProcess create_model() end ==================================
2023-12-06 23:23:29,022:INFO:Creating metrics dataframe
2023-12-06 23:23:29,039:INFO:Initializing Ada Boost Classifier
2023-12-06 23:23:29,039:INFO:Total runtime is 2.475420435269674 minutes
2023-12-06 23:23:29,044:INFO:SubProcess create_model() called ==================================
2023-12-06 23:23:29,044:INFO:Initializing create_model()
2023-12-06 23:23:29,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:23:29,044:INFO:Checking exceptions
2023-12-06 23:23:29,044:INFO:Importing libraries
2023-12-06 23:23:29,044:INFO:Copying training dataset
2023-12-06 23:23:29,056:INFO:Defining folds
2023-12-06 23:23:29,056:INFO:Declaring metric variables
2023-12-06 23:23:29,061:INFO:Importing untrained model
2023-12-06 23:23:29,071:INFO:Ada Boost Classifier Imported successfully
2023-12-06 23:23:29,079:INFO:Starting cross validation
2023-12-06 23:23:29,084:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:23:42,463:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,547:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,570:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,641:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,653:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,669:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,691:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,746:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,758:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,796:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,853:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:42,891:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:49,014:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:49,069:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:49,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:23:49,176:INFO:Calculating mean and std
2023-12-06 23:23:49,176:INFO:Creating metrics dataframe
2023-12-06 23:23:49,181:INFO:Uploading results into container
2023-12-06 23:23:49,181:INFO:Uploading model into container now
2023-12-06 23:23:49,181:INFO:_master_model_container: 9
2023-12-06 23:23:49,181:INFO:_display_container: 2
2023-12-06 23:23:49,181:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-06 23:23:49,181:INFO:create_model() successfully completed......................................
2023-12-06 23:23:49,304:INFO:SubProcess create_model() end ==================================
2023-12-06 23:23:49,304:INFO:Creating metrics dataframe
2023-12-06 23:23:49,319:INFO:Initializing Gradient Boosting Classifier
2023-12-06 23:23:49,319:INFO:Total runtime is 2.81342800060908 minutes
2023-12-06 23:23:49,326:INFO:SubProcess create_model() called ==================================
2023-12-06 23:23:49,326:INFO:Initializing create_model()
2023-12-06 23:23:49,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:23:49,326:INFO:Checking exceptions
2023-12-06 23:23:49,326:INFO:Importing libraries
2023-12-06 23:23:49,326:INFO:Copying training dataset
2023-12-06 23:23:49,343:INFO:Defining folds
2023-12-06 23:23:49,343:INFO:Declaring metric variables
2023-12-06 23:23:49,348:INFO:Importing untrained model
2023-12-06 23:23:49,353:INFO:Gradient Boosting Classifier Imported successfully
2023-12-06 23:23:49,366:INFO:Starting cross validation
2023-12-06 23:23:49,366:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:24:22,326:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,466:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,481:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,529:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,535:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,597:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,610:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,635:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,665:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,720:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,766:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:22,776:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:39,470:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:39,516:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:39,561:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:39,621:INFO:Calculating mean and std
2023-12-06 23:24:39,621:INFO:Creating metrics dataframe
2023-12-06 23:24:39,627:INFO:Uploading results into container
2023-12-06 23:24:39,627:INFO:Uploading model into container now
2023-12-06 23:24:39,627:INFO:_master_model_container: 10
2023-12-06 23:24:39,627:INFO:_display_container: 2
2023-12-06 23:24:39,627:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-06 23:24:39,627:INFO:create_model() successfully completed......................................
2023-12-06 23:24:39,753:INFO:SubProcess create_model() end ==================================
2023-12-06 23:24:39,753:INFO:Creating metrics dataframe
2023-12-06 23:24:39,776:INFO:Initializing Linear Discriminant Analysis
2023-12-06 23:24:39,777:INFO:Total runtime is 3.6543967604637144 minutes
2023-12-06 23:24:39,781:INFO:SubProcess create_model() called ==================================
2023-12-06 23:24:39,781:INFO:Initializing create_model()
2023-12-06 23:24:39,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:24:39,782:INFO:Checking exceptions
2023-12-06 23:24:39,782:INFO:Importing libraries
2023-12-06 23:24:39,782:INFO:Copying training dataset
2023-12-06 23:24:39,795:INFO:Defining folds
2023-12-06 23:24:39,795:INFO:Declaring metric variables
2023-12-06 23:24:39,800:INFO:Importing untrained model
2023-12-06 23:24:39,805:INFO:Linear Discriminant Analysis Imported successfully
2023-12-06 23:24:39,815:INFO:Starting cross validation
2023-12-06 23:24:39,820:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:24:48,609:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,641:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,666:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,716:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,756:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,776:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,791:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,830:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,862:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,887:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:48,907:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:52,728:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:52,811:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:52,890:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:24:52,968:INFO:Calculating mean and std
2023-12-06 23:24:52,968:INFO:Creating metrics dataframe
2023-12-06 23:24:52,973:INFO:Uploading results into container
2023-12-06 23:24:52,973:INFO:Uploading model into container now
2023-12-06 23:24:52,973:INFO:_master_model_container: 11
2023-12-06 23:24:52,973:INFO:_display_container: 2
2023-12-06 23:24:52,973:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-06 23:24:52,973:INFO:create_model() successfully completed......................................
2023-12-06 23:24:53,100:INFO:SubProcess create_model() end ==================================
2023-12-06 23:24:53,105:INFO:Creating metrics dataframe
2023-12-06 23:24:53,125:INFO:Initializing Extra Trees Classifier
2023-12-06 23:24:53,125:INFO:Total runtime is 3.876864711443583 minutes
2023-12-06 23:24:53,130:INFO:SubProcess create_model() called ==================================
2023-12-06 23:24:53,135:INFO:Initializing create_model()
2023-12-06 23:24:53,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:24:53,135:INFO:Checking exceptions
2023-12-06 23:24:53,135:INFO:Importing libraries
2023-12-06 23:24:53,135:INFO:Copying training dataset
2023-12-06 23:24:53,157:INFO:Defining folds
2023-12-06 23:24:53,157:INFO:Declaring metric variables
2023-12-06 23:24:53,162:INFO:Importing untrained model
2023-12-06 23:24:53,172:INFO:Extra Trees Classifier Imported successfully
2023-12-06 23:24:53,188:INFO:Starting cross validation
2023-12-06 23:24:53,194:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:25:17,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,075:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,332:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,366:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,451:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,542:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,671:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,785:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,776:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,825:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:18,976:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:19,123:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:26,415:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:26,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:26,556:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:26,650:INFO:Calculating mean and std
2023-12-06 23:25:26,650:INFO:Creating metrics dataframe
2023-12-06 23:25:26,661:INFO:Uploading results into container
2023-12-06 23:25:26,661:INFO:Uploading model into container now
2023-12-06 23:25:26,661:INFO:_master_model_container: 12
2023-12-06 23:25:26,661:INFO:_display_container: 2
2023-12-06 23:25:26,666:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-06 23:25:26,666:INFO:create_model() successfully completed......................................
2023-12-06 23:25:26,828:INFO:SubProcess create_model() end ==================================
2023-12-06 23:25:26,828:INFO:Creating metrics dataframe
2023-12-06 23:25:26,846:INFO:Initializing Light Gradient Boosting Machine
2023-12-06 23:25:26,846:INFO:Total runtime is 4.438870469729105 minutes
2023-12-06 23:25:26,851:INFO:SubProcess create_model() called ==================================
2023-12-06 23:25:26,851:INFO:Initializing create_model()
2023-12-06 23:25:26,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:25:26,851:INFO:Checking exceptions
2023-12-06 23:25:26,851:INFO:Importing libraries
2023-12-06 23:25:26,851:INFO:Copying training dataset
2023-12-06 23:25:26,868:INFO:Defining folds
2023-12-06 23:25:26,868:INFO:Declaring metric variables
2023-12-06 23:25:26,878:INFO:Importing untrained model
2023-12-06 23:25:26,883:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:25:26,910:INFO:Starting cross validation
2023-12-06 23:25:26,916:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:25:36,651:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:36,746:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:36,784:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:36,792:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:36,867:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:36,909:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:36,928:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:36,977:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:37,035:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:37,508:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:37,584:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:37,684:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:42,044:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:42,109:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:42,157:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:42,228:INFO:Calculating mean and std
2023-12-06 23:25:42,228:INFO:Creating metrics dataframe
2023-12-06 23:25:42,233:INFO:Uploading results into container
2023-12-06 23:25:42,233:INFO:Uploading model into container now
2023-12-06 23:25:42,233:INFO:_master_model_container: 13
2023-12-06 23:25:42,233:INFO:_display_container: 2
2023-12-06 23:25:42,233:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:25:42,233:INFO:create_model() successfully completed......................................
2023-12-06 23:25:42,367:INFO:SubProcess create_model() end ==================================
2023-12-06 23:25:42,367:INFO:Creating metrics dataframe
2023-12-06 23:25:42,383:INFO:Initializing Dummy Classifier
2023-12-06 23:25:42,383:INFO:Total runtime is 4.697832242647806 minutes
2023-12-06 23:25:42,390:INFO:SubProcess create_model() called ==================================
2023-12-06 23:25:42,390:INFO:Initializing create_model()
2023-12-06 23:25:42,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BF0CE9D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:25:42,390:INFO:Checking exceptions
2023-12-06 23:25:42,390:INFO:Importing libraries
2023-12-06 23:25:42,390:INFO:Copying training dataset
2023-12-06 23:25:42,409:INFO:Defining folds
2023-12-06 23:25:42,409:INFO:Declaring metric variables
2023-12-06 23:25:42,412:INFO:Importing untrained model
2023-12-06 23:25:42,424:INFO:Dummy Classifier Imported successfully
2023-12-06 23:25:42,436:INFO:Starting cross validation
2023-12-06 23:25:42,449:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:25:48,938:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,040:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,045:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,050:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,118:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:25:49,138:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,161:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,168:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:25:49,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:25:49,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:25:49,255:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,265:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:49,280:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:52,737:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:52,853:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:52,904:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:25:52,935:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:25:53,001:INFO:Calculating mean and std
2023-12-06 23:25:53,001:INFO:Creating metrics dataframe
2023-12-06 23:25:53,001:INFO:Uploading results into container
2023-12-06 23:25:53,006:INFO:Uploading model into container now
2023-12-06 23:25:53,006:INFO:_master_model_container: 14
2023-12-06 23:25:53,006:INFO:_display_container: 2
2023-12-06 23:25:53,006:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-06 23:25:53,006:INFO:create_model() successfully completed......................................
2023-12-06 23:25:53,137:INFO:SubProcess create_model() end ==================================
2023-12-06 23:25:53,137:INFO:Creating metrics dataframe
2023-12-06 23:25:53,173:INFO:Initializing create_model()
2023-12-06 23:25:53,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191CD694130>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:25:53,173:INFO:Checking exceptions
2023-12-06 23:25:53,173:INFO:Importing libraries
2023-12-06 23:25:53,173:INFO:Copying training dataset
2023-12-06 23:25:53,196:INFO:Defining folds
2023-12-06 23:25:53,196:INFO:Declaring metric variables
2023-12-06 23:25:53,196:INFO:Importing untrained model
2023-12-06 23:25:53,196:INFO:Declaring custom model
2023-12-06 23:25:53,196:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:25:53,204:INFO:Cross validation set to False
2023-12-06 23:25:53,204:INFO:Fitting Model
2023-12-06 23:25:57,787:INFO:[LightGBM] [Info] Number of positive: 20813, number of negative: 20813
2023-12-06 23:25:57,812:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.017445 seconds.
2023-12-06 23:25:57,812:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-06 23:25:57,817:INFO:[LightGBM] [Info] Total Bins 12135
2023-12-06 23:25:57,817:INFO:[LightGBM] [Info] Number of data points in the train set: 41626, number of used features: 64
2023-12-06 23:25:57,821:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-06 23:25:58,611:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:25:58,616:INFO:create_model() successfully completed......................................
2023-12-06 23:25:58,848:INFO:_master_model_container: 14
2023-12-06 23:25:58,848:INFO:_display_container: 2
2023-12-06 23:25:58,849:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:25:58,850:INFO:compare_models() successfully completed......................................
2023-12-06 23:25:58,928:INFO:PyCaret ClassificationExperiment
2023-12-06 23:25:58,928:INFO:Logging name: clf-default-name
2023-12-06 23:25:58,928:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-06 23:25:58,928:INFO:version 3.2.0
2023-12-06 23:25:58,929:INFO:Initializing setup()
2023-12-06 23:25:58,929:INFO:self.USI: 6d0b
2023-12-06 23:25:58,929:INFO:self._variable_keys: {'data', 'is_multiclass', 'y_test', 'target_param', 'log_plots_param', 'fold_groups_param', 'X_train', 'y', 'seed', '_available_plots', 'X_test', 'fold_shuffle_param', 'memory', 'fold_generator', 'fix_imbalance', '_ml_usecase', 'exp_name_log', 'USI', 'idx', 'n_jobs_param', 'pipeline', 'logging_param', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'X', 'y_train'}
2023-12-06 23:25:58,929:INFO:Checking environment
2023-12-06 23:25:58,929:INFO:python_version: 3.9.18
2023-12-06 23:25:58,929:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-06 23:25:58,929:INFO:machine: AMD64
2023-12-06 23:25:58,930:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-06 23:25:58,930:INFO:Memory: svmem(total=7955767296, available=1309655040, percent=83.5, used=6646112256, free=1309655040)
2023-12-06 23:25:58,930:INFO:Physical Core: 2
2023-12-06 23:25:58,930:INFO:Logical Core: 4
2023-12-06 23:25:58,930:INFO:Checking libraries
2023-12-06 23:25:58,930:INFO:System:
2023-12-06 23:25:58,930:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-06 23:25:58,931:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-06 23:25:58,931:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-06 23:25:58,931:INFO:PyCaret required dependencies:
2023-12-06 23:25:58,931:INFO:                 pip: 23.3.1
2023-12-06 23:25:58,931:INFO:          setuptools: 68.0.0
2023-12-06 23:25:58,931:INFO:             pycaret: 3.2.0
2023-12-06 23:25:58,931:INFO:             IPython: 8.15.0
2023-12-06 23:25:58,932:INFO:          ipywidgets: 7.6.5
2023-12-06 23:25:58,932:INFO:                tqdm: 4.64.1
2023-12-06 23:25:58,932:INFO:               numpy: 1.25.2
2023-12-06 23:25:58,932:INFO:              pandas: 1.5.3
2023-12-06 23:25:58,932:INFO:              jinja2: 3.1.2
2023-12-06 23:25:58,932:INFO:               scipy: 1.9.3
2023-12-06 23:25:58,932:INFO:              joblib: 1.2.0
2023-12-06 23:25:58,932:INFO:             sklearn: 1.2.2
2023-12-06 23:25:58,933:INFO:                pyod: 1.1.2
2023-12-06 23:25:58,933:INFO:            imblearn: 0.11.0
2023-12-06 23:25:58,933:INFO:   category_encoders: 2.6.3
2023-12-06 23:25:58,933:INFO:            lightgbm: 4.1.0
2023-12-06 23:25:58,933:INFO:               numba: 0.58.1
2023-12-06 23:25:58,933:INFO:            requests: 2.28.1
2023-12-06 23:25:58,933:INFO:          matplotlib: 3.6.2
2023-12-06 23:25:58,933:INFO:          scikitplot: 0.3.7
2023-12-06 23:25:58,933:INFO:         yellowbrick: 1.5
2023-12-06 23:25:58,933:INFO:              plotly: 5.18.0
2023-12-06 23:25:58,934:INFO:    plotly-resampler: Not installed
2023-12-06 23:25:58,934:INFO:             kaleido: 0.2.1
2023-12-06 23:25:58,934:INFO:           schemdraw: 0.15
2023-12-06 23:25:58,934:INFO:         statsmodels: 0.14.0
2023-12-06 23:25:58,935:INFO:              sktime: 0.21.1
2023-12-06 23:25:58,935:INFO:               tbats: 1.1.3
2023-12-06 23:25:58,935:INFO:            pmdarima: 2.0.4
2023-12-06 23:25:58,935:INFO:              psutil: 5.9.0
2023-12-06 23:25:58,935:INFO:          markupsafe: 2.1.1
2023-12-06 23:25:58,935:INFO:             pickle5: Not installed
2023-12-06 23:25:58,935:INFO:         cloudpickle: 3.0.0
2023-12-06 23:25:58,935:INFO:         deprecation: 2.1.0
2023-12-06 23:25:58,935:INFO:              xxhash: 3.4.1
2023-12-06 23:25:58,935:INFO:           wurlitzer: Not installed
2023-12-06 23:25:58,935:INFO:PyCaret optional dependencies:
2023-12-06 23:25:58,935:INFO:                shap: 0.43.0
2023-12-06 23:25:58,935:INFO:           interpret: 0.4.4
2023-12-06 23:25:58,936:INFO:                umap: 0.5.5
2023-12-06 23:25:58,936:INFO:     ydata_profiling: 4.6.2
2023-12-06 23:25:58,936:INFO:  explainerdashboard: 0.4.3
2023-12-06 23:25:58,936:INFO:             autoviz: Not installed
2023-12-06 23:25:58,936:INFO:           fairlearn: 0.7.0
2023-12-06 23:25:58,936:INFO:          deepchecks: Not installed
2023-12-06 23:25:58,936:INFO:             xgboost: Not installed
2023-12-06 23:25:58,936:INFO:            catboost: Not installed
2023-12-06 23:25:58,936:INFO:              kmodes: Not installed
2023-12-06 23:25:58,936:INFO:             mlxtend: Not installed
2023-12-06 23:25:58,936:INFO:       statsforecast: Not installed
2023-12-06 23:25:58,936:INFO:        tune_sklearn: Not installed
2023-12-06 23:25:58,936:INFO:                 ray: Not installed
2023-12-06 23:25:58,936:INFO:            hyperopt: Not installed
2023-12-06 23:25:58,936:INFO:              optuna: Not installed
2023-12-06 23:25:58,936:INFO:               skopt: Not installed
2023-12-06 23:25:58,936:INFO:              mlflow: Not installed
2023-12-06 23:25:58,936:INFO:              gradio: Not installed
2023-12-06 23:25:58,937:INFO:             fastapi: Not installed
2023-12-06 23:25:58,937:INFO:             uvicorn: Not installed
2023-12-06 23:25:58,937:INFO:              m2cgen: Not installed
2023-12-06 23:25:58,937:INFO:           evidently: Not installed
2023-12-06 23:25:58,937:INFO:               fugue: Not installed
2023-12-06 23:25:58,937:INFO:           streamlit: 1.26.0
2023-12-06 23:25:58,942:INFO:             prophet: Not installed
2023-12-06 23:25:58,942:INFO:None
2023-12-06 23:25:58,942:INFO:Set up data.
2023-12-06 23:25:59,015:INFO:Set up folding strategy.
2023-12-06 23:25:59,015:INFO:Set up train/test split.
2023-12-06 23:25:59,060:INFO:Set up index.
2023-12-06 23:25:59,060:INFO:Assigning column types.
2023-12-06 23:25:59,065:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-06 23:25:59,130:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 23:25:59,135:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:25:59,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,240:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 23:25:59,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:25:59,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,275:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-06 23:25:59,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:25:59,371:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,432:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:25:59,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,472:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-06 23:25:59,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:25:59,667:INFO:Preparing preprocessing pipeline...
2023-12-06 23:25:59,672:INFO:Set up label encoding.
2023-12-06 23:25:59,672:INFO:Set up simple imputation.
2023-12-06 23:25:59,682:INFO:Set up encoding of ordinal features.
2023-12-06 23:25:59,682:INFO:Set up encoding of categorical features.
2023-12-06 23:25:59,682:INFO:Set up imbalanced handling.
2023-12-06 23:25:59,682:INFO:Set up column transformation.
2023-12-06 23:25:59,682:INFO:Set up column name cleaning.
2023-12-06 23:26:00,329:INFO:Finished creating preprocessing pipeline.
2023-12-06 23:26:00,365:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-06 23:26:00,365:INFO:Creating final display dataframe.
2023-12-06 23:26:00,645:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation             median
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method    borderlinesmote
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               6d0b
2023-12-06 23:26:00,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:26:00,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:26:00,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:26:00,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:26:00,889:INFO:setup() successfully completed in 2.04s...............
2023-12-06 23:26:00,889:INFO:Initializing compare_models()
2023-12-06 23:26:00,889:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-06 23:26:00,889:INFO:Checking exceptions
2023-12-06 23:26:00,899:INFO:Preparing display monitor
2023-12-06 23:26:00,954:INFO:Initializing Logistic Regression
2023-12-06 23:26:00,954:INFO:Total runtime is 0.0 minutes
2023-12-06 23:26:00,962:INFO:SubProcess create_model() called ==================================
2023-12-06 23:26:00,963:INFO:Initializing create_model()
2023-12-06 23:26:00,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:26:00,963:INFO:Checking exceptions
2023-12-06 23:26:00,964:INFO:Importing libraries
2023-12-06 23:26:00,964:INFO:Copying training dataset
2023-12-06 23:26:00,989:INFO:Defining folds
2023-12-06 23:26:00,989:INFO:Declaring metric variables
2023-12-06 23:26:00,997:INFO:Importing untrained model
2023-12-06 23:26:01,009:INFO:Logistic Regression Imported successfully
2023-12-06 23:26:01,028:INFO:Starting cross validation
2023-12-06 23:26:01,038:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:26:17,310:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:26:17,417:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:26:17,449:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:26:17,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:26:17,791:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:17,889:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:17,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:17,920:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,005:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,021:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,025:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,061:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,119:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,132:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,176:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:18,279:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:24,662:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:26:24,874:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:24,919:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:24,964:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:25,024:INFO:Calculating mean and std
2023-12-06 23:26:25,029:INFO:Creating metrics dataframe
2023-12-06 23:26:25,033:INFO:Uploading results into container
2023-12-06 23:26:25,033:INFO:Uploading model into container now
2023-12-06 23:26:25,033:INFO:_master_model_container: 1
2023-12-06 23:26:25,033:INFO:_display_container: 2
2023-12-06 23:26:25,033:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-06 23:26:25,033:INFO:create_model() successfully completed......................................
2023-12-06 23:26:25,153:INFO:SubProcess create_model() end ==================================
2023-12-06 23:26:25,153:INFO:Creating metrics dataframe
2023-12-06 23:26:25,166:INFO:Initializing K Neighbors Classifier
2023-12-06 23:26:25,167:INFO:Total runtime is 0.40356139341990155 minutes
2023-12-06 23:26:25,174:INFO:SubProcess create_model() called ==================================
2023-12-06 23:26:25,175:INFO:Initializing create_model()
2023-12-06 23:26:25,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:26:25,175:INFO:Checking exceptions
2023-12-06 23:26:25,175:INFO:Importing libraries
2023-12-06 23:26:25,175:INFO:Copying training dataset
2023-12-06 23:26:25,188:INFO:Defining folds
2023-12-06 23:26:25,188:INFO:Declaring metric variables
2023-12-06 23:26:25,193:INFO:Importing untrained model
2023-12-06 23:26:25,201:INFO:K Neighbors Classifier Imported successfully
2023-12-06 23:26:25,233:INFO:Starting cross validation
2023-12-06 23:26:25,240:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:26:40,213:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,468:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,477:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,592:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,660:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,768:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,778:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,818:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,906:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:40,969:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:46,969:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:47,075:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:47,167:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:47,264:INFO:Calculating mean and std
2023-12-06 23:26:47,264:INFO:Creating metrics dataframe
2023-12-06 23:26:47,271:INFO:Uploading results into container
2023-12-06 23:26:47,271:INFO:Uploading model into container now
2023-12-06 23:26:47,271:INFO:_master_model_container: 2
2023-12-06 23:26:47,271:INFO:_display_container: 2
2023-12-06 23:26:47,276:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-06 23:26:47,276:INFO:create_model() successfully completed......................................
2023-12-06 23:26:47,409:INFO:SubProcess create_model() end ==================================
2023-12-06 23:26:47,409:INFO:Creating metrics dataframe
2023-12-06 23:26:47,431:INFO:Initializing Naive Bayes
2023-12-06 23:26:47,431:INFO:Total runtime is 0.7746159076690674 minutes
2023-12-06 23:26:47,437:INFO:SubProcess create_model() called ==================================
2023-12-06 23:26:47,437:INFO:Initializing create_model()
2023-12-06 23:26:47,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:26:47,437:INFO:Checking exceptions
2023-12-06 23:26:47,437:INFO:Importing libraries
2023-12-06 23:26:47,437:INFO:Copying training dataset
2023-12-06 23:26:47,465:INFO:Defining folds
2023-12-06 23:26:47,465:INFO:Declaring metric variables
2023-12-06 23:26:47,477:INFO:Importing untrained model
2023-12-06 23:26:47,483:INFO:Naive Bayes Imported successfully
2023-12-06 23:26:47,509:INFO:Starting cross validation
2023-12-06 23:26:47,521:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:26:53,948:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,012:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,012:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,052:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,121:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,121:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,131:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,166:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,231:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,236:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:54,241:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:56,563:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:56,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:56,653:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:26:56,718:INFO:Calculating mean and std
2023-12-06 23:26:56,719:INFO:Creating metrics dataframe
2023-12-06 23:26:56,721:INFO:Uploading results into container
2023-12-06 23:26:56,721:INFO:Uploading model into container now
2023-12-06 23:26:56,721:INFO:_master_model_container: 3
2023-12-06 23:26:56,721:INFO:_display_container: 2
2023-12-06 23:26:56,721:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-06 23:26:56,721:INFO:create_model() successfully completed......................................
2023-12-06 23:26:56,860:INFO:SubProcess create_model() end ==================================
2023-12-06 23:26:56,865:INFO:Creating metrics dataframe
2023-12-06 23:26:56,882:INFO:Initializing Decision Tree Classifier
2023-12-06 23:26:56,882:INFO:Total runtime is 0.9321369727452596 minutes
2023-12-06 23:26:56,882:INFO:SubProcess create_model() called ==================================
2023-12-06 23:26:56,887:INFO:Initializing create_model()
2023-12-06 23:26:56,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:26:56,887:INFO:Checking exceptions
2023-12-06 23:26:56,887:INFO:Importing libraries
2023-12-06 23:26:56,887:INFO:Copying training dataset
2023-12-06 23:26:56,906:INFO:Defining folds
2023-12-06 23:26:56,906:INFO:Declaring metric variables
2023-12-06 23:26:56,912:INFO:Importing untrained model
2023-12-06 23:26:56,921:INFO:Decision Tree Classifier Imported successfully
2023-12-06 23:26:56,934:INFO:Starting cross validation
2023-12-06 23:26:56,944:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:27:05,135:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,250:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,270:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,324:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,363:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,395:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,430:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,440:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:05,513:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:08,358:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:08,402:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:08,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:08,513:INFO:Calculating mean and std
2023-12-06 23:27:08,513:INFO:Creating metrics dataframe
2023-12-06 23:27:08,518:INFO:Uploading results into container
2023-12-06 23:27:08,518:INFO:Uploading model into container now
2023-12-06 23:27:08,518:INFO:_master_model_container: 4
2023-12-06 23:27:08,518:INFO:_display_container: 2
2023-12-06 23:27:08,518:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-06 23:27:08,518:INFO:create_model() successfully completed......................................
2023-12-06 23:27:08,642:INFO:SubProcess create_model() end ==================================
2023-12-06 23:27:08,642:INFO:Creating metrics dataframe
2023-12-06 23:27:08,666:INFO:Initializing SVM - Linear Kernel
2023-12-06 23:27:08,666:INFO:Total runtime is 1.1285404086112976 minutes
2023-12-06 23:27:08,666:INFO:SubProcess create_model() called ==================================
2023-12-06 23:27:08,671:INFO:Initializing create_model()
2023-12-06 23:27:08,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:27:08,671:INFO:Checking exceptions
2023-12-06 23:27:08,671:INFO:Importing libraries
2023-12-06 23:27:08,671:INFO:Copying training dataset
2023-12-06 23:27:08,693:INFO:Defining folds
2023-12-06 23:27:08,693:INFO:Declaring metric variables
2023-12-06 23:27:08,699:INFO:Importing untrained model
2023-12-06 23:27:08,707:INFO:SVM - Linear Kernel Imported successfully
2023-12-06 23:27:08,722:INFO:Starting cross validation
2023-12-06 23:27:08,734:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:27:17,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:27:17,154:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:17,269:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:17,405:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:17,961:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:27:18,037:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,178:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,275:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:27:18,315:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:27:18,328:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,333:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,378:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,494:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,511:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,602:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:18,622:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:21,849:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:27:21,872:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:21,911:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:21,960:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:22,022:INFO:Calculating mean and std
2023-12-06 23:27:22,022:INFO:Creating metrics dataframe
2023-12-06 23:27:22,027:INFO:Uploading results into container
2023-12-06 23:27:22,027:INFO:Uploading model into container now
2023-12-06 23:27:22,027:INFO:_master_model_container: 5
2023-12-06 23:27:22,027:INFO:_display_container: 2
2023-12-06 23:27:22,027:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-06 23:27:22,027:INFO:create_model() successfully completed......................................
2023-12-06 23:27:22,150:INFO:SubProcess create_model() end ==================================
2023-12-06 23:27:22,150:INFO:Creating metrics dataframe
2023-12-06 23:27:22,174:INFO:Initializing Ridge Classifier
2023-12-06 23:27:22,174:INFO:Total runtime is 1.3536781072616577 minutes
2023-12-06 23:27:22,174:INFO:SubProcess create_model() called ==================================
2023-12-06 23:27:22,174:INFO:Initializing create_model()
2023-12-06 23:27:22,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:27:22,179:INFO:Checking exceptions
2023-12-06 23:27:22,179:INFO:Importing libraries
2023-12-06 23:27:22,179:INFO:Copying training dataset
2023-12-06 23:27:22,193:INFO:Defining folds
2023-12-06 23:27:22,193:INFO:Declaring metric variables
2023-12-06 23:27:22,197:INFO:Importing untrained model
2023-12-06 23:27:22,206:INFO:Ridge Classifier Imported successfully
2023-12-06 23:27:22,215:INFO:Starting cross validation
2023-12-06 23:27:22,226:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:27:28,485:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:27:28,502:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:27:28,532:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,552:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,565:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:27:28,567:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:27:28,620:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,620:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,640:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,670:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,738:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,753:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,786:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,857:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:28,872:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:31,417:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:27:31,451:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:31,539:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:31,610:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:31,706:INFO:Calculating mean and std
2023-12-06 23:27:31,711:INFO:Creating metrics dataframe
2023-12-06 23:27:31,722:INFO:Uploading results into container
2023-12-06 23:27:31,722:INFO:Uploading model into container now
2023-12-06 23:27:31,727:INFO:_master_model_container: 6
2023-12-06 23:27:31,727:INFO:_display_container: 2
2023-12-06 23:27:31,727:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-06 23:27:31,727:INFO:create_model() successfully completed......................................
2023-12-06 23:27:31,888:INFO:SubProcess create_model() end ==================================
2023-12-06 23:27:31,889:INFO:Creating metrics dataframe
2023-12-06 23:27:31,911:INFO:Initializing Random Forest Classifier
2023-12-06 23:27:31,916:INFO:Total runtime is 1.5160363753636679 minutes
2023-12-06 23:27:31,921:INFO:SubProcess create_model() called ==================================
2023-12-06 23:27:31,921:INFO:Initializing create_model()
2023-12-06 23:27:31,921:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:27:31,921:INFO:Checking exceptions
2023-12-06 23:27:31,921:INFO:Importing libraries
2023-12-06 23:27:31,921:INFO:Copying training dataset
2023-12-06 23:27:31,950:INFO:Defining folds
2023-12-06 23:27:31,950:INFO:Declaring metric variables
2023-12-06 23:27:31,959:INFO:Importing untrained model
2023-12-06 23:27:31,970:INFO:Random Forest Classifier Imported successfully
2023-12-06 23:27:31,988:INFO:Starting cross validation
2023-12-06 23:27:32,001:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:27:54,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,209:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,276:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,297:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,371:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,395:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,423:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,510:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,754:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,881:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:27:54,999:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:01,328:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:01,399:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:01,460:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:01,566:INFO:Calculating mean and std
2023-12-06 23:28:01,568:INFO:Creating metrics dataframe
2023-12-06 23:28:01,577:INFO:Uploading results into container
2023-12-06 23:28:01,578:INFO:Uploading model into container now
2023-12-06 23:28:01,578:INFO:_master_model_container: 7
2023-12-06 23:28:01,578:INFO:_display_container: 2
2023-12-06 23:28:01,578:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-06 23:28:01,578:INFO:create_model() successfully completed......................................
2023-12-06 23:28:01,740:INFO:SubProcess create_model() end ==================================
2023-12-06 23:28:01,740:INFO:Creating metrics dataframe
2023-12-06 23:28:01,761:INFO:Initializing Quadratic Discriminant Analysis
2023-12-06 23:28:01,761:INFO:Total runtime is 2.013456737995148 minutes
2023-12-06 23:28:01,766:INFO:SubProcess create_model() called ==================================
2023-12-06 23:28:01,766:INFO:Initializing create_model()
2023-12-06 23:28:01,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:28:01,766:INFO:Checking exceptions
2023-12-06 23:28:01,766:INFO:Importing libraries
2023-12-06 23:28:01,766:INFO:Copying training dataset
2023-12-06 23:28:01,802:INFO:Defining folds
2023-12-06 23:28:01,803:INFO:Declaring metric variables
2023-12-06 23:28:01,811:INFO:Importing untrained model
2023-12-06 23:28:01,819:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-06 23:28:01,836:INFO:Starting cross validation
2023-12-06 23:28:01,841:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:28:08,712:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:28:08,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:28:08,989:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:28:09,118:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:28:09,802:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:09,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:09,935:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:09,945:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,000:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,045:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,069:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,079:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,144:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,185:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,242:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:10,284:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:12,487:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:28:12,799:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:12,856:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:12,901:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:12,965:INFO:Calculating mean and std
2023-12-06 23:28:12,970:INFO:Creating metrics dataframe
2023-12-06 23:28:12,973:INFO:Uploading results into container
2023-12-06 23:28:12,973:INFO:Uploading model into container now
2023-12-06 23:28:12,973:INFO:_master_model_container: 8
2023-12-06 23:28:12,973:INFO:_display_container: 2
2023-12-06 23:28:12,973:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-06 23:28:12,973:INFO:create_model() successfully completed......................................
2023-12-06 23:28:13,101:INFO:SubProcess create_model() end ==================================
2023-12-06 23:28:13,101:INFO:Creating metrics dataframe
2023-12-06 23:28:13,127:INFO:Initializing Ada Boost Classifier
2023-12-06 23:28:13,127:INFO:Total runtime is 2.20289226770401 minutes
2023-12-06 23:28:13,131:INFO:SubProcess create_model() called ==================================
2023-12-06 23:28:13,131:INFO:Initializing create_model()
2023-12-06 23:28:13,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:28:13,131:INFO:Checking exceptions
2023-12-06 23:28:13,131:INFO:Importing libraries
2023-12-06 23:28:13,131:INFO:Copying training dataset
2023-12-06 23:28:13,145:INFO:Defining folds
2023-12-06 23:28:13,145:INFO:Declaring metric variables
2023-12-06 23:28:13,157:INFO:Importing untrained model
2023-12-06 23:28:13,163:INFO:Ada Boost Classifier Imported successfully
2023-12-06 23:28:13,178:INFO:Starting cross validation
2023-12-06 23:28:13,184:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:28:27,247:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,306:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,422:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,454:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,479:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,482:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,532:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,554:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:27,666:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:33,455:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:33,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:33,544:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:28:33,608:INFO:Calculating mean and std
2023-12-06 23:28:33,610:INFO:Creating metrics dataframe
2023-12-06 23:28:33,610:INFO:Uploading results into container
2023-12-06 23:28:33,610:INFO:Uploading model into container now
2023-12-06 23:28:33,610:INFO:_master_model_container: 9
2023-12-06 23:28:33,610:INFO:_display_container: 2
2023-12-06 23:28:33,615:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-06 23:28:33,615:INFO:create_model() successfully completed......................................
2023-12-06 23:28:33,737:INFO:SubProcess create_model() end ==================================
2023-12-06 23:28:33,737:INFO:Creating metrics dataframe
2023-12-06 23:28:33,762:INFO:Initializing Gradient Boosting Classifier
2023-12-06 23:28:33,763:INFO:Total runtime is 2.5468162020047505 minutes
2023-12-06 23:28:33,767:INFO:SubProcess create_model() called ==================================
2023-12-06 23:28:33,767:INFO:Initializing create_model()
2023-12-06 23:28:33,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:28:33,767:INFO:Checking exceptions
2023-12-06 23:28:33,767:INFO:Importing libraries
2023-12-06 23:28:33,767:INFO:Copying training dataset
2023-12-06 23:28:33,784:INFO:Defining folds
2023-12-06 23:28:33,784:INFO:Declaring metric variables
2023-12-06 23:28:33,794:INFO:Importing untrained model
2023-12-06 23:28:33,800:INFO:Gradient Boosting Classifier Imported successfully
2023-12-06 23:28:33,815:INFO:Starting cross validation
2023-12-06 23:28:33,822:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:29:08,488:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,569:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,614:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,625:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,705:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,730:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,750:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,771:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,847:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,871:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:08,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:09,021:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:25,805:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:25,846:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:25,893:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:25,952:INFO:Calculating mean and std
2023-12-06 23:29:25,957:INFO:Creating metrics dataframe
2023-12-06 23:29:25,962:INFO:Uploading results into container
2023-12-06 23:29:25,963:INFO:Uploading model into container now
2023-12-06 23:29:25,963:INFO:_master_model_container: 10
2023-12-06 23:29:25,963:INFO:_display_container: 2
2023-12-06 23:29:25,963:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-06 23:29:25,963:INFO:create_model() successfully completed......................................
2023-12-06 23:29:26,093:INFO:SubProcess create_model() end ==================================
2023-12-06 23:29:26,093:INFO:Creating metrics dataframe
2023-12-06 23:29:26,112:INFO:Initializing Linear Discriminant Analysis
2023-12-06 23:29:26,112:INFO:Total runtime is 3.4193044662475582 minutes
2023-12-06 23:29:26,118:INFO:SubProcess create_model() called ==================================
2023-12-06 23:29:26,119:INFO:Initializing create_model()
2023-12-06 23:29:26,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:29:26,120:INFO:Checking exceptions
2023-12-06 23:29:26,120:INFO:Importing libraries
2023-12-06 23:29:26,120:INFO:Copying training dataset
2023-12-06 23:29:26,143:INFO:Defining folds
2023-12-06 23:29:26,143:INFO:Declaring metric variables
2023-12-06 23:29:26,152:INFO:Importing untrained model
2023-12-06 23:29:26,161:INFO:Linear Discriminant Analysis Imported successfully
2023-12-06 23:29:26,173:INFO:Starting cross validation
2023-12-06 23:29:26,181:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:29:33,147:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,216:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,253:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,263:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,263:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,339:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,369:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,447:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,482:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:33,497:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:36,182:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:36,227:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:36,276:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:36,344:INFO:Calculating mean and std
2023-12-06 23:29:36,346:INFO:Creating metrics dataframe
2023-12-06 23:29:36,356:INFO:Uploading results into container
2023-12-06 23:29:36,357:INFO:Uploading model into container now
2023-12-06 23:29:36,358:INFO:_master_model_container: 11
2023-12-06 23:29:36,358:INFO:_display_container: 2
2023-12-06 23:29:36,358:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-06 23:29:36,358:INFO:create_model() successfully completed......................................
2023-12-06 23:29:36,482:INFO:SubProcess create_model() end ==================================
2023-12-06 23:29:36,482:INFO:Creating metrics dataframe
2023-12-06 23:29:36,497:INFO:Initializing Extra Trees Classifier
2023-12-06 23:29:36,497:INFO:Total runtime is 3.5923873345057165 minutes
2023-12-06 23:29:36,502:INFO:SubProcess create_model() called ==================================
2023-12-06 23:29:36,502:INFO:Initializing create_model()
2023-12-06 23:29:36,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:29:36,502:INFO:Checking exceptions
2023-12-06 23:29:36,502:INFO:Importing libraries
2023-12-06 23:29:36,502:INFO:Copying training dataset
2023-12-06 23:29:36,517:INFO:Defining folds
2023-12-06 23:29:36,517:INFO:Declaring metric variables
2023-12-06 23:29:36,527:INFO:Importing untrained model
2023-12-06 23:29:36,532:INFO:Extra Trees Classifier Imported successfully
2023-12-06 23:29:36,562:INFO:Starting cross validation
2023-12-06 23:29:36,568:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:29:57,250:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,350:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,539:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,554:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,611:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,718:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,729:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,758:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:57,849:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:58,177:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:58,280:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:29:58,371:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:04,026:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:04,076:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:04,157:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:04,264:INFO:Calculating mean and std
2023-12-06 23:30:04,265:INFO:Creating metrics dataframe
2023-12-06 23:30:04,273:INFO:Uploading results into container
2023-12-06 23:30:04,273:INFO:Uploading model into container now
2023-12-06 23:30:04,278:INFO:_master_model_container: 12
2023-12-06 23:30:04,278:INFO:_display_container: 2
2023-12-06 23:30:04,278:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-06 23:30:04,278:INFO:create_model() successfully completed......................................
2023-12-06 23:30:04,410:INFO:SubProcess create_model() end ==================================
2023-12-06 23:30:04,410:INFO:Creating metrics dataframe
2023-12-06 23:30:04,422:INFO:Initializing Light Gradient Boosting Machine
2023-12-06 23:30:04,427:INFO:Total runtime is 4.057885479927062 minutes
2023-12-06 23:30:04,433:INFO:SubProcess create_model() called ==================================
2023-12-06 23:30:04,433:INFO:Initializing create_model()
2023-12-06 23:30:04,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:30:04,433:INFO:Checking exceptions
2023-12-06 23:30:04,433:INFO:Importing libraries
2023-12-06 23:30:04,433:INFO:Copying training dataset
2023-12-06 23:30:04,449:INFO:Defining folds
2023-12-06 23:30:04,449:INFO:Declaring metric variables
2023-12-06 23:30:04,456:INFO:Importing untrained model
2023-12-06 23:30:04,464:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:30:04,477:INFO:Starting cross validation
2023-12-06 23:30:04,485:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:30:14,440:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,500:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,596:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,609:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,654:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,725:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,739:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,771:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,777:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,854:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:14,903:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:15,043:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:18,297:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:18,376:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:18,459:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:18,524:INFO:Calculating mean and std
2023-12-06 23:30:18,524:INFO:Creating metrics dataframe
2023-12-06 23:30:18,535:INFO:Uploading results into container
2023-12-06 23:30:18,536:INFO:Uploading model into container now
2023-12-06 23:30:18,538:INFO:_master_model_container: 13
2023-12-06 23:30:18,538:INFO:_display_container: 2
2023-12-06 23:30:18,538:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:30:18,538:INFO:create_model() successfully completed......................................
2023-12-06 23:30:18,714:INFO:SubProcess create_model() end ==================================
2023-12-06 23:30:18,714:INFO:Creating metrics dataframe
2023-12-06 23:30:18,729:INFO:Initializing Dummy Classifier
2023-12-06 23:30:18,729:INFO:Total runtime is 4.29626102844874 minutes
2023-12-06 23:30:18,731:INFO:SubProcess create_model() called ==================================
2023-12-06 23:30:18,736:INFO:Initializing create_model()
2023-12-06 23:30:18,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191D0E3DAC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:30:18,736:INFO:Checking exceptions
2023-12-06 23:30:18,736:INFO:Importing libraries
2023-12-06 23:30:18,736:INFO:Copying training dataset
2023-12-06 23:30:18,753:INFO:Defining folds
2023-12-06 23:30:18,753:INFO:Declaring metric variables
2023-12-06 23:30:18,762:INFO:Importing untrained model
2023-12-06 23:30:18,772:INFO:Dummy Classifier Imported successfully
2023-12-06 23:30:18,790:INFO:Starting cross validation
2023-12-06 23:30:18,796:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:30:24,670:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,780:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,780:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,795:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,845:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:30:24,855:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,885:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,885:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,903:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,918:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:30:24,955:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:30:24,964:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:24,976:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:30:24,996:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:25,016:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:27,310:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:27,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:27,415:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:30:27,440:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:27,510:INFO:Calculating mean and std
2023-12-06 23:30:27,510:INFO:Creating metrics dataframe
2023-12-06 23:30:27,515:INFO:Uploading results into container
2023-12-06 23:30:27,520:INFO:Uploading model into container now
2023-12-06 23:30:27,520:INFO:_master_model_container: 14
2023-12-06 23:30:27,520:INFO:_display_container: 2
2023-12-06 23:30:27,523:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-06 23:30:27,523:INFO:create_model() successfully completed......................................
2023-12-06 23:30:27,669:INFO:SubProcess create_model() end ==================================
2023-12-06 23:30:27,669:INFO:Creating metrics dataframe
2023-12-06 23:30:27,703:INFO:Initializing create_model()
2023-12-06 23:30:27,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B5C5CEB0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:30:27,709:INFO:Checking exceptions
2023-12-06 23:30:27,712:INFO:Importing libraries
2023-12-06 23:30:27,712:INFO:Copying training dataset
2023-12-06 23:30:27,739:INFO:Defining folds
2023-12-06 23:30:27,739:INFO:Declaring metric variables
2023-12-06 23:30:27,740:INFO:Importing untrained model
2023-12-06 23:30:27,740:INFO:Declaring custom model
2023-12-06 23:30:27,746:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:30:27,753:INFO:Cross validation set to False
2023-12-06 23:30:27,755:INFO:Fitting Model
2023-12-06 23:30:31,289:INFO:[LightGBM] [Info] Number of positive: 20813, number of negative: 20813
2023-12-06 23:30:31,319:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.010942 seconds.
2023-12-06 23:30:31,319:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-06 23:30:31,319:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-06 23:30:31,319:INFO:[LightGBM] [Info] Total Bins 11935
2023-12-06 23:30:31,319:INFO:[LightGBM] [Info] Number of data points in the train set: 41626, number of used features: 64
2023-12-06 23:30:31,324:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-06 23:30:32,085:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:30:32,086:INFO:create_model() successfully completed......................................
2023-12-06 23:30:32,333:INFO:_master_model_container: 14
2023-12-06 23:30:32,333:INFO:_display_container: 2
2023-12-06 23:30:32,335:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:30:32,336:INFO:compare_models() successfully completed......................................
2023-12-06 23:30:32,396:INFO:PyCaret ClassificationExperiment
2023-12-06 23:30:32,396:INFO:Logging name: clf-default-name
2023-12-06 23:30:32,397:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-06 23:30:32,397:INFO:version 3.2.0
2023-12-06 23:30:32,397:INFO:Initializing setup()
2023-12-06 23:30:32,398:INFO:self.USI: b84e
2023-12-06 23:30:32,398:INFO:self._variable_keys: {'data', 'is_multiclass', 'y_test', 'target_param', 'log_plots_param', 'fold_groups_param', 'X_train', 'y', 'seed', '_available_plots', 'X_test', 'fold_shuffle_param', 'memory', 'fold_generator', 'fix_imbalance', '_ml_usecase', 'exp_name_log', 'USI', 'idx', 'n_jobs_param', 'pipeline', 'logging_param', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'X', 'y_train'}
2023-12-06 23:30:32,398:INFO:Checking environment
2023-12-06 23:30:32,398:INFO:python_version: 3.9.18
2023-12-06 23:30:32,398:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-06 23:30:32,398:INFO:machine: AMD64
2023-12-06 23:30:32,398:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-06 23:30:32,399:INFO:Memory: svmem(total=7955767296, available=1502502912, percent=81.1, used=6453264384, free=1502502912)
2023-12-06 23:30:32,400:INFO:Physical Core: 2
2023-12-06 23:30:32,400:INFO:Logical Core: 4
2023-12-06 23:30:32,400:INFO:Checking libraries
2023-12-06 23:30:32,401:INFO:System:
2023-12-06 23:30:32,401:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-06 23:30:32,402:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-06 23:30:32,402:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-06 23:30:32,402:INFO:PyCaret required dependencies:
2023-12-06 23:30:32,403:INFO:                 pip: 23.3.1
2023-12-06 23:30:32,403:INFO:          setuptools: 68.0.0
2023-12-06 23:30:32,403:INFO:             pycaret: 3.2.0
2023-12-06 23:30:32,404:INFO:             IPython: 8.15.0
2023-12-06 23:30:32,404:INFO:          ipywidgets: 7.6.5
2023-12-06 23:30:32,405:INFO:                tqdm: 4.64.1
2023-12-06 23:30:32,405:INFO:               numpy: 1.25.2
2023-12-06 23:30:32,405:INFO:              pandas: 1.5.3
2023-12-06 23:30:32,405:INFO:              jinja2: 3.1.2
2023-12-06 23:30:32,407:INFO:               scipy: 1.9.3
2023-12-06 23:30:32,407:INFO:              joblib: 1.2.0
2023-12-06 23:30:32,407:INFO:             sklearn: 1.2.2
2023-12-06 23:30:32,408:INFO:                pyod: 1.1.2
2023-12-06 23:30:32,408:INFO:            imblearn: 0.11.0
2023-12-06 23:30:32,408:INFO:   category_encoders: 2.6.3
2023-12-06 23:30:32,408:INFO:            lightgbm: 4.1.0
2023-12-06 23:30:32,408:INFO:               numba: 0.58.1
2023-12-06 23:30:32,408:INFO:            requests: 2.28.1
2023-12-06 23:30:32,409:INFO:          matplotlib: 3.6.2
2023-12-06 23:30:32,410:INFO:          scikitplot: 0.3.7
2023-12-06 23:30:32,410:INFO:         yellowbrick: 1.5
2023-12-06 23:30:32,413:INFO:              plotly: 5.18.0
2023-12-06 23:30:32,414:INFO:    plotly-resampler: Not installed
2023-12-06 23:30:32,414:INFO:             kaleido: 0.2.1
2023-12-06 23:30:32,415:INFO:           schemdraw: 0.15
2023-12-06 23:30:32,416:INFO:         statsmodels: 0.14.0
2023-12-06 23:30:32,416:INFO:              sktime: 0.21.1
2023-12-06 23:30:32,416:INFO:               tbats: 1.1.3
2023-12-06 23:30:32,417:INFO:            pmdarima: 2.0.4
2023-12-06 23:30:32,417:INFO:              psutil: 5.9.0
2023-12-06 23:30:32,419:INFO:          markupsafe: 2.1.1
2023-12-06 23:30:32,419:INFO:             pickle5: Not installed
2023-12-06 23:30:32,419:INFO:         cloudpickle: 3.0.0
2023-12-06 23:30:32,419:INFO:         deprecation: 2.1.0
2023-12-06 23:30:32,419:INFO:              xxhash: 3.4.1
2023-12-06 23:30:32,419:INFO:           wurlitzer: Not installed
2023-12-06 23:30:32,419:INFO:PyCaret optional dependencies:
2023-12-06 23:30:32,419:INFO:                shap: 0.43.0
2023-12-06 23:30:32,419:INFO:           interpret: 0.4.4
2023-12-06 23:30:32,419:INFO:                umap: 0.5.5
2023-12-06 23:30:32,419:INFO:     ydata_profiling: 4.6.2
2023-12-06 23:30:32,419:INFO:  explainerdashboard: 0.4.3
2023-12-06 23:30:32,424:INFO:             autoviz: Not installed
2023-12-06 23:30:32,424:INFO:           fairlearn: 0.7.0
2023-12-06 23:30:32,424:INFO:          deepchecks: Not installed
2023-12-06 23:30:32,424:INFO:             xgboost: Not installed
2023-12-06 23:30:32,424:INFO:            catboost: Not installed
2023-12-06 23:30:32,424:INFO:              kmodes: Not installed
2023-12-06 23:30:32,424:INFO:             mlxtend: Not installed
2023-12-06 23:30:32,424:INFO:       statsforecast: Not installed
2023-12-06 23:30:32,424:INFO:        tune_sklearn: Not installed
2023-12-06 23:30:32,424:INFO:                 ray: Not installed
2023-12-06 23:30:32,424:INFO:            hyperopt: Not installed
2023-12-06 23:30:32,424:INFO:              optuna: Not installed
2023-12-06 23:30:32,424:INFO:               skopt: Not installed
2023-12-06 23:30:32,424:INFO:              mlflow: Not installed
2023-12-06 23:30:32,424:INFO:              gradio: Not installed
2023-12-06 23:30:32,424:INFO:             fastapi: Not installed
2023-12-06 23:30:32,424:INFO:             uvicorn: Not installed
2023-12-06 23:30:32,424:INFO:              m2cgen: Not installed
2023-12-06 23:30:32,424:INFO:           evidently: Not installed
2023-12-06 23:30:32,424:INFO:               fugue: Not installed
2023-12-06 23:30:32,424:INFO:           streamlit: 1.26.0
2023-12-06 23:30:32,424:INFO:             prophet: Not installed
2023-12-06 23:30:32,424:INFO:None
2023-12-06 23:30:32,428:INFO:Set up data.
2023-12-06 23:30:32,498:INFO:Set up folding strategy.
2023-12-06 23:30:32,503:INFO:Set up train/test split.
2023-12-06 23:30:32,548:INFO:Set up index.
2023-12-06 23:30:32,548:INFO:Assigning column types.
2023-12-06 23:30:32,553:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-06 23:30:32,618:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 23:30:32,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:30:32,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,720:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-06 23:30:32,720:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:30:32,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,760:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-06 23:30:32,822:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:30:32,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,917:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-06 23:30:32,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:32,952:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-06 23:30:33,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:33,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:33,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:33,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:33,139:INFO:Preparing preprocessing pipeline...
2023-12-06 23:30:33,144:INFO:Set up label encoding.
2023-12-06 23:30:33,144:INFO:Set up simple imputation.
2023-12-06 23:30:33,154:INFO:Set up encoding of ordinal features.
2023-12-06 23:30:33,154:INFO:Set up encoding of categorical features.
2023-12-06 23:30:33,154:INFO:Set up imbalanced handling.
2023-12-06 23:30:33,154:INFO:Set up column transformation.
2023-12-06 23:30:33,154:INFO:Set up column name cleaning.
2023-12-06 23:30:33,752:INFO:Finished creating preprocessing pipeline.
2023-12-06 23:30:33,783:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-06 23:30:33,783:INFO:Creating final display dataframe.
2023-12-06 23:30:34,050:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53753, 67)
6   Transformed train set shape        (42031, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation                knn
14       Categorical imputation                knn
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method             adasyn
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               b84e
2023-12-06 23:30:34,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:34,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:34,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:34,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-06 23:30:34,289:INFO:setup() successfully completed in 1.95s...............
2023-12-06 23:30:34,289:INFO:Initializing compare_models()
2023-12-06 23:30:34,289:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-06 23:30:34,289:INFO:Checking exceptions
2023-12-06 23:30:34,299:INFO:Preparing display monitor
2023-12-06 23:30:34,354:INFO:Initializing Logistic Regression
2023-12-06 23:30:34,354:INFO:Total runtime is 0.0 minutes
2023-12-06 23:30:34,362:INFO:SubProcess create_model() called ==================================
2023-12-06 23:30:34,365:INFO:Initializing create_model()
2023-12-06 23:30:34,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:30:34,366:INFO:Checking exceptions
2023-12-06 23:30:34,366:INFO:Importing libraries
2023-12-06 23:30:34,366:INFO:Copying training dataset
2023-12-06 23:30:34,404:INFO:Defining folds
2023-12-06 23:30:34,404:INFO:Declaring metric variables
2023-12-06 23:30:34,411:INFO:Importing untrained model
2023-12-06 23:30:34,423:INFO:Logistic Regression Imported successfully
2023-12-06 23:30:34,441:INFO:Starting cross validation
2023-12-06 23:30:34,448:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:30:51,252:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:30:51,264:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:30:51,460:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:30:51,556:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:30:51,806:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:51,847:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:51,919:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:51,952:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:51,983:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:52,031:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:52,053:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:52,069:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:52,103:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:52,164:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:52,219:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:52,274:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:59,468:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-06 23:30:59,785:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:59,877:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:30:59,939:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:00,044:INFO:Calculating mean and std
2023-12-06 23:31:00,044:INFO:Creating metrics dataframe
2023-12-06 23:31:00,057:INFO:Uploading results into container
2023-12-06 23:31:00,058:INFO:Uploading model into container now
2023-12-06 23:31:00,059:INFO:_master_model_container: 1
2023-12-06 23:31:00,059:INFO:_display_container: 2
2023-12-06 23:31:00,060:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-06 23:31:00,060:INFO:create_model() successfully completed......................................
2023-12-06 23:31:00,214:INFO:SubProcess create_model() end ==================================
2023-12-06 23:31:00,214:INFO:Creating metrics dataframe
2023-12-06 23:31:00,232:INFO:Initializing K Neighbors Classifier
2023-12-06 23:31:00,232:INFO:Total runtime is 0.4313048164049784 minutes
2023-12-06 23:31:00,238:INFO:SubProcess create_model() called ==================================
2023-12-06 23:31:00,239:INFO:Initializing create_model()
2023-12-06 23:31:00,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:31:00,239:INFO:Checking exceptions
2023-12-06 23:31:00,239:INFO:Importing libraries
2023-12-06 23:31:00,239:INFO:Copying training dataset
2023-12-06 23:31:00,275:INFO:Defining folds
2023-12-06 23:31:00,276:INFO:Declaring metric variables
2023-12-06 23:31:00,290:INFO:Importing untrained model
2023-12-06 23:31:00,300:INFO:K Neighbors Classifier Imported successfully
2023-12-06 23:31:00,321:INFO:Starting cross validation
2023-12-06 23:31:00,329:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:31:15,538:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:15,755:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:15,790:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:15,895:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:15,912:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:16,007:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:16,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:16,064:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:16,150:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:16,188:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:16,222:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:16,322:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:21,427:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:21,482:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:21,537:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:21,613:INFO:Calculating mean and std
2023-12-06 23:31:21,614:INFO:Creating metrics dataframe
2023-12-06 23:31:21,621:INFO:Uploading results into container
2023-12-06 23:31:21,622:INFO:Uploading model into container now
2023-12-06 23:31:21,622:INFO:_master_model_container: 2
2023-12-06 23:31:21,622:INFO:_display_container: 2
2023-12-06 23:31:21,623:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-06 23:31:21,623:INFO:create_model() successfully completed......................................
2023-12-06 23:31:21,751:INFO:SubProcess create_model() end ==================================
2023-12-06 23:31:21,751:INFO:Creating metrics dataframe
2023-12-06 23:31:21,766:INFO:Initializing Naive Bayes
2023-12-06 23:31:21,766:INFO:Total runtime is 0.7902017990748087 minutes
2023-12-06 23:31:21,769:INFO:SubProcess create_model() called ==================================
2023-12-06 23:31:21,769:INFO:Initializing create_model()
2023-12-06 23:31:21,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:31:21,774:INFO:Checking exceptions
2023-12-06 23:31:21,774:INFO:Importing libraries
2023-12-06 23:31:21,774:INFO:Copying training dataset
2023-12-06 23:31:21,789:INFO:Defining folds
2023-12-06 23:31:21,793:INFO:Declaring metric variables
2023-12-06 23:31:21,802:INFO:Importing untrained model
2023-12-06 23:31:21,812:INFO:Naive Bayes Imported successfully
2023-12-06 23:31:21,831:INFO:Starting cross validation
2023-12-06 23:31:21,836:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:31:28,187:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,240:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,300:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,346:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,356:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,371:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,434:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,479:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,499:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,502:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:28,607:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:31,161:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:31,220:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:31,293:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:31,383:INFO:Calculating mean and std
2023-12-06 23:31:31,387:INFO:Creating metrics dataframe
2023-12-06 23:31:31,393:INFO:Uploading results into container
2023-12-06 23:31:31,393:INFO:Uploading model into container now
2023-12-06 23:31:31,393:INFO:_master_model_container: 3
2023-12-06 23:31:31,393:INFO:_display_container: 2
2023-12-06 23:31:31,393:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-06 23:31:31,393:INFO:create_model() successfully completed......................................
2023-12-06 23:31:31,540:INFO:SubProcess create_model() end ==================================
2023-12-06 23:31:31,540:INFO:Creating metrics dataframe
2023-12-06 23:31:31,560:INFO:Initializing Decision Tree Classifier
2023-12-06 23:31:31,560:INFO:Total runtime is 0.9534345666567484 minutes
2023-12-06 23:31:31,565:INFO:SubProcess create_model() called ==================================
2023-12-06 23:31:31,565:INFO:Initializing create_model()
2023-12-06 23:31:31,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:31:31,565:INFO:Checking exceptions
2023-12-06 23:31:31,565:INFO:Importing libraries
2023-12-06 23:31:31,565:INFO:Copying training dataset
2023-12-06 23:31:31,598:INFO:Defining folds
2023-12-06 23:31:31,599:INFO:Declaring metric variables
2023-12-06 23:31:31,608:INFO:Importing untrained model
2023-12-06 23:31:31,611:INFO:Decision Tree Classifier Imported successfully
2023-12-06 23:31:31,630:INFO:Starting cross validation
2023-12-06 23:31:31,639:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:31:39,057:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,165:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,170:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,175:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,278:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,288:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,394:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,404:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:39,472:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:42,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:42,294:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:42,339:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:42,441:INFO:Calculating mean and std
2023-12-06 23:31:42,446:INFO:Creating metrics dataframe
2023-12-06 23:31:42,453:INFO:Uploading results into container
2023-12-06 23:31:42,453:INFO:Uploading model into container now
2023-12-06 23:31:42,453:INFO:_master_model_container: 4
2023-12-06 23:31:42,453:INFO:_display_container: 2
2023-12-06 23:31:42,458:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-06 23:31:42,458:INFO:create_model() successfully completed......................................
2023-12-06 23:31:42,598:INFO:SubProcess create_model() end ==================================
2023-12-06 23:31:42,599:INFO:Creating metrics dataframe
2023-12-06 23:31:42,614:INFO:Initializing SVM - Linear Kernel
2023-12-06 23:31:42,614:INFO:Total runtime is 1.1376682996749878 minutes
2023-12-06 23:31:42,619:INFO:SubProcess create_model() called ==================================
2023-12-06 23:31:42,619:INFO:Initializing create_model()
2023-12-06 23:31:42,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:31:42,619:INFO:Checking exceptions
2023-12-06 23:31:42,619:INFO:Importing libraries
2023-12-06 23:31:42,619:INFO:Copying training dataset
2023-12-06 23:31:42,634:INFO:Defining folds
2023-12-06 23:31:42,634:INFO:Declaring metric variables
2023-12-06 23:31:42,639:INFO:Importing untrained model
2023-12-06 23:31:42,658:INFO:SVM - Linear Kernel Imported successfully
2023-12-06 23:31:42,677:INFO:Starting cross validation
2023-12-06 23:31:42,684:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:31:51,461:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:31:51,498:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:51,586:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:51,683:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:51,892:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:31:51,937:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:31:52,066:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,070:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,167:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,177:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:31:52,261:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,343:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,401:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:52,499:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:55,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-06 23:31:55,749:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:55,794:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:55,847:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:31:55,901:INFO:Calculating mean and std
2023-12-06 23:31:55,906:INFO:Creating metrics dataframe
2023-12-06 23:31:55,910:INFO:Uploading results into container
2023-12-06 23:31:55,911:INFO:Uploading model into container now
2023-12-06 23:31:55,912:INFO:_master_model_container: 5
2023-12-06 23:31:55,912:INFO:_display_container: 2
2023-12-06 23:31:55,912:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-06 23:31:55,912:INFO:create_model() successfully completed......................................
2023-12-06 23:31:56,033:INFO:SubProcess create_model() end ==================================
2023-12-06 23:31:56,033:INFO:Creating metrics dataframe
2023-12-06 23:31:56,051:INFO:Initializing Ridge Classifier
2023-12-06 23:31:56,051:INFO:Total runtime is 1.3616191744804382 minutes
2023-12-06 23:31:56,056:INFO:SubProcess create_model() called ==================================
2023-12-06 23:31:56,056:INFO:Initializing create_model()
2023-12-06 23:31:56,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:31:56,056:INFO:Checking exceptions
2023-12-06 23:31:56,056:INFO:Importing libraries
2023-12-06 23:31:56,056:INFO:Copying training dataset
2023-12-06 23:31:56,074:INFO:Defining folds
2023-12-06 23:31:56,074:INFO:Declaring metric variables
2023-12-06 23:31:56,081:INFO:Importing untrained model
2023-12-06 23:31:56,101:INFO:Ridge Classifier Imported successfully
2023-12-06 23:31:56,119:INFO:Starting cross validation
2023-12-06 23:31:56,126:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:32:02,055:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:32:02,118:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,193:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:32:02,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:32:02,240:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,240:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,280:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:32:02,331:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,356:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,366:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,391:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,451:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:02,564:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:05,305:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-06 23:32:05,325:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:05,403:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:05,476:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:05,561:INFO:Calculating mean and std
2023-12-06 23:32:05,561:INFO:Creating metrics dataframe
2023-12-06 23:32:05,566:INFO:Uploading results into container
2023-12-06 23:32:05,566:INFO:Uploading model into container now
2023-12-06 23:32:05,566:INFO:_master_model_container: 6
2023-12-06 23:32:05,566:INFO:_display_container: 2
2023-12-06 23:32:05,566:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-06 23:32:05,571:INFO:create_model() successfully completed......................................
2023-12-06 23:32:05,701:INFO:SubProcess create_model() end ==================================
2023-12-06 23:32:05,701:INFO:Creating metrics dataframe
2023-12-06 23:32:05,716:INFO:Initializing Random Forest Classifier
2023-12-06 23:32:05,716:INFO:Total runtime is 1.5226945598920185 minutes
2023-12-06 23:32:05,723:INFO:SubProcess create_model() called ==================================
2023-12-06 23:32:05,725:INFO:Initializing create_model()
2023-12-06 23:32:05,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:32:05,725:INFO:Checking exceptions
2023-12-06 23:32:05,725:INFO:Importing libraries
2023-12-06 23:32:05,725:INFO:Copying training dataset
2023-12-06 23:32:05,737:INFO:Defining folds
2023-12-06 23:32:05,742:INFO:Declaring metric variables
2023-12-06 23:32:05,747:INFO:Importing untrained model
2023-12-06 23:32:05,756:INFO:Random Forest Classifier Imported successfully
2023-12-06 23:32:05,766:INFO:Starting cross validation
2023-12-06 23:32:05,778:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:32:27,164:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:27,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:27,280:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:27,452:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:27,503:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:27,727:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:27,798:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:27,908:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:28,080:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:28,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:28,196:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:28,299:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:34,359:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:34,404:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:34,454:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:34,526:INFO:Calculating mean and std
2023-12-06 23:32:34,531:INFO:Creating metrics dataframe
2023-12-06 23:32:34,541:INFO:Uploading results into container
2023-12-06 23:32:34,541:INFO:Uploading model into container now
2023-12-06 23:32:34,541:INFO:_master_model_container: 7
2023-12-06 23:32:34,541:INFO:_display_container: 2
2023-12-06 23:32:34,541:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-06 23:32:34,541:INFO:create_model() successfully completed......................................
2023-12-06 23:32:34,713:INFO:SubProcess create_model() end ==================================
2023-12-06 23:32:34,713:INFO:Creating metrics dataframe
2023-12-06 23:32:34,727:INFO:Initializing Quadratic Discriminant Analysis
2023-12-06 23:32:34,727:INFO:Total runtime is 2.00620805422465 minutes
2023-12-06 23:32:34,733:INFO:SubProcess create_model() called ==================================
2023-12-06 23:32:34,733:INFO:Initializing create_model()
2023-12-06 23:32:34,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:32:34,733:INFO:Checking exceptions
2023-12-06 23:32:34,733:INFO:Importing libraries
2023-12-06 23:32:34,733:INFO:Copying training dataset
2023-12-06 23:32:34,748:INFO:Defining folds
2023-12-06 23:32:34,748:INFO:Declaring metric variables
2023-12-06 23:32:34,754:INFO:Importing untrained model
2023-12-06 23:32:34,762:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-06 23:32:34,772:INFO:Starting cross validation
2023-12-06 23:32:34,783:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:32:41,178:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:32:41,315:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:32:41,515:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:32:41,676:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:32:42,166:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,241:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,342:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,350:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,398:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,410:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,450:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,460:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,520:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,568:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:42,632:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:44,671:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-06 23:32:44,987:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:45,032:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:45,077:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:45,144:INFO:Calculating mean and std
2023-12-06 23:32:45,144:INFO:Creating metrics dataframe
2023-12-06 23:32:45,149:INFO:Uploading results into container
2023-12-06 23:32:45,149:INFO:Uploading model into container now
2023-12-06 23:32:45,149:INFO:_master_model_container: 8
2023-12-06 23:32:45,149:INFO:_display_container: 2
2023-12-06 23:32:45,149:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-06 23:32:45,149:INFO:create_model() successfully completed......................................
2023-12-06 23:32:45,270:INFO:SubProcess create_model() end ==================================
2023-12-06 23:32:45,270:INFO:Creating metrics dataframe
2023-12-06 23:32:45,290:INFO:Initializing Ada Boost Classifier
2023-12-06 23:32:45,290:INFO:Total runtime is 2.182270832856496 minutes
2023-12-06 23:32:45,295:INFO:SubProcess create_model() called ==================================
2023-12-06 23:32:45,295:INFO:Initializing create_model()
2023-12-06 23:32:45,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:32:45,295:INFO:Checking exceptions
2023-12-06 23:32:45,295:INFO:Importing libraries
2023-12-06 23:32:45,295:INFO:Copying training dataset
2023-12-06 23:32:45,314:INFO:Defining folds
2023-12-06 23:32:45,314:INFO:Declaring metric variables
2023-12-06 23:32:45,321:INFO:Importing untrained model
2023-12-06 23:32:45,329:INFO:Ada Boost Classifier Imported successfully
2023-12-06 23:32:45,344:INFO:Starting cross validation
2023-12-06 23:32:45,350:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:32:58,994:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,000:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,073:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,090:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,107:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,110:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,180:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,205:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,210:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,210:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,284:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:32:59,310:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:05,290:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:05,335:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:05,381:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:05,447:INFO:Calculating mean and std
2023-12-06 23:33:05,447:INFO:Creating metrics dataframe
2023-12-06 23:33:05,452:INFO:Uploading results into container
2023-12-06 23:33:05,452:INFO:Uploading model into container now
2023-12-06 23:33:05,452:INFO:_master_model_container: 9
2023-12-06 23:33:05,452:INFO:_display_container: 2
2023-12-06 23:33:05,452:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-06 23:33:05,452:INFO:create_model() successfully completed......................................
2023-12-06 23:33:05,581:INFO:SubProcess create_model() end ==================================
2023-12-06 23:33:05,581:INFO:Creating metrics dataframe
2023-12-06 23:33:05,601:INFO:Initializing Gradient Boosting Classifier
2023-12-06 23:33:05,601:INFO:Total runtime is 2.520780857404073 minutes
2023-12-06 23:33:05,601:INFO:SubProcess create_model() called ==================================
2023-12-06 23:33:05,601:INFO:Initializing create_model()
2023-12-06 23:33:05,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:33:05,606:INFO:Checking exceptions
2023-12-06 23:33:05,606:INFO:Importing libraries
2023-12-06 23:33:05,606:INFO:Copying training dataset
2023-12-06 23:33:05,621:INFO:Defining folds
2023-12-06 23:33:05,622:INFO:Declaring metric variables
2023-12-06 23:33:05,626:INFO:Importing untrained model
2023-12-06 23:33:05,632:INFO:Gradient Boosting Classifier Imported successfully
2023-12-06 23:33:05,642:INFO:Starting cross validation
2023-12-06 23:33:05,653:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:33:41,293:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,473:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,485:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,617:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,622:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,627:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,648:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,773:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,800:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,844:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:41,939:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:59,434:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:59,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:59,523:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:33:59,587:INFO:Calculating mean and std
2023-12-06 23:33:59,589:INFO:Creating metrics dataframe
2023-12-06 23:33:59,594:INFO:Uploading results into container
2023-12-06 23:33:59,594:INFO:Uploading model into container now
2023-12-06 23:33:59,594:INFO:_master_model_container: 10
2023-12-06 23:33:59,594:INFO:_display_container: 2
2023-12-06 23:33:59,599:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-06 23:33:59,599:INFO:create_model() successfully completed......................................
2023-12-06 23:33:59,718:INFO:SubProcess create_model() end ==================================
2023-12-06 23:33:59,718:INFO:Creating metrics dataframe
2023-12-06 23:33:59,735:INFO:Initializing Linear Discriminant Analysis
2023-12-06 23:33:59,735:INFO:Total runtime is 3.4230089942614237 minutes
2023-12-06 23:33:59,740:INFO:SubProcess create_model() called ==================================
2023-12-06 23:33:59,740:INFO:Initializing create_model()
2023-12-06 23:33:59,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:33:59,740:INFO:Checking exceptions
2023-12-06 23:33:59,740:INFO:Importing libraries
2023-12-06 23:33:59,740:INFO:Copying training dataset
2023-12-06 23:33:59,758:INFO:Defining folds
2023-12-06 23:33:59,758:INFO:Declaring metric variables
2023-12-06 23:33:59,764:INFO:Importing untrained model
2023-12-06 23:33:59,771:INFO:Linear Discriminant Analysis Imported successfully
2023-12-06 23:33:59,786:INFO:Starting cross validation
2023-12-06 23:33:59,792:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:34:06,911:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:06,951:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,028:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,061:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,068:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,078:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,142:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,187:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,297:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:07,300:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:09,971:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:10,023:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:10,072:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:10,133:INFO:Calculating mean and std
2023-12-06 23:34:10,138:INFO:Creating metrics dataframe
2023-12-06 23:34:10,138:INFO:Uploading results into container
2023-12-06 23:34:10,138:INFO:Uploading model into container now
2023-12-06 23:34:10,143:INFO:_master_model_container: 11
2023-12-06 23:34:10,143:INFO:_display_container: 2
2023-12-06 23:34:10,143:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-06 23:34:10,143:INFO:create_model() successfully completed......................................
2023-12-06 23:34:10,269:INFO:SubProcess create_model() end ==================================
2023-12-06 23:34:10,269:INFO:Creating metrics dataframe
2023-12-06 23:34:10,286:INFO:Initializing Extra Trees Classifier
2023-12-06 23:34:10,286:INFO:Total runtime is 3.5988701224327087 minutes
2023-12-06 23:34:10,289:INFO:SubProcess create_model() called ==================================
2023-12-06 23:34:10,289:INFO:Initializing create_model()
2023-12-06 23:34:10,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:34:10,289:INFO:Checking exceptions
2023-12-06 23:34:10,289:INFO:Importing libraries
2023-12-06 23:34:10,289:INFO:Copying training dataset
2023-12-06 23:34:10,308:INFO:Defining folds
2023-12-06 23:34:10,308:INFO:Declaring metric variables
2023-12-06 23:34:10,313:INFO:Importing untrained model
2023-12-06 23:34:10,321:INFO:Extra Trees Classifier Imported successfully
2023-12-06 23:34:10,336:INFO:Starting cross validation
2023-12-06 23:34:10,341:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:34:29,982:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:30,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:30,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:30,323:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:30,434:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:30,627:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:30,908:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:30,933:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:31,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:31,136:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:31,209:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:31,254:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:37,023:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:37,071:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:37,121:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:37,187:INFO:Calculating mean and std
2023-12-06 23:34:37,191:INFO:Creating metrics dataframe
2023-12-06 23:34:37,197:INFO:Uploading results into container
2023-12-06 23:34:37,202:INFO:Uploading model into container now
2023-12-06 23:34:37,202:INFO:_master_model_container: 12
2023-12-06 23:34:37,202:INFO:_display_container: 2
2023-12-06 23:34:37,202:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-06 23:34:37,202:INFO:create_model() successfully completed......................................
2023-12-06 23:34:37,332:INFO:SubProcess create_model() end ==================================
2023-12-06 23:34:37,332:INFO:Creating metrics dataframe
2023-12-06 23:34:37,348:INFO:Initializing Light Gradient Boosting Machine
2023-12-06 23:34:37,348:INFO:Total runtime is 4.049890021483104 minutes
2023-12-06 23:34:37,353:INFO:SubProcess create_model() called ==================================
2023-12-06 23:34:37,353:INFO:Initializing create_model()
2023-12-06 23:34:37,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:34:37,353:INFO:Checking exceptions
2023-12-06 23:34:37,353:INFO:Importing libraries
2023-12-06 23:34:37,353:INFO:Copying training dataset
2023-12-06 23:34:37,366:INFO:Defining folds
2023-12-06 23:34:37,366:INFO:Declaring metric variables
2023-12-06 23:34:37,372:INFO:Importing untrained model
2023-12-06 23:34:37,382:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:34:37,394:INFO:Starting cross validation
2023-12-06 23:34:37,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:34:47,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,684:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,714:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,734:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,794:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,844:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,844:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,918:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:47,953:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:48,453:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:48,534:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:48,588:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:51,620:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:51,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:51,725:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:51,792:INFO:Calculating mean and std
2023-12-06 23:34:51,792:INFO:Creating metrics dataframe
2023-12-06 23:34:51,797:INFO:Uploading results into container
2023-12-06 23:34:51,797:INFO:Uploading model into container now
2023-12-06 23:34:51,797:INFO:_master_model_container: 13
2023-12-06 23:34:51,797:INFO:_display_container: 2
2023-12-06 23:34:51,802:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:34:51,802:INFO:create_model() successfully completed......................................
2023-12-06 23:34:51,925:INFO:SubProcess create_model() end ==================================
2023-12-06 23:34:51,930:INFO:Creating metrics dataframe
2023-12-06 23:34:51,946:INFO:Initializing Dummy Classifier
2023-12-06 23:34:51,946:INFO:Total runtime is 4.293194949626923 minutes
2023-12-06 23:34:51,954:INFO:SubProcess create_model() called ==================================
2023-12-06 23:34:51,955:INFO:Initializing create_model()
2023-12-06 23:34:51,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191CFDB00A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:34:51,956:INFO:Checking exceptions
2023-12-06 23:34:51,956:INFO:Importing libraries
2023-12-06 23:34:51,956:INFO:Copying training dataset
2023-12-06 23:34:51,969:INFO:Defining folds
2023-12-06 23:34:51,969:INFO:Declaring metric variables
2023-12-06 23:34:51,977:INFO:Importing untrained model
2023-12-06 23:34:51,983:INFO:Dummy Classifier Imported successfully
2023-12-06 23:34:51,997:INFO:Starting cross validation
2023-12-06 23:34:52,002:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-06 23:34:57,703:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,782:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,810:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,815:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,860:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,875:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:34:57,886:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,926:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,931:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,946:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:34:57,966:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:57,993:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:58,008:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:34:58,033:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:34:58,056:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:34:58,074:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:35:00,647:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:35:00,712:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:35:00,745:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-06 23:35:00,765:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-06 23:35:00,874:INFO:Calculating mean and std
2023-12-06 23:35:00,879:INFO:Creating metrics dataframe
2023-12-06 23:35:00,890:INFO:Uploading results into container
2023-12-06 23:35:00,890:INFO:Uploading model into container now
2023-12-06 23:35:00,890:INFO:_master_model_container: 14
2023-12-06 23:35:00,895:INFO:_display_container: 2
2023-12-06 23:35:00,895:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-06 23:35:00,895:INFO:create_model() successfully completed......................................
2023-12-06 23:35:01,054:INFO:SubProcess create_model() end ==================================
2023-12-06 23:35:01,054:INFO:Creating metrics dataframe
2023-12-06 23:35:01,099:INFO:Initializing create_model()
2023-12-06 23:35:01,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:35:01,099:INFO:Checking exceptions
2023-12-06 23:35:01,104:INFO:Importing libraries
2023-12-06 23:35:01,104:INFO:Copying training dataset
2023-12-06 23:35:01,166:INFO:Defining folds
2023-12-06 23:35:01,167:INFO:Declaring metric variables
2023-12-06 23:35:01,167:INFO:Importing untrained model
2023-12-06 23:35:01,167:INFO:Declaring custom model
2023-12-06 23:35:01,167:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:35:01,183:INFO:Cross validation set to False
2023-12-06 23:35:01,183:INFO:Fitting Model
2023-12-06 23:35:04,383:INFO:[LightGBM] [Info] Number of positive: 21218, number of negative: 20813
2023-12-06 23:35:04,408:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.011439 seconds.
2023-12-06 23:35:04,408:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-06 23:35:04,408:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-06 23:35:04,408:INFO:[LightGBM] [Info] Total Bins 11998
2023-12-06 23:35:04,413:INFO:[LightGBM] [Info] Number of data points in the train set: 42031, number of used features: 64
2023-12-06 23:35:04,413:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.504818 -> initscore=0.019272
2023-12-06 23:35:04,413:INFO:[LightGBM] [Info] Start training from score 0.019272
2023-12-06 23:35:05,192:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:35:05,192:INFO:create_model() successfully completed......................................
2023-12-06 23:35:05,416:INFO:_master_model_container: 14
2023-12-06 23:35:05,416:INFO:_display_container: 2
2023-12-06 23:35:05,416:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:35:05,416:INFO:compare_models() successfully completed......................................
2023-12-06 23:35:05,495:INFO:Initializing finalize_model()
2023-12-06 23:35:05,495:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-06 23:35:05,499:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:35:05,513:INFO:Initializing create_model()
2023-12-06 23:35:05,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:35:05,513:INFO:Checking exceptions
2023-12-06 23:35:05,517:INFO:Importing libraries
2023-12-06 23:35:05,517:INFO:Copying training dataset
2023-12-06 23:35:05,519:INFO:Defining folds
2023-12-06 23:35:05,519:INFO:Declaring metric variables
2023-12-06 23:35:05,519:INFO:Importing untrained model
2023-12-06 23:35:05,519:INFO:Declaring custom model
2023-12-06 23:35:05,521:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:35:05,527:INFO:Cross validation set to False
2023-12-06 23:35:05,527:INFO:Fitting Model
2023-12-06 23:35:10,351:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-06 23:35:10,391:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.016565 seconds.
2023-12-06 23:35:10,391:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-06 23:35:10,391:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-06 23:35:10,391:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-06 23:35:10,391:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-06 23:35:10,391:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-06 23:35:10,391:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-06 23:35:11,394:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:11,394:INFO:create_model() successfully completed......................................
2023-12-06 23:35:11,531:INFO:_master_model_container: 14
2023-12-06 23:35:11,531:INFO:_display_container: 2
2023-12-06 23:35:11,566:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:11,566:INFO:finalize_model() successfully completed......................................
2023-12-06 23:35:11,863:INFO:Initializing finalize_model()
2023-12-06 23:35:11,864:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-06 23:35:11,865:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:35:11,876:INFO:Initializing create_model()
2023-12-06 23:35:11,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:35:11,876:INFO:Checking exceptions
2023-12-06 23:35:11,879:INFO:Importing libraries
2023-12-06 23:35:11,880:INFO:Copying training dataset
2023-12-06 23:35:11,880:INFO:Defining folds
2023-12-06 23:35:11,880:INFO:Declaring metric variables
2023-12-06 23:35:11,881:INFO:Importing untrained model
2023-12-06 23:35:11,881:INFO:Declaring custom model
2023-12-06 23:35:11,881:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:35:11,888:INFO:Cross validation set to False
2023-12-06 23:35:11,889:INFO:Fitting Model
2023-12-06 23:35:17,222:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-06 23:35:17,272:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.027182 seconds.
2023-12-06 23:35:17,272:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-06 23:35:17,272:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-06 23:35:17,272:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-06 23:35:17,272:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-06 23:35:17,277:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-06 23:35:17,279:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-06 23:35:18,413:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:18,413:INFO:create_model() successfully completed......................................
2023-12-06 23:35:18,541:INFO:_master_model_container: 14
2023-12-06 23:35:18,541:INFO:_display_container: 2
2023-12-06 23:35:18,573:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:18,573:INFO:finalize_model() successfully completed......................................
2023-12-06 23:35:18,851:INFO:Initializing finalize_model()
2023-12-06 23:35:18,851:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-06 23:35:18,852:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-06 23:35:18,861:INFO:Initializing create_model()
2023-12-06 23:35:18,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-06 23:35:18,861:INFO:Checking exceptions
2023-12-06 23:35:18,865:INFO:Importing libraries
2023-12-06 23:35:18,865:INFO:Copying training dataset
2023-12-06 23:35:18,866:INFO:Defining folds
2023-12-06 23:35:18,867:INFO:Declaring metric variables
2023-12-06 23:35:18,867:INFO:Importing untrained model
2023-12-06 23:35:18,867:INFO:Declaring custom model
2023-12-06 23:35:18,869:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-06 23:35:18,873:INFO:Cross validation set to False
2023-12-06 23:35:18,873:INFO:Fitting Model
2023-12-06 23:35:24,016:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-06 23:35:24,056:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.017810 seconds.
2023-12-06 23:35:24,056:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-06 23:35:24,056:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-06 23:35:24,056:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-06 23:35:24,059:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-06 23:35:24,061:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-06 23:35:24,061:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-06 23:35:25,055:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:25,055:INFO:create_model() successfully completed......................................
2023-12-06 23:35:25,191:INFO:_master_model_container: 14
2023-12-06 23:35:25,191:INFO:_display_container: 2
2023-12-06 23:35:25,221:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:25,221:INFO:finalize_model() successfully completed......................................
2023-12-06 23:35:25,612:INFO:Initializing save_model()
2023-12-06 23:35:25,612:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-06 23:35:25,612:INFO:Adding model into prep_pipe
2023-12-06 23:35:25,612:WARNING:Only Model saved as it was a pipeline.
2023-12-06 23:35:25,657:INFO:models/model_exp1.pkl saved in current working directory
2023-12-06 23:35:25,739:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:25,739:INFO:save_model() successfully completed......................................
2023-12-06 23:35:26,052:INFO:Initializing save_model()
2023-12-06 23:35:26,053:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-06 23:35:26,053:INFO:Adding model into prep_pipe
2023-12-06 23:35:26,053:WARNING:Only Model saved as it was a pipeline.
2023-12-06 23:35:26,092:INFO:models/model_exp2.pkl saved in current working directory
2023-12-06 23:35:26,167:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:26,167:INFO:save_model() successfully completed......................................
2023-12-06 23:35:26,481:INFO:Initializing save_model()
2023-12-06 23:35:26,482:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-06 23:35:26,482:INFO:Adding model into prep_pipe
2023-12-06 23:35:26,482:WARNING:Only Model saved as it was a pipeline.
2023-12-06 23:35:26,513:INFO:models/model_exp3.pkl saved in current working directory
2023-12-06 23:35:26,593:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-06 23:35:26,593:INFO:save_model() successfully completed......................................
2023-12-06 23:38:08,406:INFO:Initializing plot_model()
2023-12-06 23:38:08,406:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191D1891580>, system=True)
2023-12-06 23:38:08,406:INFO:Checking exceptions
2023-12-06 23:38:08,424:INFO:Preloading libraries
2023-12-06 23:38:08,440:INFO:Copying training dataset
2023-12-06 23:38:08,441:INFO:Plot type: feature
2023-12-06 23:38:08,442:WARNING:No coef_ found. Trying feature_importances_
2023-12-06 23:38:08,743:INFO:Visual Rendered Successfully
2023-12-06 23:38:08,867:INFO:plot_model() successfully completed......................................
2023-12-07 20:30:59,335:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_19944\3661803333.py:4: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  import pandas_profiling

2023-12-07 20:31:00,521:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-09 06:16:43,671:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-09 06:17:21,866:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-09 06:17:21,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-09 06:17:21,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-09 06:17:21,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-09 06:17:22,981:INFO:PyCaret ClassificationExperiment
2023-12-09 06:17:22,981:INFO:Logging name: clf-default-name
2023-12-09 06:17:22,986:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-09 06:17:22,986:INFO:version 3.2.0
2023-12-09 06:17:22,986:INFO:Initializing setup()
2023-12-09 06:17:22,986:INFO:self.USI: e7d0
2023-12-09 06:17:22,986:INFO:self._variable_keys: {'USI', 'X_test', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'gpu_param', '_ml_usecase', 'X', 'y_train', 'n_jobs_param', 'pipeline', 'memory', 'fold_shuffle_param', 'data', 'seed', 'idx', 'fold_generator', 'log_plots_param', 'target_param', 'y', '_available_plots', 'html_param', 'X_train', 'fix_imbalance', 'y_test', 'gpu_n_jobs_param', 'exp_id', 'logging_param'}
2023-12-09 06:17:22,986:INFO:Checking environment
2023-12-09 06:17:22,986:INFO:python_version: 3.9.18
2023-12-09 06:17:22,986:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-09 06:17:22,986:INFO:machine: AMD64
2023-12-09 06:17:22,991:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-09 06:17:22,991:INFO:Memory: svmem(total=7955767296, available=938369024, percent=88.2, used=7017398272, free=938369024)
2023-12-09 06:17:22,991:INFO:Physical Core: 2
2023-12-09 06:17:22,991:INFO:Logical Core: 4
2023-12-09 06:17:22,991:INFO:Checking libraries
2023-12-09 06:17:22,991:INFO:System:
2023-12-09 06:17:22,994:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-09 06:17:22,994:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-09 06:17:22,994:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-09 06:17:22,994:INFO:PyCaret required dependencies:
2023-12-09 06:17:23,123:INFO:                 pip: 23.3.1
2023-12-09 06:17:23,123:INFO:          setuptools: 68.0.0
2023-12-09 06:17:23,123:INFO:             pycaret: 3.2.0
2023-12-09 06:17:23,123:INFO:             IPython: 8.15.0
2023-12-09 06:17:23,123:INFO:          ipywidgets: 7.6.5
2023-12-09 06:17:23,123:INFO:                tqdm: 4.64.1
2023-12-09 06:17:23,123:INFO:               numpy: 1.25.2
2023-12-09 06:17:23,127:INFO:              pandas: 1.5.3
2023-12-09 06:17:23,127:INFO:              jinja2: 3.1.2
2023-12-09 06:17:23,127:INFO:               scipy: 1.9.3
2023-12-09 06:17:23,127:INFO:              joblib: 1.2.0
2023-12-09 06:17:23,127:INFO:             sklearn: 1.2.2
2023-12-09 06:17:23,127:INFO:                pyod: 1.1.2
2023-12-09 06:17:23,127:INFO:            imblearn: 0.11.0
2023-12-09 06:17:23,127:INFO:   category_encoders: 2.6.3
2023-12-09 06:17:23,132:INFO:            lightgbm: 4.1.0
2023-12-09 06:17:23,132:INFO:               numba: 0.58.1
2023-12-09 06:17:23,132:INFO:            requests: 2.28.1
2023-12-09 06:17:23,132:INFO:          matplotlib: 3.6.2
2023-12-09 06:17:23,132:INFO:          scikitplot: 0.3.7
2023-12-09 06:17:23,132:INFO:         yellowbrick: 1.5
2023-12-09 06:17:23,132:INFO:              plotly: 5.18.0
2023-12-09 06:17:23,132:INFO:    plotly-resampler: Not installed
2023-12-09 06:17:23,132:INFO:             kaleido: 0.2.1
2023-12-09 06:17:23,132:INFO:           schemdraw: 0.15
2023-12-09 06:17:23,132:INFO:         statsmodels: 0.14.0
2023-12-09 06:17:23,132:INFO:              sktime: 0.21.1
2023-12-09 06:17:23,132:INFO:               tbats: 1.1.3
2023-12-09 06:17:23,132:INFO:            pmdarima: 2.0.4
2023-12-09 06:17:23,132:INFO:              psutil: 5.9.0
2023-12-09 06:17:23,132:INFO:          markupsafe: 2.1.1
2023-12-09 06:17:23,132:INFO:             pickle5: Not installed
2023-12-09 06:17:23,132:INFO:         cloudpickle: 3.0.0
2023-12-09 06:17:23,132:INFO:         deprecation: 2.1.0
2023-12-09 06:17:23,132:INFO:              xxhash: 3.4.1
2023-12-09 06:17:23,132:INFO:           wurlitzer: Not installed
2023-12-09 06:17:23,132:INFO:PyCaret optional dependencies:
2023-12-09 06:17:23,173:INFO:                shap: 0.43.0
2023-12-09 06:17:23,173:INFO:           interpret: 0.4.4
2023-12-09 06:17:23,173:INFO:                umap: 0.5.5
2023-12-09 06:17:23,173:INFO:     ydata_profiling: 4.6.2
2023-12-09 06:17:23,173:INFO:  explainerdashboard: 0.4.3
2023-12-09 06:17:23,173:INFO:             autoviz: Not installed
2023-12-09 06:17:23,173:INFO:           fairlearn: 0.7.0
2023-12-09 06:17:23,173:INFO:          deepchecks: Not installed
2023-12-09 06:17:23,173:INFO:             xgboost: Not installed
2023-12-09 06:17:23,173:INFO:            catboost: Not installed
2023-12-09 06:17:23,173:INFO:              kmodes: Not installed
2023-12-09 06:17:23,173:INFO:             mlxtend: Not installed
2023-12-09 06:17:23,178:INFO:       statsforecast: Not installed
2023-12-09 06:17:23,178:INFO:        tune_sklearn: Not installed
2023-12-09 06:17:23,178:INFO:                 ray: Not installed
2023-12-09 06:17:23,178:INFO:            hyperopt: Not installed
2023-12-09 06:17:23,178:INFO:              optuna: Not installed
2023-12-09 06:17:23,178:INFO:               skopt: Not installed
2023-12-09 06:17:23,178:INFO:              mlflow: Not installed
2023-12-09 06:17:23,178:INFO:              gradio: Not installed
2023-12-09 06:17:23,178:INFO:             fastapi: Not installed
2023-12-09 06:17:23,178:INFO:             uvicorn: Not installed
2023-12-09 06:17:23,178:INFO:              m2cgen: Not installed
2023-12-09 06:17:23,178:INFO:           evidently: Not installed
2023-12-09 06:17:23,178:INFO:               fugue: Not installed
2023-12-09 06:17:23,178:INFO:           streamlit: 1.26.0
2023-12-09 06:17:23,178:INFO:             prophet: Not installed
2023-12-09 06:17:23,178:INFO:None
2023-12-09 06:17:23,178:INFO:Set up data.
2023-12-09 06:17:23,296:INFO:Set up folding strategy.
2023-12-09 06:17:23,298:INFO:Set up train/test split.
2023-12-09 06:17:23,439:INFO:Set up index.
2023-12-09 06:17:23,439:INFO:Assigning column types.
2023-12-09 06:17:23,459:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-09 06:17:23,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-09 06:17:23,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:17:23,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:23,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:24,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-09 06:17:24,009:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:17:24,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:24,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:24,214:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-09 06:17:24,472:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:17:24,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:24,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:24,772:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:17:24,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:24,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:24,903:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-09 06:17:25,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:25,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:25,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:25,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:25,524:INFO:Preparing preprocessing pipeline...
2023-12-09 06:17:25,534:INFO:Set up label encoding.
2023-12-09 06:17:25,534:INFO:Set up simple imputation.
2023-12-09 06:17:25,559:INFO:Set up encoding of ordinal features.
2023-12-09 06:17:25,564:INFO:Set up encoding of categorical features.
2023-12-09 06:17:25,564:INFO:Set up imbalanced handling.
2023-12-09 06:17:25,564:INFO:Set up column transformation.
2023-12-09 06:17:25,572:INFO:Set up column name cleaning.
2023-12-09 06:17:26,634:INFO:Finished creating preprocessing pipeline.
2023-12-09 06:17:26,724:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-09 06:17:26,724:INFO:Creating final display dataframe.
2023-12-09 06:17:27,313:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               e7d0
2023-12-09 06:17:27,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:27,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:27,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:27,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:17:27,820:INFO:setup() successfully completed in 5.04s...............
2023-12-09 06:17:27,820:INFO:Initializing compare_models()
2023-12-09 06:17:27,820:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-09 06:17:27,820:INFO:Checking exceptions
2023-12-09 06:17:27,840:INFO:Preparing display monitor
2023-12-09 06:17:27,918:INFO:Initializing Logistic Regression
2023-12-09 06:17:27,918:INFO:Total runtime is 0.0 minutes
2023-12-09 06:17:27,928:INFO:SubProcess create_model() called ==================================
2023-12-09 06:17:27,930:INFO:Initializing create_model()
2023-12-09 06:17:27,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:17:27,930:INFO:Checking exceptions
2023-12-09 06:17:27,931:INFO:Importing libraries
2023-12-09 06:17:27,931:INFO:Copying training dataset
2023-12-09 06:17:27,968:INFO:Defining folds
2023-12-09 06:17:27,968:INFO:Declaring metric variables
2023-12-09 06:17:27,982:INFO:Importing untrained model
2023-12-09 06:17:27,991:INFO:Logistic Regression Imported successfully
2023-12-09 06:17:28,014:INFO:Starting cross validation
2023-12-09 06:17:28,019:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:17:58,253:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:17:58,265:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:17:58,303:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:17:58,359:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:17:58,848:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:58,850:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:58,862:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:58,892:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:58,964:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:58,969:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:58,982:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:59,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:59,078:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:59,088:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:59,093:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:17:59,121:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:10,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:18:10,859:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:10,949:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:11,043:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:11,186:INFO:Calculating mean and std
2023-12-09 06:18:11,190:INFO:Creating metrics dataframe
2023-12-09 06:18:11,202:INFO:Uploading results into container
2023-12-09 06:18:11,204:INFO:Uploading model into container now
2023-12-09 06:18:11,205:INFO:_master_model_container: 1
2023-12-09 06:18:11,205:INFO:_display_container: 2
2023-12-09 06:18:11,206:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-09 06:18:11,206:INFO:create_model() successfully completed......................................
2023-12-09 06:18:11,795:INFO:SubProcess create_model() end ==================================
2023-12-09 06:18:11,795:INFO:Creating metrics dataframe
2023-12-09 06:18:11,811:INFO:Initializing K Neighbors Classifier
2023-12-09 06:18:11,815:INFO:Total runtime is 0.7316129485766093 minutes
2023-12-09 06:18:11,823:INFO:SubProcess create_model() called ==================================
2023-12-09 06:18:11,824:INFO:Initializing create_model()
2023-12-09 06:18:11,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:18:11,825:INFO:Checking exceptions
2023-12-09 06:18:11,825:INFO:Importing libraries
2023-12-09 06:18:11,825:INFO:Copying training dataset
2023-12-09 06:18:11,859:INFO:Defining folds
2023-12-09 06:18:11,860:INFO:Declaring metric variables
2023-12-09 06:18:11,869:INFO:Importing untrained model
2023-12-09 06:18:11,879:INFO:K Neighbors Classifier Imported successfully
2023-12-09 06:18:11,898:INFO:Starting cross validation
2023-12-09 06:18:11,907:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:18:35,860:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:35,961:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:35,968:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:35,970:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,048:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,077:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,086:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,091:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,169:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,197:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:36,311:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:46,943:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:47,026:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:47,116:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:47,262:INFO:Calculating mean and std
2023-12-09 06:18:47,265:INFO:Creating metrics dataframe
2023-12-09 06:18:47,275:INFO:Uploading results into container
2023-12-09 06:18:47,276:INFO:Uploading model into container now
2023-12-09 06:18:47,277:INFO:_master_model_container: 2
2023-12-09 06:18:47,277:INFO:_display_container: 2
2023-12-09 06:18:47,278:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-09 06:18:47,278:INFO:create_model() successfully completed......................................
2023-12-09 06:18:47,565:INFO:SubProcess create_model() end ==================================
2023-12-09 06:18:47,566:INFO:Creating metrics dataframe
2023-12-09 06:18:47,584:INFO:Initializing Naive Bayes
2023-12-09 06:18:47,584:INFO:Total runtime is 1.3277633309364318 minutes
2023-12-09 06:18:47,592:INFO:SubProcess create_model() called ==================================
2023-12-09 06:18:47,592:INFO:Initializing create_model()
2023-12-09 06:18:47,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:18:47,592:INFO:Checking exceptions
2023-12-09 06:18:47,592:INFO:Importing libraries
2023-12-09 06:18:47,592:INFO:Copying training dataset
2023-12-09 06:18:47,618:INFO:Defining folds
2023-12-09 06:18:47,618:INFO:Declaring metric variables
2023-12-09 06:18:47,627:INFO:Importing untrained model
2023-12-09 06:18:47,635:INFO:Naive Bayes Imported successfully
2023-12-09 06:18:47,645:INFO:Starting cross validation
2023-12-09 06:18:47,650:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:18:55,385:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,511:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,653:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,708:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,735:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,804:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,852:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,860:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,921:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,976:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:18:55,986:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:00,627:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:00,707:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:00,774:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:00,865:INFO:Calculating mean and std
2023-12-09 06:19:00,865:INFO:Creating metrics dataframe
2023-12-09 06:19:00,872:INFO:Uploading results into container
2023-12-09 06:19:00,873:INFO:Uploading model into container now
2023-12-09 06:19:00,874:INFO:_master_model_container: 3
2023-12-09 06:19:00,874:INFO:_display_container: 2
2023-12-09 06:19:00,874:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-09 06:19:00,874:INFO:create_model() successfully completed......................................
2023-12-09 06:19:01,112:INFO:SubProcess create_model() end ==================================
2023-12-09 06:19:01,112:INFO:Creating metrics dataframe
2023-12-09 06:19:01,131:INFO:Initializing Decision Tree Classifier
2023-12-09 06:19:01,131:INFO:Total runtime is 1.5535489281018575 minutes
2023-12-09 06:19:01,142:INFO:SubProcess create_model() called ==================================
2023-12-09 06:19:01,143:INFO:Initializing create_model()
2023-12-09 06:19:01,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:19:01,143:INFO:Checking exceptions
2023-12-09 06:19:01,144:INFO:Importing libraries
2023-12-09 06:19:01,144:INFO:Copying training dataset
2023-12-09 06:19:01,170:INFO:Defining folds
2023-12-09 06:19:01,170:INFO:Declaring metric variables
2023-12-09 06:19:01,178:INFO:Importing untrained model
2023-12-09 06:19:01,187:INFO:Decision Tree Classifier Imported successfully
2023-12-09 06:19:01,203:INFO:Starting cross validation
2023-12-09 06:19:01,207:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:19:09,889:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:09,994:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,008:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,025:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,071:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,103:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,122:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,129:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,214:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,252:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,258:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:10,334:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:15,670:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:15,746:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:15,829:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:15,940:INFO:Calculating mean and std
2023-12-09 06:19:15,942:INFO:Creating metrics dataframe
2023-12-09 06:19:15,946:INFO:Uploading results into container
2023-12-09 06:19:15,951:INFO:Uploading model into container now
2023-12-09 06:19:15,951:INFO:_master_model_container: 4
2023-12-09 06:19:15,951:INFO:_display_container: 2
2023-12-09 06:19:15,953:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-09 06:19:15,953:INFO:create_model() successfully completed......................................
2023-12-09 06:19:16,255:INFO:SubProcess create_model() end ==================================
2023-12-09 06:19:16,255:INFO:Creating metrics dataframe
2023-12-09 06:19:16,275:INFO:Initializing SVM - Linear Kernel
2023-12-09 06:19:16,275:INFO:Total runtime is 1.8059455553690593 minutes
2023-12-09 06:19:16,284:INFO:SubProcess create_model() called ==================================
2023-12-09 06:19:16,284:INFO:Initializing create_model()
2023-12-09 06:19:16,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:19:16,287:INFO:Checking exceptions
2023-12-09 06:19:16,287:INFO:Importing libraries
2023-12-09 06:19:16,287:INFO:Copying training dataset
2023-12-09 06:19:16,309:INFO:Defining folds
2023-12-09 06:19:16,310:INFO:Declaring metric variables
2023-12-09 06:19:16,313:INFO:Importing untrained model
2023-12-09 06:19:16,326:INFO:SVM - Linear Kernel Imported successfully
2023-12-09 06:19:16,340:INFO:Starting cross validation
2023-12-09 06:19:16,346:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:19:28,669:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:19:28,696:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:19:28,709:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:28,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:28,808:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:28,837:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:28,960:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:28,985:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:29,436:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:19:29,507:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:29,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:19:29,636:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:29,671:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:29,755:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:29,796:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:29,918:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:36,941:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:19:36,982:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:37,079:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:37,168:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:37,298:INFO:Calculating mean and std
2023-12-09 06:19:37,301:INFO:Creating metrics dataframe
2023-12-09 06:19:37,309:INFO:Uploading results into container
2023-12-09 06:19:37,309:INFO:Uploading model into container now
2023-12-09 06:19:37,309:INFO:_master_model_container: 5
2023-12-09 06:19:37,309:INFO:_display_container: 2
2023-12-09 06:19:37,314:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-09 06:19:37,314:INFO:create_model() successfully completed......................................
2023-12-09 06:19:37,626:INFO:SubProcess create_model() end ==================================
2023-12-09 06:19:37,626:INFO:Creating metrics dataframe
2023-12-09 06:19:37,651:INFO:Initializing Ridge Classifier
2023-12-09 06:19:37,651:INFO:Total runtime is 2.1622155189514163 minutes
2023-12-09 06:19:37,663:INFO:SubProcess create_model() called ==================================
2023-12-09 06:19:37,663:INFO:Initializing create_model()
2023-12-09 06:19:37,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:19:37,664:INFO:Checking exceptions
2023-12-09 06:19:37,665:INFO:Importing libraries
2023-12-09 06:19:37,665:INFO:Copying training dataset
2023-12-09 06:19:37,694:INFO:Defining folds
2023-12-09 06:19:37,694:INFO:Declaring metric variables
2023-12-09 06:19:37,707:INFO:Importing untrained model
2023-12-09 06:19:37,714:INFO:Ridge Classifier Imported successfully
2023-12-09 06:19:37,731:INFO:Starting cross validation
2023-12-09 06:19:37,739:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:19:45,758:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:19:45,826:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:45,839:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:19:45,885:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:45,885:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:45,950:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,003:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,032:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,080:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:19:46,099:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,176:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,352:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:46,472:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:51,322:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:19:51,347:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:51,407:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:51,460:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:19:51,564:INFO:Calculating mean and std
2023-12-09 06:19:51,565:INFO:Creating metrics dataframe
2023-12-09 06:19:51,574:INFO:Uploading results into container
2023-12-09 06:19:51,575:INFO:Uploading model into container now
2023-12-09 06:19:51,576:INFO:_master_model_container: 6
2023-12-09 06:19:51,576:INFO:_display_container: 2
2023-12-09 06:19:51,577:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-09 06:19:51,577:INFO:create_model() successfully completed......................................
2023-12-09 06:19:51,844:INFO:SubProcess create_model() end ==================================
2023-12-09 06:19:51,844:INFO:Creating metrics dataframe
2023-12-09 06:19:51,862:INFO:Initializing Random Forest Classifier
2023-12-09 06:19:51,862:INFO:Total runtime is 2.3990607579549157 minutes
2023-12-09 06:19:51,865:INFO:SubProcess create_model() called ==================================
2023-12-09 06:19:51,865:INFO:Initializing create_model()
2023-12-09 06:19:51,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:19:51,865:INFO:Checking exceptions
2023-12-09 06:19:51,865:INFO:Importing libraries
2023-12-09 06:19:51,870:INFO:Copying training dataset
2023-12-09 06:19:51,892:INFO:Defining folds
2023-12-09 06:19:51,892:INFO:Declaring metric variables
2023-12-09 06:19:51,900:INFO:Importing untrained model
2023-12-09 06:19:51,907:INFO:Random Forest Classifier Imported successfully
2023-12-09 06:19:51,923:INFO:Starting cross validation
2023-12-09 06:19:51,929:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:20:15,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,095:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,310:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,320:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,345:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,420:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,429:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,468:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,621:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,770:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:15,908:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:16,006:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:25,068:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:25,221:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:25,310:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:25,430:INFO:Calculating mean and std
2023-12-09 06:20:25,437:INFO:Creating metrics dataframe
2023-12-09 06:20:25,453:INFO:Uploading results into container
2023-12-09 06:20:25,455:INFO:Uploading model into container now
2023-12-09 06:20:25,457:INFO:_master_model_container: 7
2023-12-09 06:20:25,457:INFO:_display_container: 2
2023-12-09 06:20:25,457:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-09 06:20:25,457:INFO:create_model() successfully completed......................................
2023-12-09 06:20:25,815:INFO:SubProcess create_model() end ==================================
2023-12-09 06:20:25,815:INFO:Creating metrics dataframe
2023-12-09 06:20:25,835:INFO:Initializing Quadratic Discriminant Analysis
2023-12-09 06:20:25,835:INFO:Total runtime is 2.9652756492296857 minutes
2023-12-09 06:20:25,847:INFO:SubProcess create_model() called ==================================
2023-12-09 06:20:25,847:INFO:Initializing create_model()
2023-12-09 06:20:25,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:20:25,847:INFO:Checking exceptions
2023-12-09 06:20:25,848:INFO:Importing libraries
2023-12-09 06:20:25,848:INFO:Copying training dataset
2023-12-09 06:20:25,886:INFO:Defining folds
2023-12-09 06:20:25,886:INFO:Declaring metric variables
2023-12-09 06:20:25,896:INFO:Importing untrained model
2023-12-09 06:20:25,907:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-09 06:20:25,922:INFO:Starting cross validation
2023-12-09 06:20:25,926:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:20:37,735:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:20:37,754:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:20:37,769:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:20:37,774:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:20:38,891:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:38,903:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:38,936:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:38,986:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,127:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,144:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,159:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,209:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,325:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,365:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,365:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:39,395:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:44,465:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:20:44,891:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:44,962:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:45,049:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:20:45,184:INFO:Calculating mean and std
2023-12-09 06:20:45,184:INFO:Creating metrics dataframe
2023-12-09 06:20:45,196:INFO:Uploading results into container
2023-12-09 06:20:45,200:INFO:Uploading model into container now
2023-12-09 06:20:45,200:INFO:_master_model_container: 8
2023-12-09 06:20:45,200:INFO:_display_container: 2
2023-12-09 06:20:45,202:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-09 06:20:45,202:INFO:create_model() successfully completed......................................
2023-12-09 06:20:45,465:INFO:SubProcess create_model() end ==================================
2023-12-09 06:20:45,470:INFO:Creating metrics dataframe
2023-12-09 06:20:45,487:INFO:Initializing Ada Boost Classifier
2023-12-09 06:20:45,487:INFO:Total runtime is 3.2928076068560284 minutes
2023-12-09 06:20:45,493:INFO:SubProcess create_model() called ==================================
2023-12-09 06:20:45,494:INFO:Initializing create_model()
2023-12-09 06:20:45,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:20:45,494:INFO:Checking exceptions
2023-12-09 06:20:45,495:INFO:Importing libraries
2023-12-09 06:20:45,495:INFO:Copying training dataset
2023-12-09 06:20:45,511:INFO:Defining folds
2023-12-09 06:20:45,511:INFO:Declaring metric variables
2023-12-09 06:20:45,522:INFO:Importing untrained model
2023-12-09 06:20:45,532:INFO:Ada Boost Classifier Imported successfully
2023-12-09 06:20:45,551:INFO:Starting cross validation
2023-12-09 06:20:45,560:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:21:04,175:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,216:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,329:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,445:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,466:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,487:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,555:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,574:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,679:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,713:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:04,842:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:13,561:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:13,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:13,699:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:13,816:INFO:Calculating mean and std
2023-12-09 06:21:13,818:INFO:Creating metrics dataframe
2023-12-09 06:21:13,826:INFO:Uploading results into container
2023-12-09 06:21:13,827:INFO:Uploading model into container now
2023-12-09 06:21:13,828:INFO:_master_model_container: 9
2023-12-09 06:21:13,829:INFO:_display_container: 2
2023-12-09 06:21:13,830:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-09 06:21:13,830:INFO:create_model() successfully completed......................................
2023-12-09 06:21:14,090:INFO:SubProcess create_model() end ==================================
2023-12-09 06:21:14,090:INFO:Creating metrics dataframe
2023-12-09 06:21:14,114:INFO:Initializing Gradient Boosting Classifier
2023-12-09 06:21:14,114:INFO:Total runtime is 3.769930962721507 minutes
2023-12-09 06:21:14,122:INFO:SubProcess create_model() called ==================================
2023-12-09 06:21:14,123:INFO:Initializing create_model()
2023-12-09 06:21:14,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:21:14,123:INFO:Checking exceptions
2023-12-09 06:21:14,123:INFO:Importing libraries
2023-12-09 06:21:14,124:INFO:Copying training dataset
2023-12-09 06:21:14,153:INFO:Defining folds
2023-12-09 06:21:14,154:INFO:Declaring metric variables
2023-12-09 06:21:14,165:INFO:Importing untrained model
2023-12-09 06:21:14,176:INFO:Gradient Boosting Classifier Imported successfully
2023-12-09 06:21:14,199:INFO:Starting cross validation
2023-12-09 06:21:14,207:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:21:54,339:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,418:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,504:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,523:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,572:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,625:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,662:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,675:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,713:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,845:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:21:54,968:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:20,178:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:20,275:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:20,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:20,505:INFO:Calculating mean and std
2023-12-09 06:22:20,508:INFO:Creating metrics dataframe
2023-12-09 06:22:20,517:INFO:Uploading results into container
2023-12-09 06:22:20,518:INFO:Uploading model into container now
2023-12-09 06:22:20,519:INFO:_master_model_container: 10
2023-12-09 06:22:20,519:INFO:_display_container: 2
2023-12-09 06:22:20,520:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-09 06:22:20,521:INFO:create_model() successfully completed......................................
2023-12-09 06:22:20,827:INFO:SubProcess create_model() end ==================================
2023-12-09 06:22:20,827:INFO:Creating metrics dataframe
2023-12-09 06:22:20,858:INFO:Initializing Linear Discriminant Analysis
2023-12-09 06:22:20,858:INFO:Total runtime is 4.88232684135437 minutes
2023-12-09 06:22:20,866:INFO:SubProcess create_model() called ==================================
2023-12-09 06:22:20,866:INFO:Initializing create_model()
2023-12-09 06:22:20,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:22:20,866:INFO:Checking exceptions
2023-12-09 06:22:20,866:INFO:Importing libraries
2023-12-09 06:22:20,866:INFO:Copying training dataset
2023-12-09 06:22:20,899:INFO:Defining folds
2023-12-09 06:22:20,900:INFO:Declaring metric variables
2023-12-09 06:22:20,913:INFO:Importing untrained model
2023-12-09 06:22:20,926:INFO:Linear Discriminant Analysis Imported successfully
2023-12-09 06:22:20,955:INFO:Starting cross validation
2023-12-09 06:22:20,967:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:22:31,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,189:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,202:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,282:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,347:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,355:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,363:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,399:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,458:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,460:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,480:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:31,511:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:37,463:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:37,561:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:37,660:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:22:37,795:INFO:Calculating mean and std
2023-12-09 06:22:37,797:INFO:Creating metrics dataframe
2023-12-09 06:22:37,804:INFO:Uploading results into container
2023-12-09 06:22:37,804:INFO:Uploading model into container now
2023-12-09 06:22:37,804:INFO:_master_model_container: 11
2023-12-09 06:22:37,809:INFO:_display_container: 2
2023-12-09 06:22:37,810:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-09 06:22:37,810:INFO:create_model() successfully completed......................................
2023-12-09 06:22:38,114:INFO:SubProcess create_model() end ==================================
2023-12-09 06:22:38,114:INFO:Creating metrics dataframe
2023-12-09 06:22:38,145:INFO:Initializing Extra Trees Classifier
2023-12-09 06:22:38,146:INFO:Total runtime is 5.170469148953756 minutes
2023-12-09 06:22:38,157:INFO:SubProcess create_model() called ==================================
2023-12-09 06:22:38,158:INFO:Initializing create_model()
2023-12-09 06:22:38,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:22:38,159:INFO:Checking exceptions
2023-12-09 06:22:38,159:INFO:Importing libraries
2023-12-09 06:22:38,159:INFO:Copying training dataset
2023-12-09 06:22:38,191:INFO:Defining folds
2023-12-09 06:22:38,191:INFO:Declaring metric variables
2023-12-09 06:22:38,204:INFO:Importing untrained model
2023-12-09 06:22:38,216:INFO:Extra Trees Classifier Imported successfully
2023-12-09 06:22:38,241:INFO:Starting cross validation
2023-12-09 06:22:38,251:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:23:05,724:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:05,834:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,094:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,105:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,436:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,446:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,491:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,623:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,652:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,808:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:06,809:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:16,707:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:16,811:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:16,916:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:17,062:INFO:Calculating mean and std
2023-12-09 06:23:17,064:INFO:Creating metrics dataframe
2023-12-09 06:23:17,074:INFO:Uploading results into container
2023-12-09 06:23:17,074:INFO:Uploading model into container now
2023-12-09 06:23:17,079:INFO:_master_model_container: 12
2023-12-09 06:23:17,079:INFO:_display_container: 2
2023-12-09 06:23:17,079:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-09 06:23:17,081:INFO:create_model() successfully completed......................................
2023-12-09 06:23:17,391:INFO:SubProcess create_model() end ==================================
2023-12-09 06:23:17,391:INFO:Creating metrics dataframe
2023-12-09 06:23:17,421:INFO:Initializing Light Gradient Boosting Machine
2023-12-09 06:23:17,422:INFO:Total runtime is 5.825068573156993 minutes
2023-12-09 06:23:17,429:INFO:SubProcess create_model() called ==================================
2023-12-09 06:23:17,431:INFO:Initializing create_model()
2023-12-09 06:23:17,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:23:17,432:INFO:Checking exceptions
2023-12-09 06:23:17,432:INFO:Importing libraries
2023-12-09 06:23:17,432:INFO:Copying training dataset
2023-12-09 06:23:17,458:INFO:Defining folds
2023-12-09 06:23:17,458:INFO:Declaring metric variables
2023-12-09 06:23:17,467:INFO:Importing untrained model
2023-12-09 06:23:17,478:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:23:17,500:INFO:Starting cross validation
2023-12-09 06:23:17,508:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:23:28,008:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,022:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,067:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,108:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,134:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,140:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,175:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,226:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,242:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,263:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:28,332:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:34,556:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:34,656:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:34,754:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:34,889:INFO:Calculating mean and std
2023-12-09 06:23:34,892:INFO:Creating metrics dataframe
2023-12-09 06:23:34,900:INFO:Uploading results into container
2023-12-09 06:23:34,901:INFO:Uploading model into container now
2023-12-09 06:23:34,902:INFO:_master_model_container: 13
2023-12-09 06:23:34,903:INFO:_display_container: 2
2023-12-09 06:23:34,904:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:23:34,905:INFO:create_model() successfully completed......................................
2023-12-09 06:23:35,199:INFO:SubProcess create_model() end ==================================
2023-12-09 06:23:35,200:INFO:Creating metrics dataframe
2023-12-09 06:23:35,232:INFO:Initializing Dummy Classifier
2023-12-09 06:23:35,232:INFO:Total runtime is 6.12189507484436 minutes
2023-12-09 06:23:35,240:INFO:SubProcess create_model() called ==================================
2023-12-09 06:23:35,241:INFO:Initializing create_model()
2023-12-09 06:23:35,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0AC0A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:23:35,241:INFO:Checking exceptions
2023-12-09 06:23:35,242:INFO:Importing libraries
2023-12-09 06:23:35,242:INFO:Copying training dataset
2023-12-09 06:23:35,275:INFO:Defining folds
2023-12-09 06:23:35,275:INFO:Declaring metric variables
2023-12-09 06:23:35,284:INFO:Importing untrained model
2023-12-09 06:23:35,296:INFO:Dummy Classifier Imported successfully
2023-12-09 06:23:35,324:INFO:Starting cross validation
2023-12-09 06:23:35,341:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:23:42,829:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:42,854:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:42,854:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:42,895:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:42,960:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:42,970:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:42,975:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:43,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:43,030:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:23:43,040:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:23:43,045:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:23:43,080:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:43,087:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:23:43,098:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:43,098:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:43,135:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:48,377:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:48,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:48,535:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:23:48,576:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:23:48,712:INFO:Calculating mean and std
2023-12-09 06:23:48,716:INFO:Creating metrics dataframe
2023-12-09 06:23:48,726:INFO:Uploading results into container
2023-12-09 06:23:48,728:INFO:Uploading model into container now
2023-12-09 06:23:48,728:INFO:_master_model_container: 14
2023-12-09 06:23:48,729:INFO:_display_container: 2
2023-12-09 06:23:48,729:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-09 06:23:48,729:INFO:create_model() successfully completed......................................
2023-12-09 06:23:49,024:INFO:SubProcess create_model() end ==================================
2023-12-09 06:23:49,024:INFO:Creating metrics dataframe
2023-12-09 06:23:49,084:INFO:Initializing create_model()
2023-12-09 06:23:49,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C75055070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:23:49,085:INFO:Checking exceptions
2023-12-09 06:23:49,089:INFO:Importing libraries
2023-12-09 06:23:49,090:INFO:Copying training dataset
2023-12-09 06:23:49,122:INFO:Defining folds
2023-12-09 06:23:49,122:INFO:Declaring metric variables
2023-12-09 06:23:49,122:INFO:Importing untrained model
2023-12-09 06:23:49,123:INFO:Declaring custom model
2023-12-09 06:23:49,126:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:23:49,133:INFO:Cross validation set to False
2023-12-09 06:23:49,133:INFO:Fitting Model
2023-12-09 06:23:55,728:INFO:[LightGBM] [Info] Number of positive: 20813, number of negative: 20813
2023-12-09 06:23:55,763:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.014304 seconds.
2023-12-09 06:23:55,763:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-09 06:23:55,763:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-09 06:23:55,763:INFO:[LightGBM] [Info] Total Bins 12135
2023-12-09 06:23:55,768:INFO:[LightGBM] [Info] Number of data points in the train set: 41626, number of used features: 64
2023-12-09 06:23:55,768:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-09 06:23:56,894:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:23:56,894:INFO:create_model() successfully completed......................................
2023-12-09 06:23:57,312:INFO:_master_model_container: 14
2023-12-09 06:23:57,312:INFO:_display_container: 2
2023-12-09 06:23:57,312:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:23:57,312:INFO:compare_models() successfully completed......................................
2023-12-09 06:23:57,441:INFO:PyCaret ClassificationExperiment
2023-12-09 06:23:57,441:INFO:Logging name: clf-default-name
2023-12-09 06:23:57,446:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-09 06:23:57,446:INFO:version 3.2.0
2023-12-09 06:23:57,446:INFO:Initializing setup()
2023-12-09 06:23:57,446:INFO:self.USI: e03b
2023-12-09 06:23:57,446:INFO:self._variable_keys: {'USI', 'X_test', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'gpu_param', '_ml_usecase', 'X', 'y_train', 'n_jobs_param', 'pipeline', 'memory', 'fold_shuffle_param', 'data', 'seed', 'idx', 'fold_generator', 'log_plots_param', 'target_param', 'y', '_available_plots', 'html_param', 'X_train', 'fix_imbalance', 'y_test', 'gpu_n_jobs_param', 'exp_id', 'logging_param'}
2023-12-09 06:23:57,446:INFO:Checking environment
2023-12-09 06:23:57,446:INFO:python_version: 3.9.18
2023-12-09 06:23:57,446:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-09 06:23:57,446:INFO:machine: AMD64
2023-12-09 06:23:57,446:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-09 06:23:57,446:INFO:Memory: svmem(total=7955767296, available=1461727232, percent=81.6, used=6494040064, free=1461727232)
2023-12-09 06:23:57,446:INFO:Physical Core: 2
2023-12-09 06:23:57,446:INFO:Logical Core: 4
2023-12-09 06:23:57,446:INFO:Checking libraries
2023-12-09 06:23:57,446:INFO:System:
2023-12-09 06:23:57,446:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-09 06:23:57,446:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-09 06:23:57,446:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-09 06:23:57,451:INFO:PyCaret required dependencies:
2023-12-09 06:23:57,451:INFO:                 pip: 23.3.1
2023-12-09 06:23:57,451:INFO:          setuptools: 68.0.0
2023-12-09 06:23:57,451:INFO:             pycaret: 3.2.0
2023-12-09 06:23:57,451:INFO:             IPython: 8.15.0
2023-12-09 06:23:57,451:INFO:          ipywidgets: 7.6.5
2023-12-09 06:23:57,451:INFO:                tqdm: 4.64.1
2023-12-09 06:23:57,451:INFO:               numpy: 1.25.2
2023-12-09 06:23:57,451:INFO:              pandas: 1.5.3
2023-12-09 06:23:57,451:INFO:              jinja2: 3.1.2
2023-12-09 06:23:57,451:INFO:               scipy: 1.9.3
2023-12-09 06:23:57,451:INFO:              joblib: 1.2.0
2023-12-09 06:23:57,451:INFO:             sklearn: 1.2.2
2023-12-09 06:23:57,451:INFO:                pyod: 1.1.2
2023-12-09 06:23:57,451:INFO:            imblearn: 0.11.0
2023-12-09 06:23:57,451:INFO:   category_encoders: 2.6.3
2023-12-09 06:23:57,451:INFO:            lightgbm: 4.1.0
2023-12-09 06:23:57,451:INFO:               numba: 0.58.1
2023-12-09 06:23:57,451:INFO:            requests: 2.28.1
2023-12-09 06:23:57,451:INFO:          matplotlib: 3.6.2
2023-12-09 06:23:57,451:INFO:          scikitplot: 0.3.7
2023-12-09 06:23:57,451:INFO:         yellowbrick: 1.5
2023-12-09 06:23:57,451:INFO:              plotly: 5.18.0
2023-12-09 06:23:57,451:INFO:    plotly-resampler: Not installed
2023-12-09 06:23:57,451:INFO:             kaleido: 0.2.1
2023-12-09 06:23:57,451:INFO:           schemdraw: 0.15
2023-12-09 06:23:57,451:INFO:         statsmodels: 0.14.0
2023-12-09 06:23:57,451:INFO:              sktime: 0.21.1
2023-12-09 06:23:57,456:INFO:               tbats: 1.1.3
2023-12-09 06:23:57,456:INFO:            pmdarima: 2.0.4
2023-12-09 06:23:57,456:INFO:              psutil: 5.9.0
2023-12-09 06:23:57,456:INFO:          markupsafe: 2.1.1
2023-12-09 06:23:57,456:INFO:             pickle5: Not installed
2023-12-09 06:23:57,456:INFO:         cloudpickle: 3.0.0
2023-12-09 06:23:57,456:INFO:         deprecation: 2.1.0
2023-12-09 06:23:57,456:INFO:              xxhash: 3.4.1
2023-12-09 06:23:57,456:INFO:           wurlitzer: Not installed
2023-12-09 06:23:57,456:INFO:PyCaret optional dependencies:
2023-12-09 06:23:57,459:INFO:                shap: 0.43.0
2023-12-09 06:23:57,459:INFO:           interpret: 0.4.4
2023-12-09 06:23:57,459:INFO:                umap: 0.5.5
2023-12-09 06:23:57,459:INFO:     ydata_profiling: 4.6.2
2023-12-09 06:23:57,459:INFO:  explainerdashboard: 0.4.3
2023-12-09 06:23:57,459:INFO:             autoviz: Not installed
2023-12-09 06:23:57,459:INFO:           fairlearn: 0.7.0
2023-12-09 06:23:57,459:INFO:          deepchecks: Not installed
2023-12-09 06:23:57,459:INFO:             xgboost: Not installed
2023-12-09 06:23:57,459:INFO:            catboost: Not installed
2023-12-09 06:23:57,461:INFO:              kmodes: Not installed
2023-12-09 06:23:57,461:INFO:             mlxtend: Not installed
2023-12-09 06:23:57,461:INFO:       statsforecast: Not installed
2023-12-09 06:23:57,461:INFO:        tune_sklearn: Not installed
2023-12-09 06:23:57,461:INFO:                 ray: Not installed
2023-12-09 06:23:57,461:INFO:            hyperopt: Not installed
2023-12-09 06:23:57,461:INFO:              optuna: Not installed
2023-12-09 06:23:57,461:INFO:               skopt: Not installed
2023-12-09 06:23:57,461:INFO:              mlflow: Not installed
2023-12-09 06:23:57,461:INFO:              gradio: Not installed
2023-12-09 06:23:57,461:INFO:             fastapi: Not installed
2023-12-09 06:23:57,461:INFO:             uvicorn: Not installed
2023-12-09 06:23:57,461:INFO:              m2cgen: Not installed
2023-12-09 06:23:57,461:INFO:           evidently: Not installed
2023-12-09 06:23:57,461:INFO:               fugue: Not installed
2023-12-09 06:23:57,461:INFO:           streamlit: 1.26.0
2023-12-09 06:23:57,461:INFO:             prophet: Not installed
2023-12-09 06:23:57,461:INFO:None
2023-12-09 06:23:57,461:INFO:Set up data.
2023-12-09 06:23:57,575:INFO:Set up folding strategy.
2023-12-09 06:23:57,575:INFO:Set up train/test split.
2023-12-09 06:23:57,661:INFO:Set up index.
2023-12-09 06:23:57,666:INFO:Assigning column types.
2023-12-09 06:23:57,676:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-09 06:23:57,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-09 06:23:57,813:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:23:57,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:57,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-09 06:23:58,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:23:58,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,144:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-09 06:23:58,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:23:58,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:23:58,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,743:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-09 06:23:58,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:58,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:59,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:59,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:23:59,195:INFO:Preparing preprocessing pipeline...
2023-12-09 06:23:59,199:INFO:Set up label encoding.
2023-12-09 06:23:59,199:INFO:Set up simple imputation.
2023-12-09 06:23:59,219:INFO:Set up encoding of ordinal features.
2023-12-09 06:23:59,264:INFO:Set up encoding of categorical features.
2023-12-09 06:23:59,264:INFO:Set up imbalanced handling.
2023-12-09 06:23:59,264:INFO:Set up column transformation.
2023-12-09 06:23:59,269:INFO:Set up column name cleaning.
2023-12-09 06:24:00,285:INFO:Finished creating preprocessing pipeline.
2023-12-09 06:24:00,362:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-09 06:24:00,362:INFO:Creating final display dataframe.
2023-12-09 06:24:00,914:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53348, 67)
6   Transformed train set shape        (41626, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation             median
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method    borderlinesmote
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               e03b
2023-12-09 06:24:01,178:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:24:01,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:24:01,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:24:01,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:24:01,401:INFO:setup() successfully completed in 4.09s...............
2023-12-09 06:24:01,401:INFO:Initializing compare_models()
2023-12-09 06:24:01,401:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-09 06:24:01,401:INFO:Checking exceptions
2023-12-09 06:24:01,419:INFO:Preparing display monitor
2023-12-09 06:24:01,496:INFO:Initializing Logistic Regression
2023-12-09 06:24:01,497:INFO:Total runtime is 1.663366953531901e-05 minutes
2023-12-09 06:24:01,506:INFO:SubProcess create_model() called ==================================
2023-12-09 06:24:01,507:INFO:Initializing create_model()
2023-12-09 06:24:01,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:24:01,509:INFO:Checking exceptions
2023-12-09 06:24:01,509:INFO:Importing libraries
2023-12-09 06:24:01,509:INFO:Copying training dataset
2023-12-09 06:24:01,562:INFO:Defining folds
2023-12-09 06:24:01,562:INFO:Declaring metric variables
2023-12-09 06:24:01,578:INFO:Importing untrained model
2023-12-09 06:24:01,600:INFO:Logistic Regression Imported successfully
2023-12-09 06:24:01,625:INFO:Starting cross validation
2023-12-09 06:24:01,633:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:24:22,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:24:22,354:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:24:22,450:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:24:22,508:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:24:22,978:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,041:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,134:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,134:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,230:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,308:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,358:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,373:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,431:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:23,489:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:33,806:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:24:34,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:34,340:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:34,445:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:34,595:INFO:Calculating mean and std
2023-12-09 06:24:34,597:INFO:Creating metrics dataframe
2023-12-09 06:24:34,610:INFO:Uploading results into container
2023-12-09 06:24:34,611:INFO:Uploading model into container now
2023-12-09 06:24:34,612:INFO:_master_model_container: 1
2023-12-09 06:24:34,613:INFO:_display_container: 2
2023-12-09 06:24:34,614:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-09 06:24:34,614:INFO:create_model() successfully completed......................................
2023-12-09 06:24:34,915:INFO:SubProcess create_model() end ==================================
2023-12-09 06:24:34,915:INFO:Creating metrics dataframe
2023-12-09 06:24:34,937:INFO:Initializing K Neighbors Classifier
2023-12-09 06:24:34,937:INFO:Total runtime is 0.5573611378669738 minutes
2023-12-09 06:24:34,945:INFO:SubProcess create_model() called ==================================
2023-12-09 06:24:34,945:INFO:Initializing create_model()
2023-12-09 06:24:34,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:24:34,945:INFO:Checking exceptions
2023-12-09 06:24:34,945:INFO:Importing libraries
2023-12-09 06:24:34,945:INFO:Copying training dataset
2023-12-09 06:24:34,982:INFO:Defining folds
2023-12-09 06:24:34,983:INFO:Declaring metric variables
2023-12-09 06:24:34,992:INFO:Importing untrained model
2023-12-09 06:24:35,006:INFO:K Neighbors Classifier Imported successfully
2023-12-09 06:24:35,039:INFO:Starting cross validation
2023-12-09 06:24:35,048:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:24:50,801:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,021:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,105:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,211:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,259:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,281:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,384:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,416:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,442:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,566:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:51,566:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:57,199:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:57,299:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:57,396:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:24:57,523:INFO:Calculating mean and std
2023-12-09 06:24:57,523:INFO:Creating metrics dataframe
2023-12-09 06:24:57,533:INFO:Uploading results into container
2023-12-09 06:24:57,533:INFO:Uploading model into container now
2023-12-09 06:24:57,533:INFO:_master_model_container: 2
2023-12-09 06:24:57,533:INFO:_display_container: 2
2023-12-09 06:24:57,536:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-09 06:24:57,537:INFO:create_model() successfully completed......................................
2023-12-09 06:24:57,815:INFO:SubProcess create_model() end ==================================
2023-12-09 06:24:57,816:INFO:Creating metrics dataframe
2023-12-09 06:24:57,839:INFO:Initializing Naive Bayes
2023-12-09 06:24:57,839:INFO:Total runtime is 0.9390483419100444 minutes
2023-12-09 06:24:57,846:INFO:SubProcess create_model() called ==================================
2023-12-09 06:24:57,846:INFO:Initializing create_model()
2023-12-09 06:24:57,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:24:57,846:INFO:Checking exceptions
2023-12-09 06:24:57,846:INFO:Importing libraries
2023-12-09 06:24:57,846:INFO:Copying training dataset
2023-12-09 06:24:57,880:INFO:Defining folds
2023-12-09 06:24:57,880:INFO:Declaring metric variables
2023-12-09 06:24:57,895:INFO:Importing untrained model
2023-12-09 06:24:57,903:INFO:Naive Bayes Imported successfully
2023-12-09 06:24:57,932:INFO:Starting cross validation
2023-12-09 06:24:57,941:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:25:04,595:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,666:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,761:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,786:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,842:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,847:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,882:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,902:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,962:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:04,962:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:05,025:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:08,818:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:08,935:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:09,046:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:09,159:INFO:Calculating mean and std
2023-12-09 06:25:09,161:INFO:Creating metrics dataframe
2023-12-09 06:25:09,169:INFO:Uploading results into container
2023-12-09 06:25:09,170:INFO:Uploading model into container now
2023-12-09 06:25:09,171:INFO:_master_model_container: 3
2023-12-09 06:25:09,171:INFO:_display_container: 2
2023-12-09 06:25:09,173:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-09 06:25:09,173:INFO:create_model() successfully completed......................................
2023-12-09 06:25:09,484:INFO:SubProcess create_model() end ==================================
2023-12-09 06:25:09,484:INFO:Creating metrics dataframe
2023-12-09 06:25:09,506:INFO:Initializing Decision Tree Classifier
2023-12-09 06:25:09,506:INFO:Total runtime is 1.133500365416209 minutes
2023-12-09 06:25:09,515:INFO:SubProcess create_model() called ==================================
2023-12-09 06:25:09,516:INFO:Initializing create_model()
2023-12-09 06:25:09,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:25:09,517:INFO:Checking exceptions
2023-12-09 06:25:09,517:INFO:Importing libraries
2023-12-09 06:25:09,517:INFO:Copying training dataset
2023-12-09 06:25:09,549:INFO:Defining folds
2023-12-09 06:25:09,550:INFO:Declaring metric variables
2023-12-09 06:25:09,558:INFO:Importing untrained model
2023-12-09 06:25:09,567:INFO:Decision Tree Classifier Imported successfully
2023-12-09 06:25:09,598:INFO:Starting cross validation
2023-12-09 06:25:09,608:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:25:17,789:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:17,844:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:17,919:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:17,939:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:17,944:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:17,977:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:18,091:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:18,096:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:18,106:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:18,126:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:18,213:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:18,221:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:22,387:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:22,491:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:22,594:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:22,737:INFO:Calculating mean and std
2023-12-09 06:25:22,739:INFO:Creating metrics dataframe
2023-12-09 06:25:22,745:INFO:Uploading results into container
2023-12-09 06:25:22,745:INFO:Uploading model into container now
2023-12-09 06:25:22,749:INFO:_master_model_container: 4
2023-12-09 06:25:22,749:INFO:_display_container: 2
2023-12-09 06:25:22,749:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-09 06:25:22,751:INFO:create_model() successfully completed......................................
2023-12-09 06:25:23,054:INFO:SubProcess create_model() end ==================================
2023-12-09 06:25:23,055:INFO:Creating metrics dataframe
2023-12-09 06:25:23,081:INFO:Initializing SVM - Linear Kernel
2023-12-09 06:25:23,081:INFO:Total runtime is 1.3597570379575095 minutes
2023-12-09 06:25:23,089:INFO:SubProcess create_model() called ==================================
2023-12-09 06:25:23,091:INFO:Initializing create_model()
2023-12-09 06:25:23,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:25:23,091:INFO:Checking exceptions
2023-12-09 06:25:23,091:INFO:Importing libraries
2023-12-09 06:25:23,091:INFO:Copying training dataset
2023-12-09 06:25:23,124:INFO:Defining folds
2023-12-09 06:25:23,124:INFO:Declaring metric variables
2023-12-09 06:25:23,134:INFO:Importing untrained model
2023-12-09 06:25:23,144:INFO:SVM - Linear Kernel Imported successfully
2023-12-09 06:25:23,173:INFO:Starting cross validation
2023-12-09 06:25:23,184:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:25:32,257:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:25:32,303:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:32,403:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:32,494:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,155:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:25:33,202:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,296:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:25:33,322:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,335:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:25:33,344:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,396:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,436:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,456:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,520:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,569:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:33,658:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:37,981:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:25:38,021:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:38,125:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:38,226:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:38,370:INFO:Calculating mean and std
2023-12-09 06:25:38,372:INFO:Creating metrics dataframe
2023-12-09 06:25:38,380:INFO:Uploading results into container
2023-12-09 06:25:38,382:INFO:Uploading model into container now
2023-12-09 06:25:38,383:INFO:_master_model_container: 5
2023-12-09 06:25:38,384:INFO:_display_container: 2
2023-12-09 06:25:38,386:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-09 06:25:38,386:INFO:create_model() successfully completed......................................
2023-12-09 06:25:38,683:INFO:SubProcess create_model() end ==================================
2023-12-09 06:25:38,683:INFO:Creating metrics dataframe
2023-12-09 06:25:38,711:INFO:Initializing Ridge Classifier
2023-12-09 06:25:38,711:INFO:Total runtime is 1.6202575325965882 minutes
2023-12-09 06:25:38,719:INFO:SubProcess create_model() called ==================================
2023-12-09 06:25:38,719:INFO:Initializing create_model()
2023-12-09 06:25:38,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:25:38,720:INFO:Checking exceptions
2023-12-09 06:25:38,720:INFO:Importing libraries
2023-12-09 06:25:38,721:INFO:Copying training dataset
2023-12-09 06:25:38,753:INFO:Defining folds
2023-12-09 06:25:38,753:INFO:Declaring metric variables
2023-12-09 06:25:38,763:INFO:Importing untrained model
2023-12-09 06:25:38,776:INFO:Ridge Classifier Imported successfully
2023-12-09 06:25:38,798:INFO:Starting cross validation
2023-12-09 06:25:38,809:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:25:46,109:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:25:46,160:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,170:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:25:46,180:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:25:46,190:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:25:46,223:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,233:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,242:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,326:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,356:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,369:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,376:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,443:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,488:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:46,508:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:49,741:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:25:49,782:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:49,878:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:49,967:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:25:50,099:INFO:Calculating mean and std
2023-12-09 06:25:50,101:INFO:Creating metrics dataframe
2023-12-09 06:25:50,109:INFO:Uploading results into container
2023-12-09 06:25:50,110:INFO:Uploading model into container now
2023-12-09 06:25:50,110:INFO:_master_model_container: 6
2023-12-09 06:25:50,111:INFO:_display_container: 2
2023-12-09 06:25:50,112:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-09 06:25:50,112:INFO:create_model() successfully completed......................................
2023-12-09 06:25:50,396:INFO:SubProcess create_model() end ==================================
2023-12-09 06:25:50,396:INFO:Creating metrics dataframe
2023-12-09 06:25:50,420:INFO:Initializing Random Forest Classifier
2023-12-09 06:25:50,420:INFO:Total runtime is 1.815408996740977 minutes
2023-12-09 06:25:50,428:INFO:SubProcess create_model() called ==================================
2023-12-09 06:25:50,428:INFO:Initializing create_model()
2023-12-09 06:25:50,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:25:50,428:INFO:Checking exceptions
2023-12-09 06:25:50,428:INFO:Importing libraries
2023-12-09 06:25:50,428:INFO:Copying training dataset
2023-12-09 06:25:50,459:INFO:Defining folds
2023-12-09 06:25:50,459:INFO:Declaring metric variables
2023-12-09 06:25:50,479:INFO:Importing untrained model
2023-12-09 06:25:50,491:INFO:Random Forest Classifier Imported successfully
2023-12-09 06:25:50,516:INFO:Starting cross validation
2023-12-09 06:25:50,524:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:26:13,569:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:13,569:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:13,719:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:13,743:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:13,852:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:13,898:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:14,366:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:14,430:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:14,479:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:14,547:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:14,618:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:14,670:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:22,179:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:22,271:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:22,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:22,495:INFO:Calculating mean and std
2023-12-09 06:26:22,498:INFO:Creating metrics dataframe
2023-12-09 06:26:22,508:INFO:Uploading results into container
2023-12-09 06:26:22,511:INFO:Uploading model into container now
2023-12-09 06:26:22,513:INFO:_master_model_container: 7
2023-12-09 06:26:22,513:INFO:_display_container: 2
2023-12-09 06:26:22,515:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-09 06:26:22,515:INFO:create_model() successfully completed......................................
2023-12-09 06:26:22,818:INFO:SubProcess create_model() end ==================================
2023-12-09 06:26:22,818:INFO:Creating metrics dataframe
2023-12-09 06:26:22,844:INFO:Initializing Quadratic Discriminant Analysis
2023-12-09 06:26:22,844:INFO:Total runtime is 2.3558016459147133 minutes
2023-12-09 06:26:22,854:INFO:SubProcess create_model() called ==================================
2023-12-09 06:26:22,855:INFO:Initializing create_model()
2023-12-09 06:26:22,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:26:22,855:INFO:Checking exceptions
2023-12-09 06:26:22,856:INFO:Importing libraries
2023-12-09 06:26:22,856:INFO:Copying training dataset
2023-12-09 06:26:22,888:INFO:Defining folds
2023-12-09 06:26:22,889:INFO:Declaring metric variables
2023-12-09 06:26:22,900:INFO:Importing untrained model
2023-12-09 06:26:22,948:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-09 06:26:22,974:INFO:Starting cross validation
2023-12-09 06:26:22,982:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:26:30,138:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:26:30,221:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:26:30,376:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:26:30,531:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:26:31,231:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,291:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,382:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,392:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,446:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,525:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,550:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,580:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,619:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,723:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,742:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:31,866:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:34,690:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:26:35,234:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:35,332:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:35,427:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:35,560:INFO:Calculating mean and std
2023-12-09 06:26:35,561:INFO:Creating metrics dataframe
2023-12-09 06:26:35,567:INFO:Uploading results into container
2023-12-09 06:26:35,567:INFO:Uploading model into container now
2023-12-09 06:26:35,572:INFO:_master_model_container: 8
2023-12-09 06:26:35,572:INFO:_display_container: 2
2023-12-09 06:26:35,572:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-09 06:26:35,572:INFO:create_model() successfully completed......................................
2023-12-09 06:26:35,869:INFO:SubProcess create_model() end ==================================
2023-12-09 06:26:35,869:INFO:Creating metrics dataframe
2023-12-09 06:26:35,898:INFO:Initializing Ada Boost Classifier
2023-12-09 06:26:35,899:INFO:Total runtime is 2.5733870903650917 minutes
2023-12-09 06:26:35,907:INFO:SubProcess create_model() called ==================================
2023-12-09 06:26:35,908:INFO:Initializing create_model()
2023-12-09 06:26:35,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:26:35,908:INFO:Checking exceptions
2023-12-09 06:26:35,908:INFO:Importing libraries
2023-12-09 06:26:35,908:INFO:Copying training dataset
2023-12-09 06:26:35,938:INFO:Defining folds
2023-12-09 06:26:35,938:INFO:Declaring metric variables
2023-12-09 06:26:35,950:INFO:Importing untrained model
2023-12-09 06:26:35,962:INFO:Ada Boost Classifier Imported successfully
2023-12-09 06:26:35,985:INFO:Starting cross validation
2023-12-09 06:26:35,994:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:26:51,864:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:51,896:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:51,965:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,008:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,022:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,031:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,133:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,176:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,181:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,259:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:26:52,277:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:02,062:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:02,160:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:02,255:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:02,387:INFO:Calculating mean and std
2023-12-09 06:27:02,389:INFO:Creating metrics dataframe
2023-12-09 06:27:02,397:INFO:Uploading results into container
2023-12-09 06:27:02,398:INFO:Uploading model into container now
2023-12-09 06:27:02,398:INFO:_master_model_container: 9
2023-12-09 06:27:02,399:INFO:_display_container: 2
2023-12-09 06:27:02,399:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-09 06:27:02,401:INFO:create_model() successfully completed......................................
2023-12-09 06:27:02,690:INFO:SubProcess create_model() end ==================================
2023-12-09 06:27:02,690:INFO:Creating metrics dataframe
2023-12-09 06:27:02,716:INFO:Initializing Gradient Boosting Classifier
2023-12-09 06:27:02,717:INFO:Total runtime is 3.020359110832214 minutes
2023-12-09 06:27:02,725:INFO:SubProcess create_model() called ==================================
2023-12-09 06:27:02,725:INFO:Initializing create_model()
2023-12-09 06:27:02,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:27:02,727:INFO:Checking exceptions
2023-12-09 06:27:02,728:INFO:Importing libraries
2023-12-09 06:27:02,728:INFO:Copying training dataset
2023-12-09 06:27:02,760:INFO:Defining folds
2023-12-09 06:27:02,760:INFO:Declaring metric variables
2023-12-09 06:27:02,779:INFO:Importing untrained model
2023-12-09 06:27:02,793:INFO:Gradient Boosting Classifier Imported successfully
2023-12-09 06:27:02,815:INFO:Starting cross validation
2023-12-09 06:27:02,825:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:27:39,326:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,464:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,473:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,474:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,520:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,577:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,581:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,596:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,636:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,701:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,719:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:27:39,753:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:05,399:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:05,465:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:05,535:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:05,620:INFO:Calculating mean and std
2023-12-09 06:28:05,622:INFO:Creating metrics dataframe
2023-12-09 06:28:05,626:INFO:Uploading results into container
2023-12-09 06:28:05,626:INFO:Uploading model into container now
2023-12-09 06:28:05,626:INFO:_master_model_container: 10
2023-12-09 06:28:05,626:INFO:_display_container: 2
2023-12-09 06:28:05,632:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-09 06:28:05,632:INFO:create_model() successfully completed......................................
2023-12-09 06:28:05,870:INFO:SubProcess create_model() end ==================================
2023-12-09 06:28:05,870:INFO:Creating metrics dataframe
2023-12-09 06:28:05,884:INFO:Initializing Linear Discriminant Analysis
2023-12-09 06:28:05,884:INFO:Total runtime is 4.073132900396983 minutes
2023-12-09 06:28:05,886:INFO:SubProcess create_model() called ==================================
2023-12-09 06:28:05,886:INFO:Initializing create_model()
2023-12-09 06:28:05,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:28:05,886:INFO:Checking exceptions
2023-12-09 06:28:05,886:INFO:Importing libraries
2023-12-09 06:28:05,886:INFO:Copying training dataset
2023-12-09 06:28:05,911:INFO:Defining folds
2023-12-09 06:28:05,911:INFO:Declaring metric variables
2023-12-09 06:28:05,919:INFO:Importing untrained model
2023-12-09 06:28:05,929:INFO:Linear Discriminant Analysis Imported successfully
2023-12-09 06:28:05,948:INFO:Starting cross validation
2023-12-09 06:28:05,955:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:28:13,731:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,801:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,832:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,842:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,857:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,927:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,950:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,962:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:13,975:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:14,048:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:14,068:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:14,086:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:17,002:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:17,050:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:17,095:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:17,164:INFO:Calculating mean and std
2023-12-09 06:28:17,166:INFO:Creating metrics dataframe
2023-12-09 06:28:17,171:INFO:Uploading results into container
2023-12-09 06:28:17,171:INFO:Uploading model into container now
2023-12-09 06:28:17,171:INFO:_master_model_container: 11
2023-12-09 06:28:17,171:INFO:_display_container: 2
2023-12-09 06:28:17,174:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-09 06:28:17,175:INFO:create_model() successfully completed......................................
2023-12-09 06:28:17,388:INFO:SubProcess create_model() end ==================================
2023-12-09 06:28:17,388:INFO:Creating metrics dataframe
2023-12-09 06:28:17,404:INFO:Initializing Extra Trees Classifier
2023-12-09 06:28:17,404:INFO:Total runtime is 4.265144268671672 minutes
2023-12-09 06:28:17,408:INFO:SubProcess create_model() called ==================================
2023-12-09 06:28:17,409:INFO:Initializing create_model()
2023-12-09 06:28:17,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:28:17,410:INFO:Checking exceptions
2023-12-09 06:28:17,410:INFO:Importing libraries
2023-12-09 06:28:17,410:INFO:Copying training dataset
2023-12-09 06:28:17,425:INFO:Defining folds
2023-12-09 06:28:17,425:INFO:Declaring metric variables
2023-12-09 06:28:17,431:INFO:Importing untrained model
2023-12-09 06:28:17,441:INFO:Extra Trees Classifier Imported successfully
2023-12-09 06:28:17,453:INFO:Starting cross validation
2023-12-09 06:28:17,463:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:28:39,563:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:39,748:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:39,793:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:39,890:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:39,957:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:39,990:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:40,019:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:40,073:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:40,147:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:40,363:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:40,485:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:40,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:46,520:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:46,584:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:46,639:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:46,709:INFO:Calculating mean and std
2023-12-09 06:28:46,709:INFO:Creating metrics dataframe
2023-12-09 06:28:46,720:INFO:Uploading results into container
2023-12-09 06:28:46,722:INFO:Uploading model into container now
2023-12-09 06:28:46,724:INFO:_master_model_container: 12
2023-12-09 06:28:46,724:INFO:_display_container: 2
2023-12-09 06:28:46,724:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-09 06:28:46,724:INFO:create_model() successfully completed......................................
2023-12-09 06:28:46,953:INFO:SubProcess create_model() end ==================================
2023-12-09 06:28:46,954:INFO:Creating metrics dataframe
2023-12-09 06:28:46,971:INFO:Initializing Light Gradient Boosting Machine
2023-12-09 06:28:46,971:INFO:Total runtime is 4.757929130395254 minutes
2023-12-09 06:28:46,975:INFO:SubProcess create_model() called ==================================
2023-12-09 06:28:46,975:INFO:Initializing create_model()
2023-12-09 06:28:46,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:28:46,976:INFO:Checking exceptions
2023-12-09 06:28:46,976:INFO:Importing libraries
2023-12-09 06:28:46,976:INFO:Copying training dataset
2023-12-09 06:28:47,000:INFO:Defining folds
2023-12-09 06:28:47,000:INFO:Declaring metric variables
2023-12-09 06:28:47,008:INFO:Importing untrained model
2023-12-09 06:28:47,015:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:28:47,043:INFO:Starting cross validation
2023-12-09 06:28:47,050:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:28:57,846:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:57,883:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:57,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:57,962:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,014:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,018:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,084:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,121:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,125:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,126:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:28:58,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:02,689:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:02,796:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:02,886:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:02,988:INFO:Calculating mean and std
2023-12-09 06:29:02,988:INFO:Creating metrics dataframe
2023-12-09 06:29:02,996:INFO:Uploading results into container
2023-12-09 06:29:02,997:INFO:Uploading model into container now
2023-12-09 06:29:02,998:INFO:_master_model_container: 13
2023-12-09 06:29:02,998:INFO:_display_container: 2
2023-12-09 06:29:02,999:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:29:03,001:INFO:create_model() successfully completed......................................
2023-12-09 06:29:03,271:INFO:SubProcess create_model() end ==================================
2023-12-09 06:29:03,272:INFO:Creating metrics dataframe
2023-12-09 06:29:03,301:INFO:Initializing Dummy Classifier
2023-12-09 06:29:03,301:INFO:Total runtime is 5.0300922870635985 minutes
2023-12-09 06:29:03,309:INFO:SubProcess create_model() called ==================================
2023-12-09 06:29:03,310:INFO:Initializing create_model()
2023-12-09 06:29:03,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A131DF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:29:03,311:INFO:Checking exceptions
2023-12-09 06:29:03,311:INFO:Importing libraries
2023-12-09 06:29:03,311:INFO:Copying training dataset
2023-12-09 06:29:03,334:INFO:Defining folds
2023-12-09 06:29:03,334:INFO:Declaring metric variables
2023-12-09 06:29:03,346:INFO:Importing untrained model
2023-12-09 06:29:03,355:INFO:Dummy Classifier Imported successfully
2023-12-09 06:29:03,389:INFO:Starting cross validation
2023-12-09 06:29:03,398:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:29:10,522:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,563:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,644:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,684:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,714:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,724:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,793:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:29:10,808:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:29:10,818:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,848:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,853:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,874:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:10,912:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:29:10,947:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:29:10,971:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:11,008:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:14,141:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:14,218:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:14,254:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:29:14,277:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:14,363:INFO:Calculating mean and std
2023-12-09 06:29:14,365:INFO:Creating metrics dataframe
2023-12-09 06:29:14,370:INFO:Uploading results into container
2023-12-09 06:29:14,370:INFO:Uploading model into container now
2023-12-09 06:29:14,370:INFO:_master_model_container: 14
2023-12-09 06:29:14,370:INFO:_display_container: 2
2023-12-09 06:29:14,374:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-09 06:29:14,374:INFO:create_model() successfully completed......................................
2023-12-09 06:29:14,670:INFO:SubProcess create_model() end ==================================
2023-12-09 06:29:14,670:INFO:Creating metrics dataframe
2023-12-09 06:29:14,726:INFO:Initializing create_model()
2023-12-09 06:29:14,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0C0779D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:29:14,726:INFO:Checking exceptions
2023-12-09 06:29:14,731:INFO:Importing libraries
2023-12-09 06:29:14,732:INFO:Copying training dataset
2023-12-09 06:29:14,760:INFO:Defining folds
2023-12-09 06:29:14,761:INFO:Declaring metric variables
2023-12-09 06:29:14,762:INFO:Importing untrained model
2023-12-09 06:29:14,762:INFO:Declaring custom model
2023-12-09 06:29:14,765:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:29:14,778:INFO:Cross validation set to False
2023-12-09 06:29:14,778:INFO:Fitting Model
2023-12-09 06:29:18,707:INFO:[LightGBM] [Info] Number of positive: 20813, number of negative: 20813
2023-12-09 06:29:18,737:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.017428 seconds.
2023-12-09 06:29:18,737:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-09 06:29:18,742:INFO:[LightGBM] [Info] Total Bins 11935
2023-12-09 06:29:18,742:INFO:[LightGBM] [Info] Number of data points in the train set: 41626, number of used features: 64
2023-12-09 06:29:18,742:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-09 06:29:20,468:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:29:20,468:INFO:create_model() successfully completed......................................
2023-12-09 06:29:20,845:INFO:_master_model_container: 14
2023-12-09 06:29:20,845:INFO:_display_container: 2
2023-12-09 06:29:20,850:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:29:20,851:INFO:compare_models() successfully completed......................................
2023-12-09 06:29:21,000:INFO:PyCaret ClassificationExperiment
2023-12-09 06:29:21,001:INFO:Logging name: clf-default-name
2023-12-09 06:29:21,002:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-09 06:29:21,002:INFO:version 3.2.0
2023-12-09 06:29:21,002:INFO:Initializing setup()
2023-12-09 06:29:21,002:INFO:self.USI: 70dd
2023-12-09 06:29:21,002:INFO:self._variable_keys: {'USI', 'X_test', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'gpu_param', '_ml_usecase', 'X', 'y_train', 'n_jobs_param', 'pipeline', 'memory', 'fold_shuffle_param', 'data', 'seed', 'idx', 'fold_generator', 'log_plots_param', 'target_param', 'y', '_available_plots', 'html_param', 'X_train', 'fix_imbalance', 'y_test', 'gpu_n_jobs_param', 'exp_id', 'logging_param'}
2023-12-09 06:29:21,002:INFO:Checking environment
2023-12-09 06:29:21,003:INFO:python_version: 3.9.18
2023-12-09 06:29:21,003:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-09 06:29:21,003:INFO:machine: AMD64
2023-12-09 06:29:21,003:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-09 06:29:21,003:INFO:Memory: svmem(total=7955767296, available=1807454208, percent=77.3, used=6148313088, free=1807454208)
2023-12-09 06:29:21,003:INFO:Physical Core: 2
2023-12-09 06:29:21,003:INFO:Logical Core: 4
2023-12-09 06:29:21,003:INFO:Checking libraries
2023-12-09 06:29:21,004:INFO:System:
2023-12-09 06:29:21,004:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-09 06:29:21,004:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-09 06:29:21,004:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-09 06:29:21,004:INFO:PyCaret required dependencies:
2023-12-09 06:29:21,006:INFO:                 pip: 23.3.1
2023-12-09 06:29:21,007:INFO:          setuptools: 68.0.0
2023-12-09 06:29:21,007:INFO:             pycaret: 3.2.0
2023-12-09 06:29:21,007:INFO:             IPython: 8.15.0
2023-12-09 06:29:21,007:INFO:          ipywidgets: 7.6.5
2023-12-09 06:29:21,007:INFO:                tqdm: 4.64.1
2023-12-09 06:29:21,007:INFO:               numpy: 1.25.2
2023-12-09 06:29:21,008:INFO:              pandas: 1.5.3
2023-12-09 06:29:21,008:INFO:              jinja2: 3.1.2
2023-12-09 06:29:21,008:INFO:               scipy: 1.9.3
2023-12-09 06:29:21,008:INFO:              joblib: 1.2.0
2023-12-09 06:29:21,008:INFO:             sklearn: 1.2.2
2023-12-09 06:29:21,008:INFO:                pyod: 1.1.2
2023-12-09 06:29:21,008:INFO:            imblearn: 0.11.0
2023-12-09 06:29:21,008:INFO:   category_encoders: 2.6.3
2023-12-09 06:29:21,008:INFO:            lightgbm: 4.1.0
2023-12-09 06:29:21,008:INFO:               numba: 0.58.1
2023-12-09 06:29:21,008:INFO:            requests: 2.28.1
2023-12-09 06:29:21,009:INFO:          matplotlib: 3.6.2
2023-12-09 06:29:21,009:INFO:          scikitplot: 0.3.7
2023-12-09 06:29:21,009:INFO:         yellowbrick: 1.5
2023-12-09 06:29:21,009:INFO:              plotly: 5.18.0
2023-12-09 06:29:21,009:INFO:    plotly-resampler: Not installed
2023-12-09 06:29:21,009:INFO:             kaleido: 0.2.1
2023-12-09 06:29:21,009:INFO:           schemdraw: 0.15
2023-12-09 06:29:21,009:INFO:         statsmodels: 0.14.0
2023-12-09 06:29:21,009:INFO:              sktime: 0.21.1
2023-12-09 06:29:21,009:INFO:               tbats: 1.1.3
2023-12-09 06:29:21,010:INFO:            pmdarima: 2.0.4
2023-12-09 06:29:21,010:INFO:              psutil: 5.9.0
2023-12-09 06:29:21,010:INFO:          markupsafe: 2.1.1
2023-12-09 06:29:21,010:INFO:             pickle5: Not installed
2023-12-09 06:29:21,010:INFO:         cloudpickle: 3.0.0
2023-12-09 06:29:21,010:INFO:         deprecation: 2.1.0
2023-12-09 06:29:21,010:INFO:              xxhash: 3.4.1
2023-12-09 06:29:21,010:INFO:           wurlitzer: Not installed
2023-12-09 06:29:21,011:INFO:PyCaret optional dependencies:
2023-12-09 06:29:21,012:INFO:                shap: 0.43.0
2023-12-09 06:29:21,013:INFO:           interpret: 0.4.4
2023-12-09 06:29:21,015:INFO:                umap: 0.5.5
2023-12-09 06:29:21,015:INFO:     ydata_profiling: 4.6.2
2023-12-09 06:29:21,015:INFO:  explainerdashboard: 0.4.3
2023-12-09 06:29:21,015:INFO:             autoviz: Not installed
2023-12-09 06:29:21,015:INFO:           fairlearn: 0.7.0
2023-12-09 06:29:21,016:INFO:          deepchecks: Not installed
2023-12-09 06:29:21,018:INFO:             xgboost: Not installed
2023-12-09 06:29:21,018:INFO:            catboost: Not installed
2023-12-09 06:29:21,018:INFO:              kmodes: Not installed
2023-12-09 06:29:21,018:INFO:             mlxtend: Not installed
2023-12-09 06:29:21,018:INFO:       statsforecast: Not installed
2023-12-09 06:29:21,018:INFO:        tune_sklearn: Not installed
2023-12-09 06:29:21,018:INFO:                 ray: Not installed
2023-12-09 06:29:21,018:INFO:            hyperopt: Not installed
2023-12-09 06:29:21,018:INFO:              optuna: Not installed
2023-12-09 06:29:21,018:INFO:               skopt: Not installed
2023-12-09 06:29:21,018:INFO:              mlflow: Not installed
2023-12-09 06:29:21,018:INFO:              gradio: Not installed
2023-12-09 06:29:21,018:INFO:             fastapi: Not installed
2023-12-09 06:29:21,018:INFO:             uvicorn: Not installed
2023-12-09 06:29:21,018:INFO:              m2cgen: Not installed
2023-12-09 06:29:21,018:INFO:           evidently: Not installed
2023-12-09 06:29:21,018:INFO:               fugue: Not installed
2023-12-09 06:29:21,018:INFO:           streamlit: 1.26.0
2023-12-09 06:29:21,022:INFO:             prophet: Not installed
2023-12-09 06:29:21,022:INFO:None
2023-12-09 06:29:21,023:INFO:Set up data.
2023-12-09 06:29:21,243:INFO:Set up folding strategy.
2023-12-09 06:29:21,244:INFO:Set up train/test split.
2023-12-09 06:29:21,397:INFO:Set up index.
2023-12-09 06:29:21,402:INFO:Assigning column types.
2023-12-09 06:29:21,422:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-09 06:29:21,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-09 06:29:21,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:29:21,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:21,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:21,892:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-09 06:29:21,892:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:29:22,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:22,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:22,007:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-09 06:29:22,286:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:29:22,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:22,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:22,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-09 06:29:22,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:22,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:22,691:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-09 06:29:22,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:22,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:23,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:23,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:23,154:INFO:Preparing preprocessing pipeline...
2023-12-09 06:29:23,159:INFO:Set up label encoding.
2023-12-09 06:29:23,159:INFO:Set up simple imputation.
2023-12-09 06:29:23,176:INFO:Set up encoding of ordinal features.
2023-12-09 06:29:23,181:INFO:Set up encoding of categorical features.
2023-12-09 06:29:23,181:INFO:Set up imbalanced handling.
2023-12-09 06:29:23,181:INFO:Set up column transformation.
2023-12-09 06:29:23,186:INFO:Set up column name cleaning.
2023-12-09 06:29:24,283:INFO:Finished creating preprocessing pipeline.
2023-12-09 06:29:24,361:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-09 06:29:24,361:INFO:Creating final display dataframe.
2023-12-09 06:29:24,947:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39073, 15)
5        Transformed data shape        (53753, 67)
6   Transformed train set shape        (42031, 67)
7    Transformed test set shape        (11722, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation                knn
14       Categorical imputation                knn
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method             adasyn
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               70dd
2023-12-09 06:29:25,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:25,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:25,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:25,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-09 06:29:25,535:INFO:setup() successfully completed in 4.68s...............
2023-12-09 06:29:25,538:INFO:Initializing compare_models()
2023-12-09 06:29:25,538:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-09 06:29:25,539:INFO:Checking exceptions
2023-12-09 06:29:25,548:INFO:Preparing display monitor
2023-12-09 06:29:25,614:INFO:Initializing Logistic Regression
2023-12-09 06:29:25,615:INFO:Total runtime is 1.6649564107259113e-05 minutes
2023-12-09 06:29:25,629:INFO:SubProcess create_model() called ==================================
2023-12-09 06:29:25,630:INFO:Initializing create_model()
2023-12-09 06:29:25,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:29:25,631:INFO:Checking exceptions
2023-12-09 06:29:25,631:INFO:Importing libraries
2023-12-09 06:29:25,631:INFO:Copying training dataset
2023-12-09 06:29:25,667:INFO:Defining folds
2023-12-09 06:29:25,667:INFO:Declaring metric variables
2023-12-09 06:29:25,679:INFO:Importing untrained model
2023-12-09 06:29:25,692:INFO:Logistic Regression Imported successfully
2023-12-09 06:29:25,722:INFO:Starting cross validation
2023-12-09 06:29:25,735:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:29:46,166:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:29:46,191:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:29:46,203:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:29:46,348:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:29:46,687:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,704:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,710:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,813:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,820:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,822:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,837:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,928:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,939:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,940:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:46,952:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:47,069:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:56,534:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-09 06:29:56,783:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:56,834:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:56,884:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:29:56,953:INFO:Calculating mean and std
2023-12-09 06:29:56,954:INFO:Creating metrics dataframe
2023-12-09 06:29:56,957:INFO:Uploading results into container
2023-12-09 06:29:56,959:INFO:Uploading model into container now
2023-12-09 06:29:56,959:INFO:_master_model_container: 1
2023-12-09 06:29:56,961:INFO:_display_container: 2
2023-12-09 06:29:56,961:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-09 06:29:56,961:INFO:create_model() successfully completed......................................
2023-12-09 06:29:57,178:INFO:SubProcess create_model() end ==================================
2023-12-09 06:29:57,178:INFO:Creating metrics dataframe
2023-12-09 06:29:57,192:INFO:Initializing K Neighbors Classifier
2023-12-09 06:29:57,192:INFO:Total runtime is 0.5263043562571208 minutes
2023-12-09 06:29:57,198:INFO:SubProcess create_model() called ==================================
2023-12-09 06:29:57,199:INFO:Initializing create_model()
2023-12-09 06:29:57,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:29:57,201:INFO:Checking exceptions
2023-12-09 06:29:57,201:INFO:Importing libraries
2023-12-09 06:29:57,201:INFO:Copying training dataset
2023-12-09 06:29:57,220:INFO:Defining folds
2023-12-09 06:29:57,221:INFO:Declaring metric variables
2023-12-09 06:29:57,231:INFO:Importing untrained model
2023-12-09 06:29:57,246:INFO:K Neighbors Classifier Imported successfully
2023-12-09 06:29:57,265:INFO:Starting cross validation
2023-12-09 06:29:57,274:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:30:13,905:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,167:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,255:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,382:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,456:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,522:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,691:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,693:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,845:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,858:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:14,994:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:19,971:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:20,030:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:20,090:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:20,172:INFO:Calculating mean and std
2023-12-09 06:30:20,174:INFO:Creating metrics dataframe
2023-12-09 06:30:20,179:INFO:Uploading results into container
2023-12-09 06:30:20,180:INFO:Uploading model into container now
2023-12-09 06:30:20,181:INFO:_master_model_container: 2
2023-12-09 06:30:20,183:INFO:_display_container: 2
2023-12-09 06:30:20,183:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-09 06:30:20,184:INFO:create_model() successfully completed......................................
2023-12-09 06:30:20,401:INFO:SubProcess create_model() end ==================================
2023-12-09 06:30:20,401:INFO:Creating metrics dataframe
2023-12-09 06:30:20,417:INFO:Initializing Naive Bayes
2023-12-09 06:30:20,417:INFO:Total runtime is 0.9133817712465923 minutes
2023-12-09 06:30:20,422:INFO:SubProcess create_model() called ==================================
2023-12-09 06:30:20,422:INFO:Initializing create_model()
2023-12-09 06:30:20,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:30:20,423:INFO:Checking exceptions
2023-12-09 06:30:20,423:INFO:Importing libraries
2023-12-09 06:30:20,423:INFO:Copying training dataset
2023-12-09 06:30:20,503:INFO:Defining folds
2023-12-09 06:30:20,504:INFO:Declaring metric variables
2023-12-09 06:30:20,512:INFO:Importing untrained model
2023-12-09 06:30:20,522:INFO:Naive Bayes Imported successfully
2023-12-09 06:30:20,544:INFO:Starting cross validation
2023-12-09 06:30:20,551:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:30:27,760:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:27,815:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:27,850:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:27,885:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:27,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:27,982:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:28,012:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:28,042:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:28,079:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:28,146:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:28,181:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:28,221:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:31,262:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:31,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:31,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:31,428:INFO:Calculating mean and std
2023-12-09 06:30:31,428:INFO:Creating metrics dataframe
2023-12-09 06:30:31,440:INFO:Uploading results into container
2023-12-09 06:30:31,441:INFO:Uploading model into container now
2023-12-09 06:30:31,442:INFO:_master_model_container: 3
2023-12-09 06:30:31,442:INFO:_display_container: 2
2023-12-09 06:30:31,443:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-09 06:30:31,443:INFO:create_model() successfully completed......................................
2023-12-09 06:30:31,660:INFO:SubProcess create_model() end ==================================
2023-12-09 06:30:31,660:INFO:Creating metrics dataframe
2023-12-09 06:30:31,672:INFO:Initializing Decision Tree Classifier
2023-12-09 06:30:31,672:INFO:Total runtime is 1.1009769678115846 minutes
2023-12-09 06:30:31,676:INFO:SubProcess create_model() called ==================================
2023-12-09 06:30:31,677:INFO:Initializing create_model()
2023-12-09 06:30:31,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:30:31,677:INFO:Checking exceptions
2023-12-09 06:30:31,677:INFO:Importing libraries
2023-12-09 06:30:31,678:INFO:Copying training dataset
2023-12-09 06:30:31,692:INFO:Defining folds
2023-12-09 06:30:31,692:INFO:Declaring metric variables
2023-12-09 06:30:31,698:INFO:Importing untrained model
2023-12-09 06:30:31,707:INFO:Decision Tree Classifier Imported successfully
2023-12-09 06:30:31,728:INFO:Starting cross validation
2023-12-09 06:30:31,736:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:30:39,898:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,036:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,041:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,061:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,192:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,197:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,222:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,331:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,370:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:40,377:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:44,543:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:44,615:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:44,674:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:44,748:INFO:Calculating mean and std
2023-12-09 06:30:44,751:INFO:Creating metrics dataframe
2023-12-09 06:30:44,755:INFO:Uploading results into container
2023-12-09 06:30:44,757:INFO:Uploading model into container now
2023-12-09 06:30:44,757:INFO:_master_model_container: 4
2023-12-09 06:30:44,757:INFO:_display_container: 2
2023-12-09 06:30:44,758:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-09 06:30:44,759:INFO:create_model() successfully completed......................................
2023-12-09 06:30:44,976:INFO:SubProcess create_model() end ==================================
2023-12-09 06:30:44,976:INFO:Creating metrics dataframe
2023-12-09 06:30:44,989:INFO:Initializing SVM - Linear Kernel
2023-12-09 06:30:44,989:INFO:Total runtime is 1.3229177713394167 minutes
2023-12-09 06:30:44,994:INFO:SubProcess create_model() called ==================================
2023-12-09 06:30:44,995:INFO:Initializing create_model()
2023-12-09 06:30:44,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:30:44,995:INFO:Checking exceptions
2023-12-09 06:30:44,995:INFO:Importing libraries
2023-12-09 06:30:44,996:INFO:Copying training dataset
2023-12-09 06:30:45,010:INFO:Defining folds
2023-12-09 06:30:45,011:INFO:Declaring metric variables
2023-12-09 06:30:45,014:INFO:Importing untrained model
2023-12-09 06:30:45,024:INFO:SVM - Linear Kernel Imported successfully
2023-12-09 06:30:45,040:INFO:Starting cross validation
2023-12-09 06:30:45,048:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:30:53,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:30:53,952:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,047:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,149:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,416:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:30:54,465:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,526:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:30:54,577:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,588:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,686:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:30:54,691:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,696:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,736:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,806:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,867:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:54,995:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:58,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-09 06:30:58,633:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:58,714:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:58,782:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:30:58,874:INFO:Calculating mean and std
2023-12-09 06:30:58,876:INFO:Creating metrics dataframe
2023-12-09 06:30:58,882:INFO:Uploading results into container
2023-12-09 06:30:58,882:INFO:Uploading model into container now
2023-12-09 06:30:58,882:INFO:_master_model_container: 5
2023-12-09 06:30:58,882:INFO:_display_container: 2
2023-12-09 06:30:58,888:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-09 06:30:58,888:INFO:create_model() successfully completed......................................
2023-12-09 06:30:59,161:INFO:SubProcess create_model() end ==================================
2023-12-09 06:30:59,161:INFO:Creating metrics dataframe
2023-12-09 06:30:59,186:INFO:Initializing Ridge Classifier
2023-12-09 06:30:59,186:INFO:Total runtime is 1.5595334092775983 minutes
2023-12-09 06:30:59,199:INFO:SubProcess create_model() called ==================================
2023-12-09 06:30:59,199:INFO:Initializing create_model()
2023-12-09 06:30:59,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:30:59,199:INFO:Checking exceptions
2023-12-09 06:30:59,199:INFO:Importing libraries
2023-12-09 06:30:59,199:INFO:Copying training dataset
2023-12-09 06:30:59,244:INFO:Defining folds
2023-12-09 06:30:59,244:INFO:Declaring metric variables
2023-12-09 06:30:59,255:INFO:Importing untrained model
2023-12-09 06:30:59,266:INFO:Ridge Classifier Imported successfully
2023-12-09 06:30:59,295:INFO:Starting cross validation
2023-12-09 06:30:59,303:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:31:06,189:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:31:06,234:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:31:06,239:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,304:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:31:06,354:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:31:06,359:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,387:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,406:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,406:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,481:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,507:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,527:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,537:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,612:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:06,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:09,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-09 06:31:09,251:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:09,300:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:09,351:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:09,444:INFO:Calculating mean and std
2023-12-09 06:31:09,447:INFO:Creating metrics dataframe
2023-12-09 06:31:09,453:INFO:Uploading results into container
2023-12-09 06:31:09,453:INFO:Uploading model into container now
2023-12-09 06:31:09,455:INFO:_master_model_container: 6
2023-12-09 06:31:09,455:INFO:_display_container: 2
2023-12-09 06:31:09,456:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-09 06:31:09,456:INFO:create_model() successfully completed......................................
2023-12-09 06:31:09,663:INFO:SubProcess create_model() end ==================================
2023-12-09 06:31:09,663:INFO:Creating metrics dataframe
2023-12-09 06:31:09,681:INFO:Initializing Random Forest Classifier
2023-12-09 06:31:09,681:INFO:Total runtime is 1.734450173377991 minutes
2023-12-09 06:31:09,686:INFO:SubProcess create_model() called ==================================
2023-12-09 06:31:09,686:INFO:Initializing create_model()
2023-12-09 06:31:09,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:31:09,686:INFO:Checking exceptions
2023-12-09 06:31:09,686:INFO:Importing libraries
2023-12-09 06:31:09,686:INFO:Copying training dataset
2023-12-09 06:31:09,705:INFO:Defining folds
2023-12-09 06:31:09,706:INFO:Declaring metric variables
2023-12-09 06:31:09,715:INFO:Importing untrained model
2023-12-09 06:31:09,724:INFO:Random Forest Classifier Imported successfully
2023-12-09 06:31:09,741:INFO:Starting cross validation
2023-12-09 06:31:09,746:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:31:33,007:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,193:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,222:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,324:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,459:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,702:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,773:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,837:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,914:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:33,957:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:34,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:34,081:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:40,316:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:40,369:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:40,423:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:40,493:INFO:Calculating mean and std
2023-12-09 06:31:40,494:INFO:Creating metrics dataframe
2023-12-09 06:31:40,498:INFO:Uploading results into container
2023-12-09 06:31:40,499:INFO:Uploading model into container now
2023-12-09 06:31:40,501:INFO:_master_model_container: 7
2023-12-09 06:31:40,501:INFO:_display_container: 2
2023-12-09 06:31:40,501:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-09 06:31:40,501:INFO:create_model() successfully completed......................................
2023-12-09 06:31:40,711:INFO:SubProcess create_model() end ==================================
2023-12-09 06:31:40,712:INFO:Creating metrics dataframe
2023-12-09 06:31:40,727:INFO:Initializing Quadratic Discriminant Analysis
2023-12-09 06:31:40,727:INFO:Total runtime is 2.251891899108887 minutes
2023-12-09 06:31:40,727:INFO:SubProcess create_model() called ==================================
2023-12-09 06:31:40,733:INFO:Initializing create_model()
2023-12-09 06:31:40,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:31:40,733:INFO:Checking exceptions
2023-12-09 06:31:40,733:INFO:Importing libraries
2023-12-09 06:31:40,733:INFO:Copying training dataset
2023-12-09 06:31:40,747:INFO:Defining folds
2023-12-09 06:31:40,747:INFO:Declaring metric variables
2023-12-09 06:31:40,754:INFO:Importing untrained model
2023-12-09 06:31:40,761:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-09 06:31:40,782:INFO:Starting cross validation
2023-12-09 06:31:40,791:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:31:47,578:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:31:47,787:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:31:47,875:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:31:47,975:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:31:48,926:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,103:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,119:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,139:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,190:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,278:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,298:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,313:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,363:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,471:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,512:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:49,537:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:52,291:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-09 06:31:52,615:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:52,662:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:52,712:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:31:52,780:INFO:Calculating mean and std
2023-12-09 06:31:52,782:INFO:Creating metrics dataframe
2023-12-09 06:31:52,789:INFO:Uploading results into container
2023-12-09 06:31:52,791:INFO:Uploading model into container now
2023-12-09 06:31:52,791:INFO:_master_model_container: 8
2023-12-09 06:31:52,792:INFO:_display_container: 2
2023-12-09 06:31:52,793:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-09 06:31:52,793:INFO:create_model() successfully completed......................................
2023-12-09 06:31:53,000:INFO:SubProcess create_model() end ==================================
2023-12-09 06:31:53,000:INFO:Creating metrics dataframe
2023-12-09 06:31:53,012:INFO:Initializing Ada Boost Classifier
2023-12-09 06:31:53,012:INFO:Total runtime is 2.45663503408432 minutes
2023-12-09 06:31:53,018:INFO:SubProcess create_model() called ==================================
2023-12-09 06:31:53,019:INFO:Initializing create_model()
2023-12-09 06:31:53,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:31:53,019:INFO:Checking exceptions
2023-12-09 06:31:53,019:INFO:Importing libraries
2023-12-09 06:31:53,019:INFO:Copying training dataset
2023-12-09 06:31:53,032:INFO:Defining folds
2023-12-09 06:31:53,032:INFO:Declaring metric variables
2023-12-09 06:31:53,044:INFO:Importing untrained model
2023-12-09 06:31:53,053:INFO:Ada Boost Classifier Imported successfully
2023-12-09 06:31:53,073:INFO:Starting cross validation
2023-12-09 06:31:53,083:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:32:08,030:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,051:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,134:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,141:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,146:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,161:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,250:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,261:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,262:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,277:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,373:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:08,382:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:14,944:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:15,003:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:15,046:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:15,115:INFO:Calculating mean and std
2023-12-09 06:32:15,116:INFO:Creating metrics dataframe
2023-12-09 06:32:15,120:INFO:Uploading results into container
2023-12-09 06:32:15,122:INFO:Uploading model into container now
2023-12-09 06:32:15,122:INFO:_master_model_container: 9
2023-12-09 06:32:15,122:INFO:_display_container: 2
2023-12-09 06:32:15,122:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-09 06:32:15,122:INFO:create_model() successfully completed......................................
2023-12-09 06:32:15,345:INFO:SubProcess create_model() end ==================================
2023-12-09 06:32:15,346:INFO:Creating metrics dataframe
2023-12-09 06:32:15,366:INFO:Initializing Gradient Boosting Classifier
2023-12-09 06:32:15,371:INFO:Total runtime is 2.829286527633667 minutes
2023-12-09 06:32:15,378:INFO:SubProcess create_model() called ==================================
2023-12-09 06:32:15,378:INFO:Initializing create_model()
2023-12-09 06:32:15,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:32:15,378:INFO:Checking exceptions
2023-12-09 06:32:15,378:INFO:Importing libraries
2023-12-09 06:32:15,378:INFO:Copying training dataset
2023-12-09 06:32:15,393:INFO:Defining folds
2023-12-09 06:32:15,396:INFO:Declaring metric variables
2023-12-09 06:32:15,403:INFO:Importing untrained model
2023-12-09 06:32:15,410:INFO:Gradient Boosting Classifier Imported successfully
2023-12-09 06:32:15,429:INFO:Starting cross validation
2023-12-09 06:32:15,437:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:32:50,342:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,486:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,633:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,638:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,716:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,780:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,859:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:50,947:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:51,001:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:51,066:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:32:51,174:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:12,290:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:12,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:12,430:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:12,517:INFO:Calculating mean and std
2023-12-09 06:33:12,519:INFO:Creating metrics dataframe
2023-12-09 06:33:12,524:INFO:Uploading results into container
2023-12-09 06:33:12,527:INFO:Uploading model into container now
2023-12-09 06:33:12,529:INFO:_master_model_container: 10
2023-12-09 06:33:12,529:INFO:_display_container: 2
2023-12-09 06:33:12,531:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-09 06:33:12,531:INFO:create_model() successfully completed......................................
2023-12-09 06:33:12,771:INFO:SubProcess create_model() end ==================================
2023-12-09 06:33:12,771:INFO:Creating metrics dataframe
2023-12-09 06:33:12,788:INFO:Initializing Linear Discriminant Analysis
2023-12-09 06:33:12,789:INFO:Total runtime is 3.786261308193207 minutes
2023-12-09 06:33:12,794:INFO:SubProcess create_model() called ==================================
2023-12-09 06:33:12,794:INFO:Initializing create_model()
2023-12-09 06:33:12,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:33:12,794:INFO:Checking exceptions
2023-12-09 06:33:12,794:INFO:Importing libraries
2023-12-09 06:33:12,794:INFO:Copying training dataset
2023-12-09 06:33:12,819:INFO:Defining folds
2023-12-09 06:33:12,820:INFO:Declaring metric variables
2023-12-09 06:33:12,828:INFO:Importing untrained model
2023-12-09 06:33:12,838:INFO:Linear Discriminant Analysis Imported successfully
2023-12-09 06:33:12,862:INFO:Starting cross validation
2023-12-09 06:33:12,873:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:33:20,774:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:20,889:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:20,933:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,001:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,006:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,012:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,062:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,122:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,135:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,177:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:21,245:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:24,673:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:24,720:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:24,773:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:24,840:INFO:Calculating mean and std
2023-12-09 06:33:24,841:INFO:Creating metrics dataframe
2023-12-09 06:33:24,844:INFO:Uploading results into container
2023-12-09 06:33:24,844:INFO:Uploading model into container now
2023-12-09 06:33:24,844:INFO:_master_model_container: 11
2023-12-09 06:33:24,844:INFO:_display_container: 2
2023-12-09 06:33:24,844:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-09 06:33:24,844:INFO:create_model() successfully completed......................................
2023-12-09 06:33:25,063:INFO:SubProcess create_model() end ==================================
2023-12-09 06:33:25,063:INFO:Creating metrics dataframe
2023-12-09 06:33:25,082:INFO:Initializing Extra Trees Classifier
2023-12-09 06:33:25,082:INFO:Total runtime is 3.9911391615867617 minutes
2023-12-09 06:33:25,087:INFO:SubProcess create_model() called ==================================
2023-12-09 06:33:25,087:INFO:Initializing create_model()
2023-12-09 06:33:25,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:33:25,087:INFO:Checking exceptions
2023-12-09 06:33:25,087:INFO:Importing libraries
2023-12-09 06:33:25,087:INFO:Copying training dataset
2023-12-09 06:33:25,103:INFO:Defining folds
2023-12-09 06:33:25,103:INFO:Declaring metric variables
2023-12-09 06:33:25,113:INFO:Importing untrained model
2023-12-09 06:33:25,119:INFO:Extra Trees Classifier Imported successfully
2023-12-09 06:33:25,137:INFO:Starting cross validation
2023-12-09 06:33:25,145:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:33:46,798:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,013:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,023:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,234:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,244:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,299:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,408:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,435:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,480:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,582:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,610:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:47,748:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:53,876:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:53,941:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:54,015:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:33:54,117:INFO:Calculating mean and std
2023-12-09 06:33:54,117:INFO:Creating metrics dataframe
2023-12-09 06:33:54,138:INFO:Uploading results into container
2023-12-09 06:33:54,140:INFO:Uploading model into container now
2023-12-09 06:33:54,141:INFO:_master_model_container: 12
2023-12-09 06:33:54,141:INFO:_display_container: 2
2023-12-09 06:33:54,141:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-09 06:33:54,141:INFO:create_model() successfully completed......................................
2023-12-09 06:33:54,433:INFO:SubProcess create_model() end ==================================
2023-12-09 06:33:54,433:INFO:Creating metrics dataframe
2023-12-09 06:33:54,463:INFO:Initializing Light Gradient Boosting Machine
2023-12-09 06:33:54,463:INFO:Total runtime is 4.4808219313621525 minutes
2023-12-09 06:33:54,468:INFO:SubProcess create_model() called ==================================
2023-12-09 06:33:54,468:INFO:Initializing create_model()
2023-12-09 06:33:54,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:33:54,473:INFO:Checking exceptions
2023-12-09 06:33:54,473:INFO:Importing libraries
2023-12-09 06:33:54,473:INFO:Copying training dataset
2023-12-09 06:33:54,497:INFO:Defining folds
2023-12-09 06:33:54,501:INFO:Declaring metric variables
2023-12-09 06:33:54,510:INFO:Importing untrained model
2023-12-09 06:33:54,531:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:33:54,554:INFO:Starting cross validation
2023-12-09 06:33:54,617:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:34:05,804:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:05,827:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:05,917:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:05,939:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,067:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,207:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,315:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,417:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,432:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,532:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:06,639:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:10,701:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:10,795:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:10,874:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:10,974:INFO:Calculating mean and std
2023-12-09 06:34:10,974:INFO:Creating metrics dataframe
2023-12-09 06:34:10,983:INFO:Uploading results into container
2023-12-09 06:34:10,984:INFO:Uploading model into container now
2023-12-09 06:34:10,985:INFO:_master_model_container: 13
2023-12-09 06:34:10,985:INFO:_display_container: 2
2023-12-09 06:34:10,987:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:34:10,988:INFO:create_model() successfully completed......................................
2023-12-09 06:34:11,253:INFO:SubProcess create_model() end ==================================
2023-12-09 06:34:11,253:INFO:Creating metrics dataframe
2023-12-09 06:34:11,282:INFO:Initializing Dummy Classifier
2023-12-09 06:34:11,282:INFO:Total runtime is 4.7611439863840745 minutes
2023-12-09 06:34:11,291:INFO:SubProcess create_model() called ==================================
2023-12-09 06:34:11,291:INFO:Initializing create_model()
2023-12-09 06:34:11,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A093100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:34:11,291:INFO:Checking exceptions
2023-12-09 06:34:11,291:INFO:Importing libraries
2023-12-09 06:34:11,291:INFO:Copying training dataset
2023-12-09 06:34:11,321:INFO:Defining folds
2023-12-09 06:34:11,321:INFO:Declaring metric variables
2023-12-09 06:34:11,345:INFO:Importing untrained model
2023-12-09 06:34:11,355:INFO:Dummy Classifier Imported successfully
2023-12-09 06:34:11,375:INFO:Starting cross validation
2023-12-09 06:34:11,419:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-09 06:34:18,428:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,503:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,537:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,550:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,550:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,617:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:34:18,631:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,668:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,668:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,681:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,703:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:34:18,749:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:34:18,749:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:34:18,759:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,799:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:18,799:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:21,373:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:21,425:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:21,453:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-09 06:34:21,475:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-09 06:34:21,541:INFO:Calculating mean and std
2023-12-09 06:34:21,542:INFO:Creating metrics dataframe
2023-12-09 06:34:21,546:INFO:Uploading results into container
2023-12-09 06:34:21,547:INFO:Uploading model into container now
2023-12-09 06:34:21,547:INFO:_master_model_container: 14
2023-12-09 06:34:21,548:INFO:_display_container: 2
2023-12-09 06:34:21,548:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-09 06:34:21,549:INFO:create_model() successfully completed......................................
2023-12-09 06:34:21,793:INFO:SubProcess create_model() end ==================================
2023-12-09 06:34:21,793:INFO:Creating metrics dataframe
2023-12-09 06:34:21,832:INFO:Initializing create_model()
2023-12-09 06:34:21,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:34:21,833:INFO:Checking exceptions
2023-12-09 06:34:21,833:INFO:Importing libraries
2023-12-09 06:34:21,833:INFO:Copying training dataset
2023-12-09 06:34:21,860:INFO:Defining folds
2023-12-09 06:34:21,860:INFO:Declaring metric variables
2023-12-09 06:34:21,860:INFO:Importing untrained model
2023-12-09 06:34:21,860:INFO:Declaring custom model
2023-12-09 06:34:21,861:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:34:21,870:INFO:Cross validation set to False
2023-12-09 06:34:21,870:INFO:Fitting Model
2023-12-09 06:34:25,458:INFO:[LightGBM] [Info] Number of positive: 21218, number of negative: 20813
2023-12-09 06:34:25,485:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.015469 seconds.
2023-12-09 06:34:25,485:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-09 06:34:25,485:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-09 06:34:25,490:INFO:[LightGBM] [Info] Total Bins 11998
2023-12-09 06:34:25,490:INFO:[LightGBM] [Info] Number of data points in the train set: 42031, number of used features: 64
2023-12-09 06:34:25,490:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.504818 -> initscore=0.019272
2023-12-09 06:34:25,495:INFO:[LightGBM] [Info] Start training from score 0.019272
2023-12-09 06:34:26,623:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:34:26,623:INFO:create_model() successfully completed......................................
2023-12-09 06:34:26,999:INFO:_master_model_container: 14
2023-12-09 06:34:27,000:INFO:_display_container: 2
2023-12-09 06:34:27,001:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:34:27,001:INFO:compare_models() successfully completed......................................
2023-12-09 06:34:27,127:INFO:Initializing finalize_model()
2023-12-09 06:34:27,129:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-09 06:34:27,131:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:34:27,148:INFO:Initializing create_model()
2023-12-09 06:34:27,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:34:27,148:INFO:Checking exceptions
2023-12-09 06:34:27,152:INFO:Importing libraries
2023-12-09 06:34:27,152:INFO:Copying training dataset
2023-12-09 06:34:27,152:INFO:Defining folds
2023-12-09 06:34:27,152:INFO:Declaring metric variables
2023-12-09 06:34:27,152:INFO:Importing untrained model
2023-12-09 06:34:27,152:INFO:Declaring custom model
2023-12-09 06:34:27,152:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:34:27,163:INFO:Cross validation set to False
2023-12-09 06:34:27,164:INFO:Fitting Model
2023-12-09 06:34:33,030:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-09 06:34:33,070:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.019069 seconds.
2023-12-09 06:34:33,070:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-09 06:34:33,070:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-09 06:34:33,070:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-09 06:34:33,070:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-09 06:34:33,075:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-09 06:34:33,075:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-09 06:34:34,266:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:34,267:INFO:create_model() successfully completed......................................
2023-12-09 06:34:34,505:INFO:_master_model_container: 14
2023-12-09 06:34:34,505:INFO:_display_container: 2
2023-12-09 06:34:34,545:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:34,545:INFO:finalize_model() successfully completed......................................
2023-12-09 06:34:34,972:INFO:Initializing finalize_model()
2023-12-09 06:34:34,973:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-09 06:34:34,974:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:34:34,983:INFO:Initializing create_model()
2023-12-09 06:34:34,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:34:34,984:INFO:Checking exceptions
2023-12-09 06:34:34,988:INFO:Importing libraries
2023-12-09 06:34:34,988:INFO:Copying training dataset
2023-12-09 06:34:34,989:INFO:Defining folds
2023-12-09 06:34:34,989:INFO:Declaring metric variables
2023-12-09 06:34:34,990:INFO:Importing untrained model
2023-12-09 06:34:34,990:INFO:Declaring custom model
2023-12-09 06:34:34,991:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:34:34,997:INFO:Cross validation set to False
2023-12-09 06:34:34,997:INFO:Fitting Model
2023-12-09 06:34:40,227:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-09 06:34:40,260:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.016261 seconds.
2023-12-09 06:34:40,260:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-09 06:34:40,260:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-09 06:34:40,260:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-09 06:34:40,265:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-09 06:34:40,268:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-09 06:34:40,269:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-09 06:34:41,334:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:41,335:INFO:create_model() successfully completed......................................
2023-12-09 06:34:41,577:INFO:_master_model_container: 14
2023-12-09 06:34:41,577:INFO:_display_container: 2
2023-12-09 06:34:41,627:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:41,627:INFO:finalize_model() successfully completed......................................
2023-12-09 06:34:42,101:INFO:Initializing finalize_model()
2023-12-09 06:34:42,101:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-09 06:34:42,106:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-09 06:34:42,120:INFO:Initializing create_model()
2023-12-09 06:34:42,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-09 06:34:42,120:INFO:Checking exceptions
2023-12-09 06:34:42,124:INFO:Importing libraries
2023-12-09 06:34:42,124:INFO:Copying training dataset
2023-12-09 06:34:42,125:INFO:Defining folds
2023-12-09 06:34:42,125:INFO:Declaring metric variables
2023-12-09 06:34:42,126:INFO:Importing untrained model
2023-12-09 06:34:42,126:INFO:Declaring custom model
2023-12-09 06:34:42,129:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-09 06:34:42,136:INFO:Cross validation set to False
2023-12-09 06:34:42,136:INFO:Fitting Model
2023-12-09 06:34:47,968:INFO:[LightGBM] [Info] Number of positive: 29486, number of negative: 29733
2023-12-09 06:34:48,003:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.017243 seconds.
2023-12-09 06:34:48,008:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-09 06:34:48,008:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-09 06:34:48,008:INFO:[LightGBM] [Info] Total Bins 13020
2023-12-09 06:34:48,008:INFO:[LightGBM] [Info] Number of data points in the train set: 59219, number of used features: 65
2023-12-09 06:34:48,008:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.497915 -> initscore=-0.008342
2023-12-09 06:34:48,008:INFO:[LightGBM] [Info] Start training from score -0.008342
2023-12-09 06:34:49,132:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:49,132:INFO:create_model() successfully completed......................................
2023-12-09 06:34:49,357:INFO:_master_model_container: 14
2023-12-09 06:34:49,357:INFO:_display_container: 2
2023-12-09 06:34:49,397:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:49,397:INFO:finalize_model() successfully completed......................................
2023-12-09 06:34:49,904:INFO:Initializing save_model()
2023-12-09 06:34:49,904:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-09 06:34:49,904:INFO:Adding model into prep_pipe
2023-12-09 06:34:49,904:WARNING:Only Model saved as it was a pipeline.
2023-12-09 06:34:49,954:INFO:models/model_exp1.pkl saved in current working directory
2023-12-09 06:34:50,039:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:50,039:INFO:save_model() successfully completed......................................
2023-12-09 06:34:50,464:INFO:Initializing save_model()
2023-12-09 06:34:50,465:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-09 06:34:50,465:INFO:Adding model into prep_pipe
2023-12-09 06:34:50,465:WARNING:Only Model saved as it was a pipeline.
2023-12-09 06:34:50,537:INFO:models/model_exp2.pkl saved in current working directory
2023-12-09 06:34:50,631:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:50,631:INFO:save_model() successfully completed......................................
2023-12-09 06:34:51,259:INFO:Initializing save_model()
2023-12-09 06:34:51,259:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-09 06:34:51,259:INFO:Adding model into prep_pipe
2023-12-09 06:34:51,260:WARNING:Only Model saved as it was a pipeline.
2023-12-09 06:34:51,345:INFO:models/model_exp3.pkl saved in current working directory
2023-12-09 06:34:51,480:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-09 06:34:51,481:INFO:save_model() successfully completed......................................
2023-12-09 06:34:52,646:INFO:Initializing plot_model()
2023-12-09 06:34:52,646:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, system=True)
2023-12-09 06:34:52,646:INFO:Checking exceptions
2023-12-09 06:34:52,697:INFO:Preloading libraries
2023-12-09 06:34:52,728:INFO:Copying training dataset
2023-12-09 06:34:52,728:INFO:Plot type: feature
2023-12-09 06:34:52,747:WARNING:No coef_ found. Trying feature_importances_
2023-12-09 06:34:54,190:INFO:Visual Rendered Successfully
2023-12-09 06:34:54,638:INFO:plot_model() successfully completed......................................
2023-12-10 10:28:30,084:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_19944\3830611721.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  matriz_correlacion = adults.corr()

2023-12-10 10:28:44,691:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_19944\2676324238.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  matriz_correlacion = adults.corr()

2023-12-10 10:32:28,953:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_19944\2676324238.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  matriz_correlacion = adults.corr()

2023-12-10 10:41:01,761:INFO:Initializing finalize_model()
2023-12-10 10:41:01,761:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-10 10:41:01,761:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:41:01,818:INFO:Initializing create_model()
2023-12-10 10:41:01,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C0A10E7C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:41:01,820:INFO:Checking exceptions
2023-12-10 10:41:01,881:INFO:Importing libraries
2023-12-10 10:41:01,881:INFO:Copying training dataset
2023-12-10 10:41:01,881:INFO:Defining folds
2023-12-10 10:41:01,893:INFO:Declaring metric variables
2023-12-10 10:41:01,894:INFO:Importing untrained model
2023-12-10 10:41:01,894:INFO:Declaring custom model
2023-12-10 10:41:01,909:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:41:01,963:INFO:Cross validation set to False
2023-12-10 10:41:01,963:INFO:Fitting Model
2023-12-10 10:41:40,332:INFO:Initializing save_model()
2023-12-10 10:41:40,333:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-10 10:41:40,333:INFO:Adding model into prep_pipe
2023-12-10 10:41:40,333:WARNING:Only Model saved as it was a pipeline.
2023-12-10 10:41:40,449:INFO:models/model_exp1.pkl saved in current working directory
2023-12-10 10:41:40,524:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-10 10:41:40,525:INFO:save_model() successfully completed......................................
2023-12-10 10:42:01,951:INFO:Soft dependency imported: ydata_profiling: 4.6.2
2023-12-10 10:42:27,432:WARNING:C:\Users\Mario T\AppData\Local\Temp\ipykernel_19944\2676324238.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  matriz_correlacion = adults.corr()

2023-12-10 10:42:27,714:INFO:PyCaret ClassificationExperiment
2023-12-10 10:42:27,715:INFO:Logging name: clf-default-name
2023-12-10 10:42:27,715:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-10 10:42:27,715:INFO:version 3.2.0
2023-12-10 10:42:27,715:INFO:Initializing setup()
2023-12-10 10:42:27,715:INFO:self.USI: f162
2023-12-10 10:42:27,716:INFO:self._variable_keys: {'USI', 'X_test', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'gpu_param', '_ml_usecase', 'X', 'y_train', 'n_jobs_param', 'pipeline', 'memory', 'fold_shuffle_param', 'data', 'seed', 'idx', 'fold_generator', 'log_plots_param', 'target_param', 'y', '_available_plots', 'html_param', 'X_train', 'fix_imbalance', 'y_test', 'gpu_n_jobs_param', 'exp_id', 'logging_param'}
2023-12-10 10:42:27,716:INFO:Checking environment
2023-12-10 10:42:27,716:INFO:python_version: 3.9.18
2023-12-10 10:42:27,717:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-10 10:42:27,717:INFO:machine: AMD64
2023-12-10 10:42:27,717:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-10 10:42:27,717:INFO:Memory: svmem(total=7955767296, available=1139421184, percent=85.7, used=6816346112, free=1139421184)
2023-12-10 10:42:27,718:INFO:Physical Core: 2
2023-12-10 10:42:27,718:INFO:Logical Core: 4
2023-12-10 10:42:27,718:INFO:Checking libraries
2023-12-10 10:42:27,718:INFO:System:
2023-12-10 10:42:27,718:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-10 10:42:27,718:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-10 10:42:27,718:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-10 10:42:27,718:INFO:PyCaret required dependencies:
2023-12-10 10:42:27,719:INFO:                 pip: 23.3.1
2023-12-10 10:42:27,719:INFO:          setuptools: 68.0.0
2023-12-10 10:42:27,719:INFO:             pycaret: 3.2.0
2023-12-10 10:42:27,719:INFO:             IPython: 8.15.0
2023-12-10 10:42:27,719:INFO:          ipywidgets: 7.6.5
2023-12-10 10:42:27,719:INFO:                tqdm: 4.64.1
2023-12-10 10:42:27,719:INFO:               numpy: 1.25.2
2023-12-10 10:42:27,719:INFO:              pandas: 1.5.3
2023-12-10 10:42:27,719:INFO:              jinja2: 3.1.2
2023-12-10 10:42:27,719:INFO:               scipy: 1.9.3
2023-12-10 10:42:27,720:INFO:              joblib: 1.2.0
2023-12-10 10:42:27,720:INFO:             sklearn: 1.2.2
2023-12-10 10:42:27,720:INFO:                pyod: 1.1.2
2023-12-10 10:42:27,720:INFO:            imblearn: 0.11.0
2023-12-10 10:42:27,720:INFO:   category_encoders: 2.6.3
2023-12-10 10:42:27,720:INFO:            lightgbm: 4.1.0
2023-12-10 10:42:27,720:INFO:               numba: 0.58.1
2023-12-10 10:42:27,720:INFO:            requests: 2.28.1
2023-12-10 10:42:27,721:INFO:          matplotlib: 3.6.2
2023-12-10 10:42:27,721:INFO:          scikitplot: 0.3.7
2023-12-10 10:42:27,721:INFO:         yellowbrick: 1.5
2023-12-10 10:42:27,721:INFO:              plotly: 5.18.0
2023-12-10 10:42:27,721:INFO:    plotly-resampler: Not installed
2023-12-10 10:42:27,721:INFO:             kaleido: 0.2.1
2023-12-10 10:42:27,721:INFO:           schemdraw: 0.15
2023-12-10 10:42:27,721:INFO:         statsmodels: 0.14.0
2023-12-10 10:42:27,721:INFO:              sktime: 0.21.1
2023-12-10 10:42:27,722:INFO:               tbats: 1.1.3
2023-12-10 10:42:27,723:INFO:            pmdarima: 2.0.4
2023-12-10 10:42:27,723:INFO:              psutil: 5.9.0
2023-12-10 10:42:27,723:INFO:          markupsafe: 2.1.1
2023-12-10 10:42:27,724:INFO:             pickle5: Not installed
2023-12-10 10:42:27,724:INFO:         cloudpickle: 3.0.0
2023-12-10 10:42:27,724:INFO:         deprecation: 2.1.0
2023-12-10 10:42:27,725:INFO:              xxhash: 3.4.1
2023-12-10 10:42:27,725:INFO:           wurlitzer: Not installed
2023-12-10 10:42:27,725:INFO:PyCaret optional dependencies:
2023-12-10 10:42:27,725:INFO:                shap: 0.43.0
2023-12-10 10:42:27,725:INFO:           interpret: 0.4.4
2023-12-10 10:42:27,725:INFO:                umap: 0.5.5
2023-12-10 10:42:27,725:INFO:     ydata_profiling: 4.6.2
2023-12-10 10:42:27,725:INFO:  explainerdashboard: 0.4.3
2023-12-10 10:42:27,725:INFO:             autoviz: Not installed
2023-12-10 10:42:27,725:INFO:           fairlearn: 0.7.0
2023-12-10 10:42:27,728:INFO:          deepchecks: Not installed
2023-12-10 10:42:27,729:INFO:             xgboost: Not installed
2023-12-10 10:42:27,729:INFO:            catboost: Not installed
2023-12-10 10:42:27,729:INFO:              kmodes: Not installed
2023-12-10 10:42:27,729:INFO:             mlxtend: Not installed
2023-12-10 10:42:27,729:INFO:       statsforecast: Not installed
2023-12-10 10:42:27,729:INFO:        tune_sklearn: Not installed
2023-12-10 10:42:27,729:INFO:                 ray: Not installed
2023-12-10 10:42:27,729:INFO:            hyperopt: Not installed
2023-12-10 10:42:27,729:INFO:              optuna: Not installed
2023-12-10 10:42:27,730:INFO:               skopt: Not installed
2023-12-10 10:42:27,730:INFO:              mlflow: Not installed
2023-12-10 10:42:27,730:INFO:              gradio: Not installed
2023-12-10 10:42:27,730:INFO:             fastapi: Not installed
2023-12-10 10:42:27,730:INFO:             uvicorn: Not installed
2023-12-10 10:42:27,730:INFO:              m2cgen: Not installed
2023-12-10 10:42:27,730:INFO:           evidently: Not installed
2023-12-10 10:42:27,730:INFO:               fugue: Not installed
2023-12-10 10:42:27,730:INFO:           streamlit: 1.26.0
2023-12-10 10:42:27,731:INFO:             prophet: Not installed
2023-12-10 10:42:27,731:INFO:None
2023-12-10 10:42:27,731:INFO:Set up data.
2023-12-10 10:42:27,817:INFO:Set up folding strategy.
2023-12-10 10:42:27,817:INFO:Set up train/test split.
2023-12-10 10:42:27,896:INFO:Set up index.
2023-12-10 10:42:27,896:INFO:Assigning column types.
2023-12-10 10:42:27,910:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-10 10:42:28,060:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-10 10:42:28,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:42:28,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-10 10:42:28,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:42:28,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,265:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-10 10:42:28,367:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:42:28,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,495:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:42:28,532:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,532:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-10 10:42:28,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:28,912:INFO:Preparing preprocessing pipeline...
2023-12-10 10:42:28,938:INFO:Set up label encoding.
2023-12-10 10:42:28,938:INFO:Set up simple imputation.
2023-12-10 10:42:28,954:INFO:Set up encoding of ordinal features.
2023-12-10 10:42:28,963:INFO:Set up encoding of categorical features.
2023-12-10 10:42:28,964:INFO:Set up imbalanced handling.
2023-12-10 10:42:28,964:INFO:Set up column transformation.
2023-12-10 10:42:28,966:INFO:Set up column name cleaning.
2023-12-10 10:42:34,590:INFO:Finished creating preprocessing pipeline.
2023-12-10 10:42:34,637:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                                                                              n_jobs=None,
                                                                              random_state=2023,
                                                                              sampling_strategy='auto')))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-10 10:42:34,637:INFO:Creating final display dataframe.
2023-12-10 10:42:36,851:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39032, 15)
5        Transformed data shape        (53252, 67)
6   Transformed train set shape        (41542, 67)
7    Transformed test set shape        (11710, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation           constant
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method              smote
19               Transformation               True
20        Transformation method        yeo-johnson
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               f162
2023-12-10 10:42:37,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:37,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:37,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:37,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:42:37,270:INFO:setup() successfully completed in 9.66s...............
2023-12-10 10:42:37,318:INFO:Initializing compare_models()
2023-12-10 10:42:37,318:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-10 10:42:37,318:INFO:Checking exceptions
2023-12-10 10:42:37,318:INFO:Preparing display monitor
2023-12-10 10:42:37,371:INFO:Initializing Logistic Regression
2023-12-10 10:42:37,387:INFO:Total runtime is 0.0002582748730977376 minutes
2023-12-10 10:42:37,389:INFO:SubProcess create_model() called ==================================
2023-12-10 10:42:37,389:INFO:Initializing create_model()
2023-12-10 10:42:37,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:42:37,389:INFO:Checking exceptions
2023-12-10 10:42:37,389:INFO:Importing libraries
2023-12-10 10:42:37,389:INFO:Copying training dataset
2023-12-10 10:42:37,404:INFO:Defining folds
2023-12-10 10:42:37,404:INFO:Declaring metric variables
2023-12-10 10:42:37,404:INFO:Importing untrained model
2023-12-10 10:42:37,404:INFO:Logistic Regression Imported successfully
2023-12-10 10:42:37,420:INFO:Starting cross validation
2023-12-10 10:42:37,420:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:43:11,486:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:43:11,621:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:43:11,755:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:43:11,856:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:43:11,922:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,022:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,088:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,122:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,155:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,238:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,254:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,288:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,288:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,405:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,405:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:12,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:21,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:43:21,581:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:21,698:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:21,781:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:21,864:INFO:Calculating mean and std
2023-12-10 10:43:21,864:INFO:Creating metrics dataframe
2023-12-10 10:43:21,881:INFO:Uploading results into container
2023-12-10 10:43:21,881:INFO:Uploading model into container now
2023-12-10 10:43:21,881:INFO:_master_model_container: 1
2023-12-10 10:43:21,881:INFO:_display_container: 2
2023-12-10 10:43:21,881:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-10 10:43:21,881:INFO:create_model() successfully completed......................................
2023-12-10 10:43:22,315:INFO:SubProcess create_model() end ==================================
2023-12-10 10:43:22,315:INFO:Creating metrics dataframe
2023-12-10 10:43:22,338:INFO:Initializing K Neighbors Classifier
2023-12-10 10:43:22,339:INFO:Total runtime is 0.7494530955950419 minutes
2023-12-10 10:43:22,346:INFO:SubProcess create_model() called ==================================
2023-12-10 10:43:22,346:INFO:Initializing create_model()
2023-12-10 10:43:22,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:43:22,347:INFO:Checking exceptions
2023-12-10 10:43:22,347:INFO:Importing libraries
2023-12-10 10:43:22,348:INFO:Copying training dataset
2023-12-10 10:43:22,364:INFO:Defining folds
2023-12-10 10:43:22,365:INFO:Declaring metric variables
2023-12-10 10:43:22,365:INFO:Importing untrained model
2023-12-10 10:43:22,382:INFO:K Neighbors Classifier Imported successfully
2023-12-10 10:43:22,383:INFO:Starting cross validation
2023-12-10 10:43:22,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:43:39,649:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:39,833:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:39,883:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:39,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:39,944:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:39,966:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:40,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:40,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:40,100:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:40,266:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:40,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:40,300:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:46,689:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:46,739:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:46,787:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:46,839:INFO:Calculating mean and std
2023-12-10 10:43:46,839:INFO:Creating metrics dataframe
2023-12-10 10:43:46,856:INFO:Uploading results into container
2023-12-10 10:43:46,856:INFO:Uploading model into container now
2023-12-10 10:43:46,856:INFO:_master_model_container: 2
2023-12-10 10:43:46,856:INFO:_display_container: 2
2023-12-10 10:43:46,856:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-10 10:43:46,856:INFO:create_model() successfully completed......................................
2023-12-10 10:43:47,089:INFO:SubProcess create_model() end ==================================
2023-12-10 10:43:47,089:INFO:Creating metrics dataframe
2023-12-10 10:43:47,106:INFO:Initializing Naive Bayes
2023-12-10 10:43:47,106:INFO:Total runtime is 1.1622487862904867 minutes
2023-12-10 10:43:47,106:INFO:SubProcess create_model() called ==================================
2023-12-10 10:43:47,106:INFO:Initializing create_model()
2023-12-10 10:43:47,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:43:47,106:INFO:Checking exceptions
2023-12-10 10:43:47,106:INFO:Importing libraries
2023-12-10 10:43:47,106:INFO:Copying training dataset
2023-12-10 10:43:47,123:INFO:Defining folds
2023-12-10 10:43:47,123:INFO:Declaring metric variables
2023-12-10 10:43:47,123:INFO:Importing untrained model
2023-12-10 10:43:47,123:INFO:Naive Bayes Imported successfully
2023-12-10 10:43:47,140:INFO:Starting cross validation
2023-12-10 10:43:47,140:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:43:54,898:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,014:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,014:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,081:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,198:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,231:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,238:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,348:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,415:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,434:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:55,581:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:58,986:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:59,035:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:59,085:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:43:59,135:INFO:Calculating mean and std
2023-12-10 10:43:59,135:INFO:Creating metrics dataframe
2023-12-10 10:43:59,151:INFO:Uploading results into container
2023-12-10 10:43:59,153:INFO:Uploading model into container now
2023-12-10 10:43:59,154:INFO:_master_model_container: 3
2023-12-10 10:43:59,154:INFO:_display_container: 2
2023-12-10 10:43:59,155:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-10 10:43:59,155:INFO:create_model() successfully completed......................................
2023-12-10 10:43:59,385:INFO:SubProcess create_model() end ==================================
2023-12-10 10:43:59,385:INFO:Creating metrics dataframe
2023-12-10 10:43:59,385:INFO:Initializing Decision Tree Classifier
2023-12-10 10:43:59,385:INFO:Total runtime is 1.3668925404548644 minutes
2023-12-10 10:43:59,402:INFO:SubProcess create_model() called ==================================
2023-12-10 10:43:59,402:INFO:Initializing create_model()
2023-12-10 10:43:59,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:43:59,402:INFO:Checking exceptions
2023-12-10 10:43:59,402:INFO:Importing libraries
2023-12-10 10:43:59,402:INFO:Copying training dataset
2023-12-10 10:43:59,402:INFO:Defining folds
2023-12-10 10:43:59,402:INFO:Declaring metric variables
2023-12-10 10:43:59,419:INFO:Importing untrained model
2023-12-10 10:43:59,419:INFO:Decision Tree Classifier Imported successfully
2023-12-10 10:43:59,436:INFO:Starting cross validation
2023-12-10 10:43:59,436:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:44:07,527:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,644:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,729:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,729:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,860:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,877:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,877:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:07,994:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:08,015:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:08,017:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:12,598:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:12,648:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:12,682:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:12,748:INFO:Calculating mean and std
2023-12-10 10:44:12,748:INFO:Creating metrics dataframe
2023-12-10 10:44:12,766:INFO:Uploading results into container
2023-12-10 10:44:12,766:INFO:Uploading model into container now
2023-12-10 10:44:12,766:INFO:_master_model_container: 4
2023-12-10 10:44:12,766:INFO:_display_container: 2
2023-12-10 10:44:12,766:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-10 10:44:12,766:INFO:create_model() successfully completed......................................
2023-12-10 10:44:12,999:INFO:SubProcess create_model() end ==================================
2023-12-10 10:44:12,999:INFO:Creating metrics dataframe
2023-12-10 10:44:12,999:INFO:Initializing SVM - Linear Kernel
2023-12-10 10:44:13,015:INFO:Total runtime is 1.5940523187319438 minutes
2023-12-10 10:44:13,020:INFO:SubProcess create_model() called ==================================
2023-12-10 10:44:13,020:INFO:Initializing create_model()
2023-12-10 10:44:13,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:44:13,020:INFO:Checking exceptions
2023-12-10 10:44:13,020:INFO:Importing libraries
2023-12-10 10:44:13,020:INFO:Copying training dataset
2023-12-10 10:44:13,033:INFO:Defining folds
2023-12-10 10:44:13,033:INFO:Declaring metric variables
2023-12-10 10:44:13,038:INFO:Importing untrained model
2023-12-10 10:44:13,045:INFO:SVM - Linear Kernel Imported successfully
2023-12-10 10:44:13,050:INFO:Starting cross validation
2023-12-10 10:44:13,050:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:44:23,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:44:23,659:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:23,676:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:44:23,726:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:23,760:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:23,826:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:23,860:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:23,960:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:24,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:44:24,410:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:24,510:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:44:24,510:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:24,560:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:24,627:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:24,661:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:24,794:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:29,949:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:44:29,966:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:30,039:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:30,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:30,149:INFO:Calculating mean and std
2023-12-10 10:44:30,166:INFO:Creating metrics dataframe
2023-12-10 10:44:30,166:INFO:Uploading results into container
2023-12-10 10:44:30,166:INFO:Uploading model into container now
2023-12-10 10:44:30,166:INFO:_master_model_container: 5
2023-12-10 10:44:30,166:INFO:_display_container: 2
2023-12-10 10:44:30,166:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-10 10:44:30,166:INFO:create_model() successfully completed......................................
2023-12-10 10:44:30,416:INFO:SubProcess create_model() end ==================================
2023-12-10 10:44:30,416:INFO:Creating metrics dataframe
2023-12-10 10:44:30,441:INFO:Initializing Ridge Classifier
2023-12-10 10:44:30,441:INFO:Total runtime is 1.8844927112261454 minutes
2023-12-10 10:44:30,446:INFO:SubProcess create_model() called ==================================
2023-12-10 10:44:30,447:INFO:Initializing create_model()
2023-12-10 10:44:30,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:44:30,448:INFO:Checking exceptions
2023-12-10 10:44:30,448:INFO:Importing libraries
2023-12-10 10:44:30,448:INFO:Copying training dataset
2023-12-10 10:44:30,466:INFO:Defining folds
2023-12-10 10:44:30,466:INFO:Declaring metric variables
2023-12-10 10:44:30,483:INFO:Importing untrained model
2023-12-10 10:44:30,484:INFO:Ridge Classifier Imported successfully
2023-12-10 10:44:30,504:INFO:Starting cross validation
2023-12-10 10:44:30,506:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:44:37,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:44:37,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:44:37,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,691:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:44:37,707:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,757:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,773:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:44:37,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,841:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,890:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,908:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,941:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,941:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:37,994:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:38,023:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:41,895:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:44:41,929:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:41,978:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:42,044:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:44:42,117:INFO:Calculating mean and std
2023-12-10 10:44:42,119:INFO:Creating metrics dataframe
2023-12-10 10:44:42,123:INFO:Uploading results into container
2023-12-10 10:44:42,123:INFO:Uploading model into container now
2023-12-10 10:44:42,124:INFO:_master_model_container: 6
2023-12-10 10:44:42,124:INFO:_display_container: 2
2023-12-10 10:44:42,124:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-10 10:44:42,124:INFO:create_model() successfully completed......................................
2023-12-10 10:44:42,362:INFO:SubProcess create_model() end ==================================
2023-12-10 10:44:42,362:INFO:Creating metrics dataframe
2023-12-10 10:44:42,378:INFO:Initializing Random Forest Classifier
2023-12-10 10:44:42,378:INFO:Total runtime is 2.083444301287333 minutes
2023-12-10 10:44:42,378:INFO:SubProcess create_model() called ==================================
2023-12-10 10:44:42,378:INFO:Initializing create_model()
2023-12-10 10:44:42,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:44:42,378:INFO:Checking exceptions
2023-12-10 10:44:42,378:INFO:Importing libraries
2023-12-10 10:44:42,378:INFO:Copying training dataset
2023-12-10 10:44:42,395:INFO:Defining folds
2023-12-10 10:44:42,395:INFO:Declaring metric variables
2023-12-10 10:44:42,395:INFO:Importing untrained model
2023-12-10 10:44:42,416:INFO:Random Forest Classifier Imported successfully
2023-12-10 10:44:42,424:INFO:Starting cross validation
2023-12-10 10:44:42,428:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:45:12,705:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:12,745:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:12,939:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,226:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,326:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,376:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,539:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,743:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,826:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:13,960:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:14,148:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:22,062:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:22,101:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:22,156:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:22,218:INFO:Calculating mean and std
2023-12-10 10:45:22,218:INFO:Creating metrics dataframe
2023-12-10 10:45:22,218:INFO:Uploading results into container
2023-12-10 10:45:22,218:INFO:Uploading model into container now
2023-12-10 10:45:22,218:INFO:_master_model_container: 7
2023-12-10 10:45:22,218:INFO:_display_container: 2
2023-12-10 10:45:22,218:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-10 10:45:22,218:INFO:create_model() successfully completed......................................
2023-12-10 10:45:22,468:INFO:SubProcess create_model() end ==================================
2023-12-10 10:45:22,468:INFO:Creating metrics dataframe
2023-12-10 10:45:22,468:INFO:Initializing Quadratic Discriminant Analysis
2023-12-10 10:45:22,468:INFO:Total runtime is 2.751606523990631 minutes
2023-12-10 10:45:22,485:INFO:SubProcess create_model() called ==================================
2023-12-10 10:45:22,485:INFO:Initializing create_model()
2023-12-10 10:45:22,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:45:22,485:INFO:Checking exceptions
2023-12-10 10:45:22,485:INFO:Importing libraries
2023-12-10 10:45:22,485:INFO:Copying training dataset
2023-12-10 10:45:22,501:INFO:Defining folds
2023-12-10 10:45:22,501:INFO:Declaring metric variables
2023-12-10 10:45:22,501:INFO:Importing untrained model
2023-12-10 10:45:22,501:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-10 10:45:22,519:INFO:Starting cross validation
2023-12-10 10:45:22,519:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:45:29,982:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:45:30,001:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:45:30,143:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:45:30,186:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:45:31,060:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,112:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,203:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,227:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,227:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,277:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,361:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,377:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,410:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,427:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,477:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:31,494:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:35,234:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:45:35,569:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:35,646:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:35,698:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:35,782:INFO:Calculating mean and std
2023-12-10 10:45:35,782:INFO:Creating metrics dataframe
2023-12-10 10:45:35,782:INFO:Uploading results into container
2023-12-10 10:45:35,782:INFO:Uploading model into container now
2023-12-10 10:45:35,782:INFO:_master_model_container: 8
2023-12-10 10:45:35,782:INFO:_display_container: 2
2023-12-10 10:45:35,782:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-10 10:45:35,782:INFO:create_model() successfully completed......................................
2023-12-10 10:45:36,149:INFO:SubProcess create_model() end ==================================
2023-12-10 10:45:36,149:INFO:Creating metrics dataframe
2023-12-10 10:45:36,182:INFO:Initializing Ada Boost Classifier
2023-12-10 10:45:36,182:INFO:Total runtime is 2.9801775336265566 minutes
2023-12-10 10:45:36,182:INFO:SubProcess create_model() called ==================================
2023-12-10 10:45:36,182:INFO:Initializing create_model()
2023-12-10 10:45:36,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:45:36,182:INFO:Checking exceptions
2023-12-10 10:45:36,182:INFO:Importing libraries
2023-12-10 10:45:36,182:INFO:Copying training dataset
2023-12-10 10:45:36,218:INFO:Defining folds
2023-12-10 10:45:36,218:INFO:Declaring metric variables
2023-12-10 10:45:36,219:INFO:Importing untrained model
2023-12-10 10:45:36,219:INFO:Ada Boost Classifier Imported successfully
2023-12-10 10:45:36,241:INFO:Starting cross validation
2023-12-10 10:45:36,247:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:45:53,847:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:53,907:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:53,908:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:53,981:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:53,996:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:54,028:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:54,043:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:54,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:54,159:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:54,212:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:54,213:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:45:54,293:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:02,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:02,675:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:02,725:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:02,842:INFO:Calculating mean and std
2023-12-10 10:46:02,842:INFO:Creating metrics dataframe
2023-12-10 10:46:02,842:INFO:Uploading results into container
2023-12-10 10:46:02,842:INFO:Uploading model into container now
2023-12-10 10:46:02,858:INFO:_master_model_container: 9
2023-12-10 10:46:02,858:INFO:_display_container: 2
2023-12-10 10:46:02,858:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-10 10:46:02,858:INFO:create_model() successfully completed......................................
2023-12-10 10:46:03,209:INFO:SubProcess create_model() end ==================================
2023-12-10 10:46:03,209:INFO:Creating metrics dataframe
2023-12-10 10:46:03,226:INFO:Initializing Gradient Boosting Classifier
2023-12-10 10:46:03,226:INFO:Total runtime is 3.4309043407440187 minutes
2023-12-10 10:46:03,242:INFO:SubProcess create_model() called ==================================
2023-12-10 10:46:03,242:INFO:Initializing create_model()
2023-12-10 10:46:03,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:46:03,242:INFO:Checking exceptions
2023-12-10 10:46:03,242:INFO:Importing libraries
2023-12-10 10:46:03,242:INFO:Copying training dataset
2023-12-10 10:46:03,259:INFO:Defining folds
2023-12-10 10:46:03,259:INFO:Declaring metric variables
2023-12-10 10:46:03,275:INFO:Importing untrained model
2023-12-10 10:46:03,277:INFO:Gradient Boosting Classifier Imported successfully
2023-12-10 10:46:03,300:INFO:Starting cross validation
2023-12-10 10:46:03,307:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:46:51,408:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:51,490:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:51,507:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:51,630:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:51,658:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:51,824:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:51,902:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:51,907:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:52,007:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:52,041:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:52,113:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:46:52,158:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:11,244:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:11,301:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:11,344:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:11,410:INFO:Calculating mean and std
2023-12-10 10:47:11,410:INFO:Creating metrics dataframe
2023-12-10 10:47:11,410:INFO:Uploading results into container
2023-12-10 10:47:11,410:INFO:Uploading model into container now
2023-12-10 10:47:11,410:INFO:_master_model_container: 10
2023-12-10 10:47:11,410:INFO:_display_container: 2
2023-12-10 10:47:11,410:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-10 10:47:11,410:INFO:create_model() successfully completed......................................
2023-12-10 10:47:11,661:INFO:SubProcess create_model() end ==================================
2023-12-10 10:47:11,661:INFO:Creating metrics dataframe
2023-12-10 10:47:11,677:INFO:Initializing Linear Discriminant Analysis
2023-12-10 10:47:11,677:INFO:Total runtime is 4.571764143308004 minutes
2023-12-10 10:47:11,694:INFO:SubProcess create_model() called ==================================
2023-12-10 10:47:11,694:INFO:Initializing create_model()
2023-12-10 10:47:11,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:47:11,694:INFO:Checking exceptions
2023-12-10 10:47:11,694:INFO:Importing libraries
2023-12-10 10:47:11,694:INFO:Copying training dataset
2023-12-10 10:47:11,715:INFO:Defining folds
2023-12-10 10:47:11,715:INFO:Declaring metric variables
2023-12-10 10:47:11,720:INFO:Importing untrained model
2023-12-10 10:47:11,726:INFO:Linear Discriminant Analysis Imported successfully
2023-12-10 10:47:11,728:INFO:Starting cross validation
2023-12-10 10:47:11,744:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:47:20,503:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:20,621:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:20,766:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:20,771:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:20,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:20,888:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:20,920:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:21,004:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:21,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:21,086:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:21,161:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:21,212:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:25,808:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:25,875:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:25,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:26,005:INFO:Calculating mean and std
2023-12-10 10:47:26,008:INFO:Creating metrics dataframe
2023-12-10 10:47:26,008:INFO:Uploading results into container
2023-12-10 10:47:26,008:INFO:Uploading model into container now
2023-12-10 10:47:26,008:INFO:_master_model_container: 11
2023-12-10 10:47:26,008:INFO:_display_container: 2
2023-12-10 10:47:26,008:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-10 10:47:26,008:INFO:create_model() successfully completed......................................
2023-12-10 10:47:26,375:INFO:SubProcess create_model() end ==================================
2023-12-10 10:47:26,375:INFO:Creating metrics dataframe
2023-12-10 10:47:26,402:INFO:Initializing Extra Trees Classifier
2023-12-10 10:47:26,402:INFO:Total runtime is 4.817172686258952 minutes
2023-12-10 10:47:26,409:INFO:SubProcess create_model() called ==================================
2023-12-10 10:47:26,409:INFO:Initializing create_model()
2023-12-10 10:47:26,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:47:26,409:INFO:Checking exceptions
2023-12-10 10:47:26,409:INFO:Importing libraries
2023-12-10 10:47:26,409:INFO:Copying training dataset
2023-12-10 10:47:26,480:INFO:Defining folds
2023-12-10 10:47:26,480:INFO:Declaring metric variables
2023-12-10 10:47:26,487:INFO:Importing untrained model
2023-12-10 10:47:26,497:INFO:Extra Trees Classifier Imported successfully
2023-12-10 10:47:26,553:INFO:Starting cross validation
2023-12-10 10:47:26,563:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:47:57,373:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:57,766:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:57,796:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,007:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,024:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,140:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,190:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,341:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,460:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,810:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:58,961:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:47:59,077:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:07,666:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:07,741:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:07,783:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:07,875:INFO:Calculating mean and std
2023-12-10 10:48:07,877:INFO:Creating metrics dataframe
2023-12-10 10:48:07,883:INFO:Uploading results into container
2023-12-10 10:48:07,883:INFO:Uploading model into container now
2023-12-10 10:48:07,883:INFO:_master_model_container: 12
2023-12-10 10:48:07,883:INFO:_display_container: 2
2023-12-10 10:48:07,883:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-10 10:48:07,883:INFO:create_model() successfully completed......................................
2023-12-10 10:48:08,167:INFO:SubProcess create_model() end ==================================
2023-12-10 10:48:08,167:INFO:Creating metrics dataframe
2023-12-10 10:48:08,192:INFO:Initializing Light Gradient Boosting Machine
2023-12-10 10:48:08,192:INFO:Total runtime is 5.513682536284129 minutes
2023-12-10 10:48:08,201:INFO:SubProcess create_model() called ==================================
2023-12-10 10:48:08,201:INFO:Initializing create_model()
2023-12-10 10:48:08,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:48:08,201:INFO:Checking exceptions
2023-12-10 10:48:08,201:INFO:Importing libraries
2023-12-10 10:48:08,201:INFO:Copying training dataset
2023-12-10 10:48:08,240:INFO:Defining folds
2023-12-10 10:48:08,240:INFO:Declaring metric variables
2023-12-10 10:48:08,250:INFO:Importing untrained model
2023-12-10 10:48:08,250:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:48:08,267:INFO:Starting cross validation
2023-12-10 10:48:08,267:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:48:21,316:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,319:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,355:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,431:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,464:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,592:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,598:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:21,617:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:22,277:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:22,463:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:22,565:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:26,387:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:26,457:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:26,504:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:26,568:INFO:Calculating mean and std
2023-12-10 10:48:26,568:INFO:Creating metrics dataframe
2023-12-10 10:48:26,568:INFO:Uploading results into container
2023-12-10 10:48:26,568:INFO:Uploading model into container now
2023-12-10 10:48:26,585:INFO:_master_model_container: 13
2023-12-10 10:48:26,585:INFO:_display_container: 2
2023-12-10 10:48:26,585:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:48:26,585:INFO:create_model() successfully completed......................................
2023-12-10 10:48:26,849:INFO:SubProcess create_model() end ==================================
2023-12-10 10:48:26,849:INFO:Creating metrics dataframe
2023-12-10 10:48:26,866:INFO:Initializing Dummy Classifier
2023-12-10 10:48:26,866:INFO:Total runtime is 5.824915786584219 minutes
2023-12-10 10:48:26,873:INFO:SubProcess create_model() called ==================================
2023-12-10 10:48:26,873:INFO:Initializing create_model()
2023-12-10 10:48:26,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C285330D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:48:26,874:INFO:Checking exceptions
2023-12-10 10:48:26,874:INFO:Importing libraries
2023-12-10 10:48:26,874:INFO:Copying training dataset
2023-12-10 10:48:26,886:INFO:Defining folds
2023-12-10 10:48:26,886:INFO:Declaring metric variables
2023-12-10 10:48:26,886:INFO:Importing untrained model
2023-12-10 10:48:26,886:INFO:Dummy Classifier Imported successfully
2023-12-10 10:48:26,904:INFO:Starting cross validation
2023-12-10 10:48:26,904:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:48:36,628:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,679:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,718:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,745:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,786:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,815:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:48:36,829:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,829:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,845:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:48:36,862:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,896:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,896:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:48:36,946:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:36,946:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:37,020:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:48:37,093:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:40,366:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:40,417:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:40,449:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:48:40,467:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:48:40,538:INFO:Calculating mean and std
2023-12-10 10:48:40,541:INFO:Creating metrics dataframe
2023-12-10 10:48:40,547:INFO:Uploading results into container
2023-12-10 10:48:40,547:INFO:Uploading model into container now
2023-12-10 10:48:40,547:INFO:_master_model_container: 14
2023-12-10 10:48:40,547:INFO:_display_container: 2
2023-12-10 10:48:40,548:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-10 10:48:40,548:INFO:create_model() successfully completed......................................
2023-12-10 10:48:40,799:INFO:SubProcess create_model() end ==================================
2023-12-10 10:48:40,799:INFO:Creating metrics dataframe
2023-12-10 10:48:40,833:INFO:Initializing create_model()
2023-12-10 10:48:40,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C24036700>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:48:40,833:INFO:Checking exceptions
2023-12-10 10:48:40,836:INFO:Importing libraries
2023-12-10 10:48:40,836:INFO:Copying training dataset
2023-12-10 10:48:40,847:INFO:Defining folds
2023-12-10 10:48:40,847:INFO:Declaring metric variables
2023-12-10 10:48:40,848:INFO:Importing untrained model
2023-12-10 10:48:40,848:INFO:Declaring custom model
2023-12-10 10:48:40,849:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:48:40,883:INFO:Cross validation set to False
2023-12-10 10:48:40,883:INFO:Fitting Model
2023-12-10 10:48:46,003:INFO:[LightGBM] [Info] Number of positive: 20771, number of negative: 20771
2023-12-10 10:48:46,038:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.021612 seconds.
2023-12-10 10:48:46,038:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-10 10:48:46,038:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-10 10:48:46,038:INFO:[LightGBM] [Info] Total Bins 12653
2023-12-10 10:48:46,038:INFO:[LightGBM] [Info] Number of data points in the train set: 41542, number of used features: 64
2023-12-10 10:48:46,055:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-10 10:48:47,106:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:48:47,106:INFO:create_model() successfully completed......................................
2023-12-10 10:48:47,489:INFO:_master_model_container: 14
2023-12-10 10:48:47,489:INFO:_display_container: 2
2023-12-10 10:48:47,489:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:48:47,489:INFO:compare_models() successfully completed......................................
2023-12-10 10:48:47,550:INFO:PyCaret ClassificationExperiment
2023-12-10 10:48:47,550:INFO:Logging name: clf-default-name
2023-12-10 10:48:47,550:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-10 10:48:47,550:INFO:version 3.2.0
2023-12-10 10:48:47,550:INFO:Initializing setup()
2023-12-10 10:48:47,550:INFO:self.USI: 806b
2023-12-10 10:48:47,550:INFO:self._variable_keys: {'USI', 'X_test', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'gpu_param', '_ml_usecase', 'X', 'y_train', 'n_jobs_param', 'pipeline', 'memory', 'fold_shuffle_param', 'data', 'seed', 'idx', 'fold_generator', 'log_plots_param', 'target_param', 'y', '_available_plots', 'html_param', 'X_train', 'fix_imbalance', 'y_test', 'gpu_n_jobs_param', 'exp_id', 'logging_param'}
2023-12-10 10:48:47,550:INFO:Checking environment
2023-12-10 10:48:47,550:INFO:python_version: 3.9.18
2023-12-10 10:48:47,550:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-10 10:48:47,550:INFO:machine: AMD64
2023-12-10 10:48:47,550:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-10 10:48:47,550:INFO:Memory: svmem(total=7955767296, available=1257861120, percent=84.2, used=6697906176, free=1257861120)
2023-12-10 10:48:47,550:INFO:Physical Core: 2
2023-12-10 10:48:47,550:INFO:Logical Core: 4
2023-12-10 10:48:47,550:INFO:Checking libraries
2023-12-10 10:48:47,555:INFO:System:
2023-12-10 10:48:47,555:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-10 10:48:47,555:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-10 10:48:47,555:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-10 10:48:47,555:INFO:PyCaret required dependencies:
2023-12-10 10:48:47,555:INFO:                 pip: 23.3.1
2023-12-10 10:48:47,555:INFO:          setuptools: 68.0.0
2023-12-10 10:48:47,556:INFO:             pycaret: 3.2.0
2023-12-10 10:48:47,556:INFO:             IPython: 8.15.0
2023-12-10 10:48:47,556:INFO:          ipywidgets: 7.6.5
2023-12-10 10:48:47,556:INFO:                tqdm: 4.64.1
2023-12-10 10:48:47,556:INFO:               numpy: 1.25.2
2023-12-10 10:48:47,556:INFO:              pandas: 1.5.3
2023-12-10 10:48:47,556:INFO:              jinja2: 3.1.2
2023-12-10 10:48:47,556:INFO:               scipy: 1.9.3
2023-12-10 10:48:47,556:INFO:              joblib: 1.2.0
2023-12-10 10:48:47,556:INFO:             sklearn: 1.2.2
2023-12-10 10:48:47,557:INFO:                pyod: 1.1.2
2023-12-10 10:48:47,557:INFO:            imblearn: 0.11.0
2023-12-10 10:48:47,557:INFO:   category_encoders: 2.6.3
2023-12-10 10:48:47,557:INFO:            lightgbm: 4.1.0
2023-12-10 10:48:47,557:INFO:               numba: 0.58.1
2023-12-10 10:48:47,557:INFO:            requests: 2.28.1
2023-12-10 10:48:47,557:INFO:          matplotlib: 3.6.2
2023-12-10 10:48:47,557:INFO:          scikitplot: 0.3.7
2023-12-10 10:48:47,557:INFO:         yellowbrick: 1.5
2023-12-10 10:48:47,558:INFO:              plotly: 5.18.0
2023-12-10 10:48:47,559:INFO:    plotly-resampler: Not installed
2023-12-10 10:48:47,559:INFO:             kaleido: 0.2.1
2023-12-10 10:48:47,559:INFO:           schemdraw: 0.15
2023-12-10 10:48:47,559:INFO:         statsmodels: 0.14.0
2023-12-10 10:48:47,559:INFO:              sktime: 0.21.1
2023-12-10 10:48:47,559:INFO:               tbats: 1.1.3
2023-12-10 10:48:47,560:INFO:            pmdarima: 2.0.4
2023-12-10 10:48:47,560:INFO:              psutil: 5.9.0
2023-12-10 10:48:47,560:INFO:          markupsafe: 2.1.1
2023-12-10 10:48:47,560:INFO:             pickle5: Not installed
2023-12-10 10:48:47,560:INFO:         cloudpickle: 3.0.0
2023-12-10 10:48:47,560:INFO:         deprecation: 2.1.0
2023-12-10 10:48:47,560:INFO:              xxhash: 3.4.1
2023-12-10 10:48:47,560:INFO:           wurlitzer: Not installed
2023-12-10 10:48:47,560:INFO:PyCaret optional dependencies:
2023-12-10 10:48:47,560:INFO:                shap: 0.43.0
2023-12-10 10:48:47,561:INFO:           interpret: 0.4.4
2023-12-10 10:48:47,561:INFO:                umap: 0.5.5
2023-12-10 10:48:47,561:INFO:     ydata_profiling: 4.6.2
2023-12-10 10:48:47,561:INFO:  explainerdashboard: 0.4.3
2023-12-10 10:48:47,561:INFO:             autoviz: Not installed
2023-12-10 10:48:47,561:INFO:           fairlearn: 0.7.0
2023-12-10 10:48:47,561:INFO:          deepchecks: Not installed
2023-12-10 10:48:47,561:INFO:             xgboost: Not installed
2023-12-10 10:48:47,561:INFO:            catboost: Not installed
2023-12-10 10:48:47,562:INFO:              kmodes: Not installed
2023-12-10 10:48:47,562:INFO:             mlxtend: Not installed
2023-12-10 10:48:47,562:INFO:       statsforecast: Not installed
2023-12-10 10:48:47,562:INFO:        tune_sklearn: Not installed
2023-12-10 10:48:47,562:INFO:                 ray: Not installed
2023-12-10 10:48:47,562:INFO:            hyperopt: Not installed
2023-12-10 10:48:47,562:INFO:              optuna: Not installed
2023-12-10 10:48:47,562:INFO:               skopt: Not installed
2023-12-10 10:48:47,562:INFO:              mlflow: Not installed
2023-12-10 10:48:47,562:INFO:              gradio: Not installed
2023-12-10 10:48:47,562:INFO:             fastapi: Not installed
2023-12-10 10:48:47,562:INFO:             uvicorn: Not installed
2023-12-10 10:48:47,562:INFO:              m2cgen: Not installed
2023-12-10 10:48:47,562:INFO:           evidently: Not installed
2023-12-10 10:48:47,562:INFO:               fugue: Not installed
2023-12-10 10:48:47,562:INFO:           streamlit: 1.26.0
2023-12-10 10:48:47,562:INFO:             prophet: Not installed
2023-12-10 10:48:47,562:INFO:None
2023-12-10 10:48:47,562:INFO:Set up data.
2023-12-10 10:48:47,606:INFO:Set up folding strategy.
2023-12-10 10:48:47,606:INFO:Set up train/test split.
2023-12-10 10:48:47,689:INFO:Set up index.
2023-12-10 10:48:47,689:INFO:Assigning column types.
2023-12-10 10:48:47,706:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-10 10:48:47,780:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-10 10:48:47,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:48:47,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:47,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:47,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-10 10:48:47,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:48:47,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:47,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:47,940:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-10 10:48:48,040:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:48:48,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:48:48,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,207:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-10 10:48:48,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:48,440:INFO:Preparing preprocessing pipeline...
2023-12-10 10:48:48,440:INFO:Set up label encoding.
2023-12-10 10:48:48,440:INFO:Set up simple imputation.
2023-12-10 10:48:48,440:INFO:Set up encoding of ordinal features.
2023-12-10 10:48:48,440:INFO:Set up encoding of categorical features.
2023-12-10 10:48:48,440:INFO:Set up imbalanced handling.
2023-12-10 10:48:48,440:INFO:Set up column transformation.
2023-12-10 10:48:48,457:INFO:Set up column name cleaning.
2023-12-10 10:48:52,261:INFO:Finished creating preprocessing pipeline.
2023-12-10 10:48:52,294:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=Simp...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-10 10:48:52,294:INFO:Creating final display dataframe.
2023-12-10 10:48:56,969:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39032, 15)
5        Transformed data shape        (53252, 67)
6   Transformed train set shape        (41542, 67)
7    Transformed test set shape        (11710, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation             median
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method    borderlinesmote
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               806b
2023-12-10 10:48:57,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:57,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:57,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:57,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:48:57,182:INFO:setup() successfully completed in 9.69s...............
2023-12-10 10:48:57,232:INFO:Initializing compare_models()
2023-12-10 10:48:57,232:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-10 10:48:57,232:INFO:Checking exceptions
2023-12-10 10:48:57,246:INFO:Preparing display monitor
2023-12-10 10:48:57,288:INFO:Initializing Logistic Regression
2023-12-10 10:48:57,288:INFO:Total runtime is 0.0 minutes
2023-12-10 10:48:57,299:INFO:SubProcess create_model() called ==================================
2023-12-10 10:48:57,299:INFO:Initializing create_model()
2023-12-10 10:48:57,299:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:48:57,299:INFO:Checking exceptions
2023-12-10 10:48:57,299:INFO:Importing libraries
2023-12-10 10:48:57,299:INFO:Copying training dataset
2023-12-10 10:48:57,325:INFO:Defining folds
2023-12-10 10:48:57,325:INFO:Declaring metric variables
2023-12-10 10:48:57,336:INFO:Importing untrained model
2023-12-10 10:48:57,340:INFO:Logistic Regression Imported successfully
2023-12-10 10:48:57,349:INFO:Starting cross validation
2023-12-10 10:48:57,349:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:49:20,223:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:49:20,623:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:49:20,956:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:20,956:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:49:21,076:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:49:21,256:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:21,493:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:21,523:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:21,740:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:21,899:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:21,911:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:21,978:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:22,042:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:22,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:22,241:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:22,324:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:29,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:49:29,449:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:29,498:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:29,548:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:29,614:INFO:Calculating mean and std
2023-12-10 10:49:29,616:INFO:Creating metrics dataframe
2023-12-10 10:49:29,617:INFO:Uploading results into container
2023-12-10 10:49:29,617:INFO:Uploading model into container now
2023-12-10 10:49:29,617:INFO:_master_model_container: 1
2023-12-10 10:49:29,617:INFO:_display_container: 2
2023-12-10 10:49:29,617:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-10 10:49:29,617:INFO:create_model() successfully completed......................................
2023-12-10 10:49:29,881:INFO:SubProcess create_model() end ==================================
2023-12-10 10:49:29,881:INFO:Creating metrics dataframe
2023-12-10 10:49:29,881:INFO:Initializing K Neighbors Classifier
2023-12-10 10:49:29,881:INFO:Total runtime is 0.5432287693023682 minutes
2023-12-10 10:49:29,881:INFO:SubProcess create_model() called ==================================
2023-12-10 10:49:29,881:INFO:Initializing create_model()
2023-12-10 10:49:29,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:49:29,881:INFO:Checking exceptions
2023-12-10 10:49:29,881:INFO:Importing libraries
2023-12-10 10:49:29,881:INFO:Copying training dataset
2023-12-10 10:49:29,899:INFO:Defining folds
2023-12-10 10:49:29,899:INFO:Declaring metric variables
2023-12-10 10:49:29,915:INFO:Importing untrained model
2023-12-10 10:49:29,915:INFO:K Neighbors Classifier Imported successfully
2023-12-10 10:49:29,933:INFO:Starting cross validation
2023-12-10 10:49:29,941:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:49:46,871:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,083:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,150:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,244:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,283:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,318:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,352:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,434:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,452:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,485:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,600:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:47,616:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:53,965:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:54,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:54,074:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:49:54,160:INFO:Calculating mean and std
2023-12-10 10:49:54,160:INFO:Creating metrics dataframe
2023-12-10 10:49:54,175:INFO:Uploading results into container
2023-12-10 10:49:54,175:INFO:Uploading model into container now
2023-12-10 10:49:54,175:INFO:_master_model_container: 2
2023-12-10 10:49:54,175:INFO:_display_container: 2
2023-12-10 10:49:54,175:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-10 10:49:54,175:INFO:create_model() successfully completed......................................
2023-12-10 10:49:54,502:INFO:SubProcess create_model() end ==================================
2023-12-10 10:49:54,502:INFO:Creating metrics dataframe
2023-12-10 10:49:54,518:INFO:Initializing Naive Bayes
2023-12-10 10:49:54,518:INFO:Total runtime is 0.953832737604777 minutes
2023-12-10 10:49:54,518:INFO:SubProcess create_model() called ==================================
2023-12-10 10:49:54,518:INFO:Initializing create_model()
2023-12-10 10:49:54,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:49:54,518:INFO:Checking exceptions
2023-12-10 10:49:54,518:INFO:Importing libraries
2023-12-10 10:49:54,518:INFO:Copying training dataset
2023-12-10 10:49:54,533:INFO:Defining folds
2023-12-10 10:49:54,533:INFO:Declaring metric variables
2023-12-10 10:49:54,533:INFO:Importing untrained model
2023-12-10 10:49:54,549:INFO:Naive Bayes Imported successfully
2023-12-10 10:49:54,561:INFO:Starting cross validation
2023-12-10 10:49:54,576:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:50:03,432:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,502:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,506:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,565:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,582:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,633:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,638:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,682:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,682:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,748:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:03,865:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:07,543:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:07,627:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:07,669:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:07,760:INFO:Calculating mean and std
2023-12-10 10:50:07,762:INFO:Creating metrics dataframe
2023-12-10 10:50:07,769:INFO:Uploading results into container
2023-12-10 10:50:07,769:INFO:Uploading model into container now
2023-12-10 10:50:07,769:INFO:_master_model_container: 3
2023-12-10 10:50:07,769:INFO:_display_container: 2
2023-12-10 10:50:07,769:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-10 10:50:07,769:INFO:create_model() successfully completed......................................
2023-12-10 10:50:08,237:INFO:SubProcess create_model() end ==================================
2023-12-10 10:50:08,237:INFO:Creating metrics dataframe
2023-12-10 10:50:08,261:INFO:Initializing Decision Tree Classifier
2023-12-10 10:50:08,262:INFO:Total runtime is 1.182907470067342 minutes
2023-12-10 10:50:08,267:INFO:SubProcess create_model() called ==================================
2023-12-10 10:50:08,267:INFO:Initializing create_model()
2023-12-10 10:50:08,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:50:08,268:INFO:Checking exceptions
2023-12-10 10:50:08,268:INFO:Importing libraries
2023-12-10 10:50:08,268:INFO:Copying training dataset
2023-12-10 10:50:08,270:INFO:Defining folds
2023-12-10 10:50:08,270:INFO:Declaring metric variables
2023-12-10 10:50:08,289:INFO:Importing untrained model
2023-12-10 10:50:08,289:INFO:Decision Tree Classifier Imported successfully
2023-12-10 10:50:08,303:INFO:Starting cross validation
2023-12-10 10:50:08,303:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:50:17,596:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,629:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,646:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,696:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,713:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,735:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,746:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,818:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,830:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,846:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,863:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:17,927:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:20,516:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:20,548:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:20,599:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:20,666:INFO:Calculating mean and std
2023-12-10 10:50:20,666:INFO:Creating metrics dataframe
2023-12-10 10:50:20,682:INFO:Uploading results into container
2023-12-10 10:50:20,682:INFO:Uploading model into container now
2023-12-10 10:50:20,682:INFO:_master_model_container: 4
2023-12-10 10:50:20,682:INFO:_display_container: 2
2023-12-10 10:50:20,682:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-10 10:50:20,682:INFO:create_model() successfully completed......................................
2023-12-10 10:50:20,966:INFO:SubProcess create_model() end ==================================
2023-12-10 10:50:20,966:INFO:Creating metrics dataframe
2023-12-10 10:50:20,983:INFO:Initializing SVM - Linear Kernel
2023-12-10 10:50:20,983:INFO:Total runtime is 1.3949187199274697 minutes
2023-12-10 10:50:20,999:INFO:SubProcess create_model() called ==================================
2023-12-10 10:50:20,999:INFO:Initializing create_model()
2023-12-10 10:50:20,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:50:20,999:INFO:Checking exceptions
2023-12-10 10:50:20,999:INFO:Importing libraries
2023-12-10 10:50:20,999:INFO:Copying training dataset
2023-12-10 10:50:21,016:INFO:Defining folds
2023-12-10 10:50:21,016:INFO:Declaring metric variables
2023-12-10 10:50:21,016:INFO:Importing untrained model
2023-12-10 10:50:21,037:INFO:SVM - Linear Kernel Imported successfully
2023-12-10 10:50:21,049:INFO:Starting cross validation
2023-12-10 10:50:21,050:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:50:30,375:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:50:30,409:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:30,509:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:30,559:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:50:30,611:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:30,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:30,706:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:30,805:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:31,026:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:50:31,077:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:31,177:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:31,279:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:31,310:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:50:31,343:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:31,427:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:31,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:35,914:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:50:35,943:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:35,981:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:36,036:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:36,264:INFO:Calculating mean and std
2023-12-10 10:50:36,264:INFO:Creating metrics dataframe
2023-12-10 10:50:36,280:INFO:Uploading results into container
2023-12-10 10:50:36,281:INFO:Uploading model into container now
2023-12-10 10:50:36,281:INFO:_master_model_container: 5
2023-12-10 10:50:36,281:INFO:_display_container: 2
2023-12-10 10:50:36,281:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-10 10:50:36,281:INFO:create_model() successfully completed......................................
2023-12-10 10:50:36,682:INFO:SubProcess create_model() end ==================================
2023-12-10 10:50:36,682:INFO:Creating metrics dataframe
2023-12-10 10:50:36,698:INFO:Initializing Ridge Classifier
2023-12-10 10:50:36,698:INFO:Total runtime is 1.6568432331085203 minutes
2023-12-10 10:50:36,715:INFO:SubProcess create_model() called ==================================
2023-12-10 10:50:36,715:INFO:Initializing create_model()
2023-12-10 10:50:36,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:50:36,715:INFO:Checking exceptions
2023-12-10 10:50:36,715:INFO:Importing libraries
2023-12-10 10:50:36,715:INFO:Copying training dataset
2023-12-10 10:50:36,743:INFO:Defining folds
2023-12-10 10:50:36,743:INFO:Declaring metric variables
2023-12-10 10:50:36,749:INFO:Importing untrained model
2023-12-10 10:50:36,751:INFO:Ridge Classifier Imported successfully
2023-12-10 10:50:36,765:INFO:Starting cross validation
2023-12-10 10:50:36,782:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:50:45,473:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:50:45,481:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:50:45,525:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,530:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,555:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:50:45,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,615:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:50:45,661:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,701:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,704:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,745:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,805:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,858:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:45,907:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:48,428:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:50:48,462:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:48,512:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:48,560:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:50:48,630:INFO:Calculating mean and std
2023-12-10 10:50:48,630:INFO:Creating metrics dataframe
2023-12-10 10:50:48,630:INFO:Uploading results into container
2023-12-10 10:50:48,630:INFO:Uploading model into container now
2023-12-10 10:50:48,630:INFO:_master_model_container: 6
2023-12-10 10:50:48,630:INFO:_display_container: 2
2023-12-10 10:50:48,630:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-10 10:50:48,630:INFO:create_model() successfully completed......................................
2023-12-10 10:50:48,914:INFO:SubProcess create_model() end ==================================
2023-12-10 10:50:48,914:INFO:Creating metrics dataframe
2023-12-10 10:50:48,928:INFO:Initializing Random Forest Classifier
2023-12-10 10:50:48,929:INFO:Total runtime is 1.860693581899007 minutes
2023-12-10 10:50:48,930:INFO:SubProcess create_model() called ==================================
2023-12-10 10:50:48,930:INFO:Initializing create_model()
2023-12-10 10:50:48,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:50:48,930:INFO:Checking exceptions
2023-12-10 10:50:48,930:INFO:Importing libraries
2023-12-10 10:50:48,930:INFO:Copying training dataset
2023-12-10 10:50:48,946:INFO:Defining folds
2023-12-10 10:50:48,946:INFO:Declaring metric variables
2023-12-10 10:50:48,959:INFO:Importing untrained model
2023-12-10 10:50:48,964:INFO:Random Forest Classifier Imported successfully
2023-12-10 10:50:48,979:INFO:Starting cross validation
2023-12-10 10:50:48,979:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:51:16,738:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:16,738:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:16,922:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:16,981:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:16,985:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:17,070:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:17,089:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:17,139:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:17,155:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:17,238:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:17,255:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:17,472:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:25,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:25,521:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:25,597:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:25,781:INFO:Calculating mean and std
2023-12-10 10:51:25,781:INFO:Creating metrics dataframe
2023-12-10 10:51:25,797:INFO:Uploading results into container
2023-12-10 10:51:25,797:INFO:Uploading model into container now
2023-12-10 10:51:25,797:INFO:_master_model_container: 7
2023-12-10 10:51:25,797:INFO:_display_container: 2
2023-12-10 10:51:25,797:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-10 10:51:25,797:INFO:create_model() successfully completed......................................
2023-12-10 10:51:26,398:INFO:SubProcess create_model() end ==================================
2023-12-10 10:51:26,398:INFO:Creating metrics dataframe
2023-12-10 10:51:26,415:INFO:Initializing Quadratic Discriminant Analysis
2023-12-10 10:51:26,415:INFO:Total runtime is 2.485447307427724 minutes
2023-12-10 10:51:26,415:INFO:SubProcess create_model() called ==================================
2023-12-10 10:51:26,430:INFO:Initializing create_model()
2023-12-10 10:51:26,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:51:26,431:INFO:Checking exceptions
2023-12-10 10:51:26,431:INFO:Importing libraries
2023-12-10 10:51:26,431:INFO:Copying training dataset
2023-12-10 10:51:26,468:INFO:Defining folds
2023-12-10 10:51:26,468:INFO:Declaring metric variables
2023-12-10 10:51:26,472:INFO:Importing untrained model
2023-12-10 10:51:26,484:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-10 10:51:26,498:INFO:Starting cross validation
2023-12-10 10:51:26,515:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:51:35,357:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:51:35,457:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:51:35,507:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:51:35,507:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:51:36,542:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:36,676:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:36,725:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:36,742:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:36,801:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:36,804:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:36,845:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:36,861:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:37,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:37,009:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:37,096:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:37,198:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:39,995:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:51:40,362:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:40,441:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:40,478:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:40,545:INFO:Calculating mean and std
2023-12-10 10:51:40,562:INFO:Creating metrics dataframe
2023-12-10 10:51:40,564:INFO:Uploading results into container
2023-12-10 10:51:40,564:INFO:Uploading model into container now
2023-12-10 10:51:40,564:INFO:_master_model_container: 8
2023-12-10 10:51:40,564:INFO:_display_container: 2
2023-12-10 10:51:40,564:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-10 10:51:40,564:INFO:create_model() successfully completed......................................
2023-12-10 10:51:40,845:INFO:SubProcess create_model() end ==================================
2023-12-10 10:51:40,845:INFO:Creating metrics dataframe
2023-12-10 10:51:40,865:INFO:Initializing Ada Boost Classifier
2023-12-10 10:51:40,865:INFO:Total runtime is 2.7262956023216245 minutes
2023-12-10 10:51:40,881:INFO:SubProcess create_model() called ==================================
2023-12-10 10:51:40,881:INFO:Initializing create_model()
2023-12-10 10:51:40,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:51:40,881:INFO:Checking exceptions
2023-12-10 10:51:40,881:INFO:Importing libraries
2023-12-10 10:51:40,881:INFO:Copying training dataset
2023-12-10 10:51:40,896:INFO:Defining folds
2023-12-10 10:51:40,896:INFO:Declaring metric variables
2023-12-10 10:51:40,919:INFO:Importing untrained model
2023-12-10 10:51:40,925:INFO:Ada Boost Classifier Imported successfully
2023-12-10 10:51:40,929:INFO:Starting cross validation
2023-12-10 10:51:40,950:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:51:57,612:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,622:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,640:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,784:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,797:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,815:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,929:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,946:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,963:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:57,980:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:58,065:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:51:58,280:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:06,505:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:06,555:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:06,604:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:06,705:INFO:Calculating mean and std
2023-12-10 10:52:06,705:INFO:Creating metrics dataframe
2023-12-10 10:52:06,722:INFO:Uploading results into container
2023-12-10 10:52:06,724:INFO:Uploading model into container now
2023-12-10 10:52:06,724:INFO:_master_model_container: 9
2023-12-10 10:52:06,725:INFO:_display_container: 2
2023-12-10 10:52:06,725:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-10 10:52:06,726:INFO:create_model() successfully completed......................................
2023-12-10 10:52:07,022:INFO:SubProcess create_model() end ==================================
2023-12-10 10:52:07,022:INFO:Creating metrics dataframe
2023-12-10 10:52:07,049:INFO:Initializing Gradient Boosting Classifier
2023-12-10 10:52:07,054:INFO:Total runtime is 3.162771479288737 minutes
2023-12-10 10:52:07,055:INFO:SubProcess create_model() called ==================================
2023-12-10 10:52:07,055:INFO:Initializing create_model()
2023-12-10 10:52:07,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:52:07,055:INFO:Checking exceptions
2023-12-10 10:52:07,055:INFO:Importing libraries
2023-12-10 10:52:07,055:INFO:Copying training dataset
2023-12-10 10:52:07,081:INFO:Defining folds
2023-12-10 10:52:07,081:INFO:Declaring metric variables
2023-12-10 10:52:07,085:INFO:Importing untrained model
2023-12-10 10:52:07,090:INFO:Gradient Boosting Classifier Imported successfully
2023-12-10 10:52:07,105:INFO:Starting cross validation
2023-12-10 10:52:07,105:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:52:46,872:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,022:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,145:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,385:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,554:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,604:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,634:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,752:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,767:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,814:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:52:47,981:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:08,767:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:08,817:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:08,867:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:08,982:INFO:Calculating mean and std
2023-12-10 10:53:08,984:INFO:Creating metrics dataframe
2023-12-10 10:53:08,984:INFO:Uploading results into container
2023-12-10 10:53:08,984:INFO:Uploading model into container now
2023-12-10 10:53:09,001:INFO:_master_model_container: 10
2023-12-10 10:53:09,001:INFO:_display_container: 2
2023-12-10 10:53:09,001:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-10 10:53:09,001:INFO:create_model() successfully completed......................................
2023-12-10 10:53:09,401:INFO:SubProcess create_model() end ==================================
2023-12-10 10:53:09,401:INFO:Creating metrics dataframe
2023-12-10 10:53:09,434:INFO:Initializing Linear Discriminant Analysis
2023-12-10 10:53:09,434:INFO:Total runtime is 4.202437428633372 minutes
2023-12-10 10:53:09,452:INFO:SubProcess create_model() called ==================================
2023-12-10 10:53:09,453:INFO:Initializing create_model()
2023-12-10 10:53:09,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:53:09,453:INFO:Checking exceptions
2023-12-10 10:53:09,453:INFO:Importing libraries
2023-12-10 10:53:09,453:INFO:Copying training dataset
2023-12-10 10:53:09,467:INFO:Defining folds
2023-12-10 10:53:09,467:INFO:Declaring metric variables
2023-12-10 10:53:09,484:INFO:Importing untrained model
2023-12-10 10:53:09,502:INFO:Linear Discriminant Analysis Imported successfully
2023-12-10 10:53:09,525:INFO:Starting cross validation
2023-12-10 10:53:09,555:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:53:18,176:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,193:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,227:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,243:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,276:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,305:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,343:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,360:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,396:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,410:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,476:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:18,476:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:22,064:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:22,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:22,147:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:22,235:INFO:Calculating mean and std
2023-12-10 10:53:22,236:INFO:Creating metrics dataframe
2023-12-10 10:53:22,245:INFO:Uploading results into container
2023-12-10 10:53:22,247:INFO:Uploading model into container now
2023-12-10 10:53:22,248:INFO:_master_model_container: 11
2023-12-10 10:53:22,248:INFO:_display_container: 2
2023-12-10 10:53:22,249:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-10 10:53:22,249:INFO:create_model() successfully completed......................................
2023-12-10 10:53:22,518:INFO:SubProcess create_model() end ==================================
2023-12-10 10:53:22,518:INFO:Creating metrics dataframe
2023-12-10 10:53:22,567:INFO:Initializing Extra Trees Classifier
2023-12-10 10:53:22,567:INFO:Total runtime is 4.421315582593282 minutes
2023-12-10 10:53:22,567:INFO:SubProcess create_model() called ==================================
2023-12-10 10:53:22,567:INFO:Initializing create_model()
2023-12-10 10:53:22,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:53:22,567:INFO:Checking exceptions
2023-12-10 10:53:22,567:INFO:Importing libraries
2023-12-10 10:53:22,567:INFO:Copying training dataset
2023-12-10 10:53:22,681:INFO:Defining folds
2023-12-10 10:53:22,681:INFO:Declaring metric variables
2023-12-10 10:53:22,681:INFO:Importing untrained model
2023-12-10 10:53:22,697:INFO:Extra Trees Classifier Imported successfully
2023-12-10 10:53:22,718:INFO:Starting cross validation
2023-12-10 10:53:22,731:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:53:44,490:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:44,592:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:44,717:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:44,764:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:44,937:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:44,999:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:45,328:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:45,427:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:45,463:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:45,530:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:45,573:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:45,637:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:50,905:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:51,013:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:51,138:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:53:51,271:INFO:Calculating mean and std
2023-12-10 10:53:51,273:INFO:Creating metrics dataframe
2023-12-10 10:53:51,276:INFO:Uploading results into container
2023-12-10 10:53:51,276:INFO:Uploading model into container now
2023-12-10 10:53:51,276:INFO:_master_model_container: 12
2023-12-10 10:53:51,276:INFO:_display_container: 2
2023-12-10 10:53:51,276:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-10 10:53:51,276:INFO:create_model() successfully completed......................................
2023-12-10 10:53:51,609:INFO:SubProcess create_model() end ==================================
2023-12-10 10:53:51,609:INFO:Creating metrics dataframe
2023-12-10 10:53:51,649:INFO:Initializing Light Gradient Boosting Machine
2023-12-10 10:53:51,650:INFO:Total runtime is 4.90603049993515 minutes
2023-12-10 10:53:51,656:INFO:SubProcess create_model() called ==================================
2023-12-10 10:53:51,657:INFO:Initializing create_model()
2023-12-10 10:53:51,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:53:51,657:INFO:Checking exceptions
2023-12-10 10:53:51,658:INFO:Importing libraries
2023-12-10 10:53:51,658:INFO:Copying training dataset
2023-12-10 10:53:51,676:INFO:Defining folds
2023-12-10 10:53:51,676:INFO:Declaring metric variables
2023-12-10 10:53:51,697:INFO:Importing untrained model
2023-12-10 10:53:51,704:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:53:51,718:INFO:Starting cross validation
2023-12-10 10:53:51,725:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:54:01,576:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:01,667:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:01,807:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:01,901:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:01,970:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:02,052:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:02,210:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:02,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:02,318:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:02,351:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:02,414:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:02,452:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:05,971:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:06,033:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:06,080:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:06,143:INFO:Calculating mean and std
2023-12-10 10:54:06,143:INFO:Creating metrics dataframe
2023-12-10 10:54:06,143:INFO:Uploading results into container
2023-12-10 10:54:06,143:INFO:Uploading model into container now
2023-12-10 10:54:06,143:INFO:_master_model_container: 13
2023-12-10 10:54:06,158:INFO:_display_container: 2
2023-12-10 10:54:06,158:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:54:06,158:INFO:create_model() successfully completed......................................
2023-12-10 10:54:06,381:INFO:SubProcess create_model() end ==================================
2023-12-10 10:54:06,381:INFO:Creating metrics dataframe
2023-12-10 10:54:06,407:INFO:Initializing Dummy Classifier
2023-12-10 10:54:06,407:INFO:Total runtime is 5.151985470453898 minutes
2023-12-10 10:54:06,408:INFO:SubProcess create_model() called ==================================
2023-12-10 10:54:06,408:INFO:Initializing create_model()
2023-12-10 10:54:06,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C0A1096D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:54:06,408:INFO:Checking exceptions
2023-12-10 10:54:06,408:INFO:Importing libraries
2023-12-10 10:54:06,408:INFO:Copying training dataset
2023-12-10 10:54:06,432:INFO:Defining folds
2023-12-10 10:54:06,432:INFO:Declaring metric variables
2023-12-10 10:54:06,436:INFO:Importing untrained model
2023-12-10 10:54:06,443:INFO:Dummy Classifier Imported successfully
2023-12-10 10:54:06,451:INFO:Starting cross validation
2023-12-10 10:54:06,457:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:54:14,294:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,374:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,405:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,421:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,452:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:54:14,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,499:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,499:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,530:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,546:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:54:14,577:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:54:14,593:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,608:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,624:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:14,676:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:54:14,714:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:17,130:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:17,177:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:17,192:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:54:17,208:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:17,268:INFO:Calculating mean and std
2023-12-10 10:54:17,268:INFO:Creating metrics dataframe
2023-12-10 10:54:17,290:INFO:Uploading results into container
2023-12-10 10:54:17,291:INFO:Uploading model into container now
2023-12-10 10:54:17,291:INFO:_master_model_container: 14
2023-12-10 10:54:17,291:INFO:_display_container: 2
2023-12-10 10:54:17,291:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-10 10:54:17,291:INFO:create_model() successfully completed......................................
2023-12-10 10:54:17,507:INFO:SubProcess create_model() end ==================================
2023-12-10 10:54:17,507:INFO:Creating metrics dataframe
2023-12-10 10:54:17,538:INFO:Initializing create_model()
2023-12-10 10:54:17,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C76B24BB0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:54:17,538:INFO:Checking exceptions
2023-12-10 10:54:17,538:INFO:Importing libraries
2023-12-10 10:54:17,538:INFO:Copying training dataset
2023-12-10 10:54:17,559:INFO:Defining folds
2023-12-10 10:54:17,560:INFO:Declaring metric variables
2023-12-10 10:54:17,560:INFO:Importing untrained model
2023-12-10 10:54:17,560:INFO:Declaring custom model
2023-12-10 10:54:17,561:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:54:17,567:INFO:Cross validation set to False
2023-12-10 10:54:17,568:INFO:Fitting Model
2023-12-10 10:54:20,842:INFO:[LightGBM] [Info] Number of positive: 20771, number of negative: 20771
2023-12-10 10:54:20,868:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.011607 seconds.
2023-12-10 10:54:20,868:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-10 10:54:20,868:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-10 10:54:20,869:INFO:[LightGBM] [Info] Total Bins 12328
2023-12-10 10:54:20,870:INFO:[LightGBM] [Info] Number of data points in the train set: 41542, number of used features: 64
2023-12-10 10:54:20,871:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-12-10 10:54:21,821:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:54:21,821:INFO:create_model() successfully completed......................................
2023-12-10 10:54:22,171:INFO:_master_model_container: 14
2023-12-10 10:54:22,171:INFO:_display_container: 2
2023-12-10 10:54:22,171:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:54:22,171:INFO:compare_models() successfully completed......................................
2023-12-10 10:54:22,238:INFO:PyCaret ClassificationExperiment
2023-12-10 10:54:22,238:INFO:Logging name: clf-default-name
2023-12-10 10:54:22,238:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-10 10:54:22,238:INFO:version 3.2.0
2023-12-10 10:54:22,238:INFO:Initializing setup()
2023-12-10 10:54:22,238:INFO:self.USI: beb1
2023-12-10 10:54:22,238:INFO:self._variable_keys: {'USI', 'X_test', 'exp_name_log', 'fold_groups_param', 'is_multiclass', 'gpu_param', '_ml_usecase', 'X', 'y_train', 'n_jobs_param', 'pipeline', 'memory', 'fold_shuffle_param', 'data', 'seed', 'idx', 'fold_generator', 'log_plots_param', 'target_param', 'y', '_available_plots', 'html_param', 'X_train', 'fix_imbalance', 'y_test', 'gpu_n_jobs_param', 'exp_id', 'logging_param'}
2023-12-10 10:54:22,238:INFO:Checking environment
2023-12-10 10:54:22,238:INFO:python_version: 3.9.18
2023-12-10 10:54:22,238:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-10 10:54:22,238:INFO:machine: AMD64
2023-12-10 10:54:22,238:INFO:platform: Windows-10-10.0.19041-SP0
2023-12-10 10:54:22,238:INFO:Memory: svmem(total=7955767296, available=1402576896, percent=82.4, used=6553190400, free=1402576896)
2023-12-10 10:54:22,238:INFO:Physical Core: 2
2023-12-10 10:54:22,238:INFO:Logical Core: 4
2023-12-10 10:54:22,238:INFO:Checking libraries
2023-12-10 10:54:22,238:INFO:System:
2023-12-10 10:54:22,238:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-10 10:54:22,238:INFO:executable: c:\Users\Mario T\anaconda3\envs\Proyecto_final\python.exe
2023-12-10 10:54:22,238:INFO:   machine: Windows-10-10.0.19041-SP0
2023-12-10 10:54:22,238:INFO:PyCaret required dependencies:
2023-12-10 10:54:22,238:INFO:                 pip: 23.3.1
2023-12-10 10:54:22,238:INFO:          setuptools: 68.0.0
2023-12-10 10:54:22,238:INFO:             pycaret: 3.2.0
2023-12-10 10:54:22,238:INFO:             IPython: 8.15.0
2023-12-10 10:54:22,238:INFO:          ipywidgets: 7.6.5
2023-12-10 10:54:22,238:INFO:                tqdm: 4.64.1
2023-12-10 10:54:22,238:INFO:               numpy: 1.25.2
2023-12-10 10:54:22,238:INFO:              pandas: 1.5.3
2023-12-10 10:54:22,238:INFO:              jinja2: 3.1.2
2023-12-10 10:54:22,238:INFO:               scipy: 1.9.3
2023-12-10 10:54:22,238:INFO:              joblib: 1.2.0
2023-12-10 10:54:22,238:INFO:             sklearn: 1.2.2
2023-12-10 10:54:22,238:INFO:                pyod: 1.1.2
2023-12-10 10:54:22,238:INFO:            imblearn: 0.11.0
2023-12-10 10:54:22,238:INFO:   category_encoders: 2.6.3
2023-12-10 10:54:22,238:INFO:            lightgbm: 4.1.0
2023-12-10 10:54:22,238:INFO:               numba: 0.58.1
2023-12-10 10:54:22,238:INFO:            requests: 2.28.1
2023-12-10 10:54:22,238:INFO:          matplotlib: 3.6.2
2023-12-10 10:54:22,238:INFO:          scikitplot: 0.3.7
2023-12-10 10:54:22,238:INFO:         yellowbrick: 1.5
2023-12-10 10:54:22,238:INFO:              plotly: 5.18.0
2023-12-10 10:54:22,238:INFO:    plotly-resampler: Not installed
2023-12-10 10:54:22,238:INFO:             kaleido: 0.2.1
2023-12-10 10:54:22,238:INFO:           schemdraw: 0.15
2023-12-10 10:54:22,238:INFO:         statsmodels: 0.14.0
2023-12-10 10:54:22,238:INFO:              sktime: 0.21.1
2023-12-10 10:54:22,238:INFO:               tbats: 1.1.3
2023-12-10 10:54:22,238:INFO:            pmdarima: 2.0.4
2023-12-10 10:54:22,238:INFO:              psutil: 5.9.0
2023-12-10 10:54:22,238:INFO:          markupsafe: 2.1.1
2023-12-10 10:54:22,238:INFO:             pickle5: Not installed
2023-12-10 10:54:22,238:INFO:         cloudpickle: 3.0.0
2023-12-10 10:54:22,238:INFO:         deprecation: 2.1.0
2023-12-10 10:54:22,238:INFO:              xxhash: 3.4.1
2023-12-10 10:54:22,238:INFO:           wurlitzer: Not installed
2023-12-10 10:54:22,238:INFO:PyCaret optional dependencies:
2023-12-10 10:54:22,238:INFO:                shap: 0.43.0
2023-12-10 10:54:22,238:INFO:           interpret: 0.4.4
2023-12-10 10:54:22,238:INFO:                umap: 0.5.5
2023-12-10 10:54:22,238:INFO:     ydata_profiling: 4.6.2
2023-12-10 10:54:22,238:INFO:  explainerdashboard: 0.4.3
2023-12-10 10:54:22,238:INFO:             autoviz: Not installed
2023-12-10 10:54:22,238:INFO:           fairlearn: 0.7.0
2023-12-10 10:54:22,238:INFO:          deepchecks: Not installed
2023-12-10 10:54:22,238:INFO:             xgboost: Not installed
2023-12-10 10:54:22,238:INFO:            catboost: Not installed
2023-12-10 10:54:22,238:INFO:              kmodes: Not installed
2023-12-10 10:54:22,238:INFO:             mlxtend: Not installed
2023-12-10 10:54:22,238:INFO:       statsforecast: Not installed
2023-12-10 10:54:22,238:INFO:        tune_sklearn: Not installed
2023-12-10 10:54:22,238:INFO:                 ray: Not installed
2023-12-10 10:54:22,238:INFO:            hyperopt: Not installed
2023-12-10 10:54:22,238:INFO:              optuna: Not installed
2023-12-10 10:54:22,238:INFO:               skopt: Not installed
2023-12-10 10:54:22,238:INFO:              mlflow: Not installed
2023-12-10 10:54:22,238:INFO:              gradio: Not installed
2023-12-10 10:54:22,238:INFO:             fastapi: Not installed
2023-12-10 10:54:22,238:INFO:             uvicorn: Not installed
2023-12-10 10:54:22,238:INFO:              m2cgen: Not installed
2023-12-10 10:54:22,238:INFO:           evidently: Not installed
2023-12-10 10:54:22,254:INFO:               fugue: Not installed
2023-12-10 10:54:22,254:INFO:           streamlit: 1.26.0
2023-12-10 10:54:22,254:INFO:             prophet: Not installed
2023-12-10 10:54:22,254:INFO:None
2023-12-10 10:54:22,254:INFO:Set up data.
2023-12-10 10:54:22,372:INFO:Set up folding strategy.
2023-12-10 10:54:22,372:INFO:Set up train/test split.
2023-12-10 10:54:22,464:INFO:Set up index.
2023-12-10 10:54:22,472:INFO:Assigning column types.
2023-12-10 10:54:22,478:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-10 10:54:22,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-10 10:54:22,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:54:22,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:22,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:22,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-10 10:54:22,671:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:54:22,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:22,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:22,736:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-10 10:54:22,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:54:22,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:22,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:23,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-10 10:54:23,121:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:23,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:23,121:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-10 10:54:23,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:23,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:23,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:23,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:23,703:INFO:Preparing preprocessing pipeline...
2023-12-10 10:54:23,709:INFO:Set up label encoding.
2023-12-10 10:54:23,709:INFO:Set up simple imputation.
2023-12-10 10:54:23,742:INFO:Set up encoding of ordinal features.
2023-12-10 10:54:23,748:INFO:Set up encoding of categorical features.
2023-12-10 10:54:23,748:INFO:Set up imbalanced handling.
2023-12-10 10:54:23,748:INFO:Set up column transformation.
2023-12-10 10:54:23,748:INFO:Set up column name cleaning.
2023-12-10 10:54:26,507:INFO:Finished creating preprocessing pipeline.
2023-12-10 10:54:26,523:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-10 10:54:26,523:INFO:Creating final display dataframe.
2023-12-10 10:54:29,372:INFO:Setup _display_container:                     Description              Value
0                    Session id               2023
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (39032, 15)
5        Transformed data shape        (53752, 67)
6   Transformed train set shape        (42042, 67)
7    Transformed test set shape        (11710, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation                knn
14       Categorical imputation                knn
15     Maximum one-hot encoding                 25
16              Encoding method               None
17                Fix imbalance               True
18         Fix imbalance method             adasyn
19               Transformation               True
20        Transformation method           quantile
21               Fold Generator    StratifiedKFold
22                  Fold Number                 10
23                     CPU Jobs                 -1
24                      Use GPU              False
25               Log Experiment              False
26              Experiment Name   clf-default-name
27                          USI               beb1
2023-12-10 10:54:29,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:29,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:29,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:29,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-10 10:54:29,628:INFO:setup() successfully completed in 7.44s...............
2023-12-10 10:54:29,628:INFO:Initializing compare_models()
2023-12-10 10:54:29,628:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, include=None, fold=5, round=2, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, 'include': None, 'exclude': None, 'fold': 5, 'round': 2, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-10 10:54:29,628:INFO:Checking exceptions
2023-12-10 10:54:29,630:INFO:Preparing display monitor
2023-12-10 10:54:29,670:INFO:Initializing Logistic Regression
2023-12-10 10:54:29,671:INFO:Total runtime is 1.662572224934896e-05 minutes
2023-12-10 10:54:29,681:INFO:SubProcess create_model() called ==================================
2023-12-10 10:54:29,682:INFO:Initializing create_model()
2023-12-10 10:54:29,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:54:29,682:INFO:Checking exceptions
2023-12-10 10:54:29,682:INFO:Importing libraries
2023-12-10 10:54:29,682:INFO:Copying training dataset
2023-12-10 10:54:29,700:INFO:Defining folds
2023-12-10 10:54:29,700:INFO:Declaring metric variables
2023-12-10 10:54:29,703:INFO:Importing untrained model
2023-12-10 10:54:29,708:INFO:Logistic Regression Imported successfully
2023-12-10 10:54:29,719:INFO:Starting cross validation
2023-12-10 10:54:29,726:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:54:48,349:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:54:48,648:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:54:48,653:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:54:48,748:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:54:48,914:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,104:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,214:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,241:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,250:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,341:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,351:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,351:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,463:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:49,601:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:56,258:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-10 10:54:56,467:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:56,523:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:56,554:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:54:56,617:INFO:Calculating mean and std
2023-12-10 10:54:56,617:INFO:Creating metrics dataframe
2023-12-10 10:54:56,617:INFO:Uploading results into container
2023-12-10 10:54:56,617:INFO:Uploading model into container now
2023-12-10 10:54:56,617:INFO:_master_model_container: 1
2023-12-10 10:54:56,617:INFO:_display_container: 2
2023-12-10 10:54:56,617:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2023, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-10 10:54:56,617:INFO:create_model() successfully completed......................................
2023-12-10 10:54:56,856:INFO:SubProcess create_model() end ==================================
2023-12-10 10:54:56,856:INFO:Creating metrics dataframe
2023-12-10 10:54:56,872:INFO:Initializing K Neighbors Classifier
2023-12-10 10:54:56,872:INFO:Total runtime is 0.4533698956171672 minutes
2023-12-10 10:54:56,872:INFO:SubProcess create_model() called ==================================
2023-12-10 10:54:56,872:INFO:Initializing create_model()
2023-12-10 10:54:56,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:54:56,872:INFO:Checking exceptions
2023-12-10 10:54:56,872:INFO:Importing libraries
2023-12-10 10:54:56,872:INFO:Copying training dataset
2023-12-10 10:54:56,888:INFO:Defining folds
2023-12-10 10:54:56,888:INFO:Declaring metric variables
2023-12-10 10:54:56,888:INFO:Importing untrained model
2023-12-10 10:54:56,906:INFO:K Neighbors Classifier Imported successfully
2023-12-10 10:54:56,914:INFO:Starting cross validation
2023-12-10 10:54:56,919:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:55:12,522:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:12,707:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:12,814:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:12,973:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:13,112:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:13,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:13,347:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:13,684:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:13,739:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:13,870:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:13,883:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:14,092:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:20,148:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:20,214:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:20,264:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:20,331:INFO:Calculating mean and std
2023-12-10 10:55:20,331:INFO:Creating metrics dataframe
2023-12-10 10:55:20,331:INFO:Uploading results into container
2023-12-10 10:55:20,331:INFO:Uploading model into container now
2023-12-10 10:55:20,331:INFO:_master_model_container: 2
2023-12-10 10:55:20,331:INFO:_display_container: 2
2023-12-10 10:55:20,331:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-10 10:55:20,331:INFO:create_model() successfully completed......................................
2023-12-10 10:55:20,665:INFO:SubProcess create_model() end ==================================
2023-12-10 10:55:20,665:INFO:Creating metrics dataframe
2023-12-10 10:55:20,665:INFO:Initializing Naive Bayes
2023-12-10 10:55:20,665:INFO:Total runtime is 0.8499179164568583 minutes
2023-12-10 10:55:20,682:INFO:SubProcess create_model() called ==================================
2023-12-10 10:55:20,682:INFO:Initializing create_model()
2023-12-10 10:55:20,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:55:20,682:INFO:Checking exceptions
2023-12-10 10:55:20,682:INFO:Importing libraries
2023-12-10 10:55:20,682:INFO:Copying training dataset
2023-12-10 10:55:20,702:INFO:Defining folds
2023-12-10 10:55:20,702:INFO:Declaring metric variables
2023-12-10 10:55:20,707:INFO:Importing untrained model
2023-12-10 10:55:20,713:INFO:Naive Bayes Imported successfully
2023-12-10 10:55:20,716:INFO:Starting cross validation
2023-12-10 10:55:20,731:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:55:27,222:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,342:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,406:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,406:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,422:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,492:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,553:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,605:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,605:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,640:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,795:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:27,795:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:30,925:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:30,975:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:31,025:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:31,125:INFO:Calculating mean and std
2023-12-10 10:55:31,125:INFO:Creating metrics dataframe
2023-12-10 10:55:31,142:INFO:Uploading results into container
2023-12-10 10:55:31,142:INFO:Uploading model into container now
2023-12-10 10:55:31,142:INFO:_master_model_container: 3
2023-12-10 10:55:31,142:INFO:_display_container: 2
2023-12-10 10:55:31,142:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-10 10:55:31,142:INFO:create_model() successfully completed......................................
2023-12-10 10:55:31,492:INFO:SubProcess create_model() end ==================================
2023-12-10 10:55:31,492:INFO:Creating metrics dataframe
2023-12-10 10:55:31,509:INFO:Initializing Decision Tree Classifier
2023-12-10 10:55:31,509:INFO:Total runtime is 1.0306525349617004 minutes
2023-12-10 10:55:31,509:INFO:SubProcess create_model() called ==================================
2023-12-10 10:55:31,509:INFO:Initializing create_model()
2023-12-10 10:55:31,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:55:31,509:INFO:Checking exceptions
2023-12-10 10:55:31,509:INFO:Importing libraries
2023-12-10 10:55:31,509:INFO:Copying training dataset
2023-12-10 10:55:31,526:INFO:Defining folds
2023-12-10 10:55:31,526:INFO:Declaring metric variables
2023-12-10 10:55:31,526:INFO:Importing untrained model
2023-12-10 10:55:31,542:INFO:Decision Tree Classifier Imported successfully
2023-12-10 10:55:31,544:INFO:Starting cross validation
2023-12-10 10:55:31,558:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:55:38,883:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:38,949:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:38,984:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,000:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,017:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,084:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,114:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,117:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,133:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,217:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:39,250:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:42,633:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:42,754:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:42,870:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:42,996:INFO:Calculating mean and std
2023-12-10 10:55:42,999:INFO:Creating metrics dataframe
2023-12-10 10:55:43,007:INFO:Uploading results into container
2023-12-10 10:55:43,007:INFO:Uploading model into container now
2023-12-10 10:55:43,007:INFO:_master_model_container: 4
2023-12-10 10:55:43,007:INFO:_display_container: 2
2023-12-10 10:55:43,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2023, splitter='best')
2023-12-10 10:55:43,007:INFO:create_model() successfully completed......................................
2023-12-10 10:55:43,457:INFO:SubProcess create_model() end ==================================
2023-12-10 10:55:43,458:INFO:Creating metrics dataframe
2023-12-10 10:55:43,488:INFO:Initializing SVM - Linear Kernel
2023-12-10 10:55:43,488:INFO:Total runtime is 1.2303072810173035 minutes
2023-12-10 10:55:43,488:INFO:SubProcess create_model() called ==================================
2023-12-10 10:55:43,488:INFO:Initializing create_model()
2023-12-10 10:55:43,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:55:43,488:INFO:Checking exceptions
2023-12-10 10:55:43,488:INFO:Importing libraries
2023-12-10 10:55:43,488:INFO:Copying training dataset
2023-12-10 10:55:43,526:INFO:Defining folds
2023-12-10 10:55:43,526:INFO:Declaring metric variables
2023-12-10 10:55:43,542:INFO:Importing untrained model
2023-12-10 10:55:43,553:INFO:SVM - Linear Kernel Imported successfully
2023-12-10 10:55:43,575:INFO:Starting cross validation
2023-12-10 10:55:43,575:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:55:52,347:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:55:52,391:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:52,483:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:52,497:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:55:52,530:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:52,566:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:52,632:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:52,733:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:53,248:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:55:53,300:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:53,403:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:53,412:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:55:53,448:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:53,501:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:53,531:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:53,705:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:57,236:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-10 10:55:57,253:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:57,302:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:57,335:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:55:57,485:INFO:Calculating mean and std
2023-12-10 10:55:57,485:INFO:Creating metrics dataframe
2023-12-10 10:55:57,485:INFO:Uploading results into container
2023-12-10 10:55:57,485:INFO:Uploading model into container now
2023-12-10 10:55:57,485:INFO:_master_model_container: 5
2023-12-10 10:55:57,485:INFO:_display_container: 2
2023-12-10 10:55:57,485:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2023, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-10 10:55:57,501:INFO:create_model() successfully completed......................................
2023-12-10 10:55:57,768:INFO:SubProcess create_model() end ==================================
2023-12-10 10:55:57,768:INFO:Creating metrics dataframe
2023-12-10 10:55:57,785:INFO:Initializing Ridge Classifier
2023-12-10 10:55:57,785:INFO:Total runtime is 1.4685903668403626 minutes
2023-12-10 10:55:57,785:INFO:SubProcess create_model() called ==================================
2023-12-10 10:55:57,785:INFO:Initializing create_model()
2023-12-10 10:55:57,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:55:57,785:INFO:Checking exceptions
2023-12-10 10:55:57,785:INFO:Importing libraries
2023-12-10 10:55:57,785:INFO:Copying training dataset
2023-12-10 10:55:57,802:INFO:Defining folds
2023-12-10 10:55:57,802:INFO:Declaring metric variables
2023-12-10 10:55:57,802:INFO:Importing untrained model
2023-12-10 10:55:57,823:INFO:Ridge Classifier Imported successfully
2023-12-10 10:55:57,835:INFO:Starting cross validation
2023-12-10 10:55:57,835:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:56:05,393:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:56:05,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:56:05,443:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,476:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,493:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:56:05,526:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,576:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:56:05,576:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,616:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,668:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,677:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,693:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,743:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,776:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,828:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:05,877:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:08,551:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-10 10:56:08,563:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:08,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:08,663:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:08,730:INFO:Calculating mean and std
2023-12-10 10:56:08,732:INFO:Creating metrics dataframe
2023-12-10 10:56:08,734:INFO:Uploading results into container
2023-12-10 10:56:08,734:INFO:Uploading model into container now
2023-12-10 10:56:08,734:INFO:_master_model_container: 6
2023-12-10 10:56:08,734:INFO:_display_container: 2
2023-12-10 10:56:08,734:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2023, solver='auto',
                tol=0.0001)
2023-12-10 10:56:08,734:INFO:create_model() successfully completed......................................
2023-12-10 10:56:08,990:INFO:SubProcess create_model() end ==================================
2023-12-10 10:56:08,991:INFO:Creating metrics dataframe
2023-12-10 10:56:08,996:INFO:Initializing Random Forest Classifier
2023-12-10 10:56:08,996:INFO:Total runtime is 1.655440616607666 minutes
2023-12-10 10:56:08,996:INFO:SubProcess create_model() called ==================================
2023-12-10 10:56:08,996:INFO:Initializing create_model()
2023-12-10 10:56:08,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:56:08,996:INFO:Checking exceptions
2023-12-10 10:56:08,996:INFO:Importing libraries
2023-12-10 10:56:08,996:INFO:Copying training dataset
2023-12-10 10:56:09,013:INFO:Defining folds
2023-12-10 10:56:09,013:INFO:Declaring metric variables
2023-12-10 10:56:09,030:INFO:Importing untrained model
2023-12-10 10:56:09,037:INFO:Random Forest Classifier Imported successfully
2023-12-10 10:56:09,050:INFO:Starting cross validation
2023-12-10 10:56:09,050:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:56:34,055:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:34,088:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:34,208:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:34,290:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:34,525:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:34,555:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:34,792:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:35,093:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:35,184:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:35,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:35,290:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:35,523:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:43,948:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:44,010:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:44,048:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:44,114:INFO:Calculating mean and std
2023-12-10 10:56:44,114:INFO:Creating metrics dataframe
2023-12-10 10:56:44,131:INFO:Uploading results into container
2023-12-10 10:56:44,131:INFO:Uploading model into container now
2023-12-10 10:56:44,131:INFO:_master_model_container: 7
2023-12-10 10:56:44,131:INFO:_display_container: 2
2023-12-10 10:56:44,131:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2023, verbose=0, warm_start=False)
2023-12-10 10:56:44,131:INFO:create_model() successfully completed......................................
2023-12-10 10:56:44,382:INFO:SubProcess create_model() end ==================================
2023-12-10 10:56:44,382:INFO:Creating metrics dataframe
2023-12-10 10:56:44,401:INFO:Initializing Quadratic Discriminant Analysis
2023-12-10 10:56:44,401:INFO:Total runtime is 2.2455250938733418 minutes
2023-12-10 10:56:44,409:INFO:SubProcess create_model() called ==================================
2023-12-10 10:56:44,409:INFO:Initializing create_model()
2023-12-10 10:56:44,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:56:44,410:INFO:Checking exceptions
2023-12-10 10:56:44,410:INFO:Importing libraries
2023-12-10 10:56:44,410:INFO:Copying training dataset
2023-12-10 10:56:44,415:INFO:Defining folds
2023-12-10 10:56:44,415:INFO:Declaring metric variables
2023-12-10 10:56:44,432:INFO:Importing untrained model
2023-12-10 10:56:44,432:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-10 10:56:44,450:INFO:Starting cross validation
2023-12-10 10:56:44,450:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:56:51,072:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:56:51,122:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:56:51,206:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:56:51,222:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:56:52,056:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,106:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,106:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,123:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,206:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,223:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,256:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,273:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,356:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,377:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,390:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:52,423:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:55,076:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-10 10:56:55,376:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:55,426:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:55,476:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:56:55,542:INFO:Calculating mean and std
2023-12-10 10:56:55,543:INFO:Creating metrics dataframe
2023-12-10 10:56:55,543:INFO:Uploading results into container
2023-12-10 10:56:55,543:INFO:Uploading model into container now
2023-12-10 10:56:55,543:INFO:_master_model_container: 8
2023-12-10 10:56:55,543:INFO:_display_container: 2
2023-12-10 10:56:55,543:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-10 10:56:55,543:INFO:create_model() successfully completed......................................
2023-12-10 10:56:55,810:INFO:SubProcess create_model() end ==================================
2023-12-10 10:56:55,810:INFO:Creating metrics dataframe
2023-12-10 10:56:55,810:INFO:Initializing Ada Boost Classifier
2023-12-10 10:56:55,810:INFO:Total runtime is 2.435671027501424 minutes
2023-12-10 10:56:55,827:INFO:SubProcess create_model() called ==================================
2023-12-10 10:56:55,827:INFO:Initializing create_model()
2023-12-10 10:56:55,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:56:55,827:INFO:Checking exceptions
2023-12-10 10:56:55,827:INFO:Importing libraries
2023-12-10 10:56:55,827:INFO:Copying training dataset
2023-12-10 10:56:55,876:INFO:Defining folds
2023-12-10 10:56:55,876:INFO:Declaring metric variables
2023-12-10 10:56:55,876:INFO:Importing untrained model
2023-12-10 10:56:55,876:INFO:Ada Boost Classifier Imported successfully
2023-12-10 10:56:55,911:INFO:Starting cross validation
2023-12-10 10:56:55,915:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:57:10,626:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:10,825:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,062:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,192:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,209:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,225:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,292:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,309:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,325:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,429:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,461:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:11,492:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:18,866:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:18,958:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:19,010:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:19,066:INFO:Calculating mean and std
2023-12-10 10:57:19,066:INFO:Creating metrics dataframe
2023-12-10 10:57:19,083:INFO:Uploading results into container
2023-12-10 10:57:19,083:INFO:Uploading model into container now
2023-12-10 10:57:19,083:INFO:_master_model_container: 9
2023-12-10 10:57:19,083:INFO:_display_container: 2
2023-12-10 10:57:19,083:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2023)
2023-12-10 10:57:19,083:INFO:create_model() successfully completed......................................
2023-12-10 10:57:19,342:INFO:SubProcess create_model() end ==================================
2023-12-10 10:57:19,342:INFO:Creating metrics dataframe
2023-12-10 10:57:19,350:INFO:Initializing Gradient Boosting Classifier
2023-12-10 10:57:19,350:INFO:Total runtime is 2.8280000527699785 minutes
2023-12-10 10:57:19,367:INFO:SubProcess create_model() called ==================================
2023-12-10 10:57:19,367:INFO:Initializing create_model()
2023-12-10 10:57:19,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:57:19,367:INFO:Checking exceptions
2023-12-10 10:57:19,367:INFO:Importing libraries
2023-12-10 10:57:19,367:INFO:Copying training dataset
2023-12-10 10:57:19,383:INFO:Defining folds
2023-12-10 10:57:19,383:INFO:Declaring metric variables
2023-12-10 10:57:19,407:INFO:Importing untrained model
2023-12-10 10:57:19,415:INFO:Gradient Boosting Classifier Imported successfully
2023-12-10 10:57:19,417:INFO:Starting cross validation
2023-12-10 10:57:19,439:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:57:58,158:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:58,276:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:58,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:58,589:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:58,856:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:58,874:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:59,023:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:59,147:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:59,270:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:59,353:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:59,407:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:57:59,546:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:18,651:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:18,726:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:18,777:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:18,864:INFO:Calculating mean and std
2023-12-10 10:58:18,868:INFO:Creating metrics dataframe
2023-12-10 10:58:18,868:INFO:Uploading results into container
2023-12-10 10:58:18,868:INFO:Uploading model into container now
2023-12-10 10:58:18,868:INFO:_master_model_container: 10
2023-12-10 10:58:18,875:INFO:_display_container: 2
2023-12-10 10:58:18,878:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-10 10:58:18,879:INFO:create_model() successfully completed......................................
2023-12-10 10:58:19,253:INFO:SubProcess create_model() end ==================================
2023-12-10 10:58:19,253:INFO:Creating metrics dataframe
2023-12-10 10:58:19,276:INFO:Initializing Linear Discriminant Analysis
2023-12-10 10:58:19,276:INFO:Total runtime is 3.8267732779184973 minutes
2023-12-10 10:58:19,276:INFO:SubProcess create_model() called ==================================
2023-12-10 10:58:19,276:INFO:Initializing create_model()
2023-12-10 10:58:19,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:58:19,276:INFO:Checking exceptions
2023-12-10 10:58:19,276:INFO:Importing libraries
2023-12-10 10:58:19,276:INFO:Copying training dataset
2023-12-10 10:58:19,293:INFO:Defining folds
2023-12-10 10:58:19,293:INFO:Declaring metric variables
2023-12-10 10:58:19,310:INFO:Importing untrained model
2023-12-10 10:58:19,321:INFO:Linear Discriminant Analysis Imported successfully
2023-12-10 10:58:19,335:INFO:Starting cross validation
2023-12-10 10:58:19,346:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:58:27,920:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,005:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,024:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,061:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,071:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,152:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,185:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,185:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,286:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,320:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:28,328:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:31,557:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:31,615:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:31,657:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:31,741:INFO:Calculating mean and std
2023-12-10 10:58:31,742:INFO:Creating metrics dataframe
2023-12-10 10:58:31,747:INFO:Uploading results into container
2023-12-10 10:58:31,748:INFO:Uploading model into container now
2023-12-10 10:58:31,748:INFO:_master_model_container: 11
2023-12-10 10:58:31,748:INFO:_display_container: 2
2023-12-10 10:58:31,749:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-10 10:58:31,750:INFO:create_model() successfully completed......................................
2023-12-10 10:58:32,022:INFO:SubProcess create_model() end ==================================
2023-12-10 10:58:32,022:INFO:Creating metrics dataframe
2023-12-10 10:58:32,042:INFO:Initializing Extra Trees Classifier
2023-12-10 10:58:32,042:INFO:Total runtime is 4.0395351568857825 minutes
2023-12-10 10:58:32,046:INFO:SubProcess create_model() called ==================================
2023-12-10 10:58:32,046:INFO:Initializing create_model()
2023-12-10 10:58:32,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:58:32,048:INFO:Checking exceptions
2023-12-10 10:58:32,048:INFO:Importing libraries
2023-12-10 10:58:32,048:INFO:Copying training dataset
2023-12-10 10:58:32,057:INFO:Defining folds
2023-12-10 10:58:32,057:INFO:Declaring metric variables
2023-12-10 10:58:32,057:INFO:Importing untrained model
2023-12-10 10:58:32,075:INFO:Extra Trees Classifier Imported successfully
2023-12-10 10:58:32,088:INFO:Starting cross validation
2023-12-10 10:58:32,091:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:58:53,711:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:53,744:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:53,894:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:53,928:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,195:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,512:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,591:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,662:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,712:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,796:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:58:54,829:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:01,153:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:01,235:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:01,302:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:01,385:INFO:Calculating mean and std
2023-12-10 10:59:01,385:INFO:Creating metrics dataframe
2023-12-10 10:59:01,402:INFO:Uploading results into container
2023-12-10 10:59:01,402:INFO:Uploading model into container now
2023-12-10 10:59:01,402:INFO:_master_model_container: 12
2023-12-10 10:59:01,402:INFO:_display_container: 2
2023-12-10 10:59:01,402:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2023, verbose=0, warm_start=False)
2023-12-10 10:59:01,402:INFO:create_model() successfully completed......................................
2023-12-10 10:59:01,721:INFO:SubProcess create_model() end ==================================
2023-12-10 10:59:01,721:INFO:Creating metrics dataframe
2023-12-10 10:59:01,735:INFO:Initializing Light Gradient Boosting Machine
2023-12-10 10:59:01,735:INFO:Total runtime is 4.534426788489023 minutes
2023-12-10 10:59:01,735:INFO:SubProcess create_model() called ==================================
2023-12-10 10:59:01,735:INFO:Initializing create_model()
2023-12-10 10:59:01,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:59:01,735:INFO:Checking exceptions
2023-12-10 10:59:01,735:INFO:Importing libraries
2023-12-10 10:59:01,735:INFO:Copying training dataset
2023-12-10 10:59:01,769:INFO:Defining folds
2023-12-10 10:59:01,769:INFO:Declaring metric variables
2023-12-10 10:59:01,769:INFO:Importing untrained model
2023-12-10 10:59:01,787:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:59:01,802:INFO:Starting cross validation
2023-12-10 10:59:01,819:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:59:12,386:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,396:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,430:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,496:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,496:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,530:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,613:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,664:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,789:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,864:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:12,968:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:16,968:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:17,101:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:17,201:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:17,301:INFO:Calculating mean and std
2023-12-10 10:59:17,320:INFO:Creating metrics dataframe
2023-12-10 10:59:17,327:INFO:Uploading results into container
2023-12-10 10:59:17,329:INFO:Uploading model into container now
2023-12-10 10:59:17,329:INFO:_master_model_container: 13
2023-12-10 10:59:17,329:INFO:_display_container: 2
2023-12-10 10:59:17,330:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:59:17,330:INFO:create_model() successfully completed......................................
2023-12-10 10:59:17,631:INFO:SubProcess create_model() end ==================================
2023-12-10 10:59:17,631:INFO:Creating metrics dataframe
2023-12-10 10:59:17,654:INFO:Initializing Dummy Classifier
2023-12-10 10:59:17,654:INFO:Total runtime is 4.799745182196299 minutes
2023-12-10 10:59:17,670:INFO:SubProcess create_model() called ==================================
2023-12-10 10:59:17,670:INFO:Initializing create_model()
2023-12-10 10:59:17,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C284EF4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:59:17,670:INFO:Checking exceptions
2023-12-10 10:59:17,671:INFO:Importing libraries
2023-12-10 10:59:17,671:INFO:Copying training dataset
2023-12-10 10:59:17,687:INFO:Defining folds
2023-12-10 10:59:17,687:INFO:Declaring metric variables
2023-12-10 10:59:17,704:INFO:Importing untrained model
2023-12-10 10:59:17,704:INFO:Dummy Classifier Imported successfully
2023-12-10 10:59:17,726:INFO:Starting cross validation
2023-12-10 10:59:17,743:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-12-10 10:59:24,145:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,241:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,267:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,292:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,341:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,364:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:59:24,392:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,392:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,413:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,467:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:59:24,470:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:59:24,472:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,514:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,515:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:24,540:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:59:24,591:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:26,927:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:26,976:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:26,994:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-10 10:59:27,027:WARNING:c:\Users\Mario T\anaconda3\envs\Proyecto_final\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to '>50K') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-10 10:59:27,086:INFO:Calculating mean and std
2023-12-10 10:59:27,086:INFO:Creating metrics dataframe
2023-12-10 10:59:27,096:INFO:Uploading results into container
2023-12-10 10:59:27,096:INFO:Uploading model into container now
2023-12-10 10:59:27,096:INFO:_master_model_container: 14
2023-12-10 10:59:27,096:INFO:_display_container: 2
2023-12-10 10:59:27,096:INFO:DummyClassifier(constant=None, random_state=2023, strategy='prior')
2023-12-10 10:59:27,096:INFO:create_model() successfully completed......................................
2023-12-10 10:59:27,399:INFO:SubProcess create_model() end ==================================
2023-12-10 10:59:27,400:INFO:Creating metrics dataframe
2023-12-10 10:59:27,428:INFO:Initializing create_model()
2023-12-10 10:59:27,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=2, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:59:27,428:INFO:Checking exceptions
2023-12-10 10:59:27,428:INFO:Importing libraries
2023-12-10 10:59:27,428:INFO:Copying training dataset
2023-12-10 10:59:27,446:INFO:Defining folds
2023-12-10 10:59:27,446:INFO:Declaring metric variables
2023-12-10 10:59:27,446:INFO:Importing untrained model
2023-12-10 10:59:27,446:INFO:Declaring custom model
2023-12-10 10:59:27,446:INFO:Gradient Boosting Classifier Imported successfully
2023-12-10 10:59:27,460:INFO:Cross validation set to False
2023-12-10 10:59:27,460:INFO:Fitting Model
2023-12-10 10:59:51,702:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-10 10:59:51,702:INFO:create_model() successfully completed......................................
2023-12-10 10:59:52,002:INFO:_master_model_container: 14
2023-12-10 10:59:52,002:INFO:_display_container: 2
2023-12-10 10:59:52,002:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-10 10:59:52,002:INFO:compare_models() successfully completed......................................
2023-12-10 10:59:52,037:INFO:Initializing finalize_model()
2023-12-10 10:59:52,051:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-10 10:59:52,052:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:59:52,060:INFO:Initializing create_model()
2023-12-10 10:59:52,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:59:52,060:INFO:Checking exceptions
2023-12-10 10:59:52,060:INFO:Importing libraries
2023-12-10 10:59:52,060:INFO:Copying training dataset
2023-12-10 10:59:52,060:INFO:Defining folds
2023-12-10 10:59:52,060:INFO:Declaring metric variables
2023-12-10 10:59:52,060:INFO:Importing untrained model
2023-12-10 10:59:52,060:INFO:Declaring custom model
2023-12-10 10:59:52,068:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:59:52,078:INFO:Cross validation set to False
2023-12-10 10:59:52,078:INFO:Fitting Model
2023-12-10 10:59:57,251:INFO:[LightGBM] [Info] Number of positive: 29748, number of negative: 29674
2023-12-10 10:59:57,291:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.020142 seconds.
2023-12-10 10:59:57,291:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-10 10:59:57,291:INFO:[LightGBM] [Info] Total Bins 12849
2023-12-10 10:59:57,291:INFO:[LightGBM] [Info] Number of data points in the train set: 59422, number of used features: 65
2023-12-10 10:59:57,291:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500623 -> initscore=0.002491
2023-12-10 10:59:57,291:INFO:[LightGBM] [Info] Start training from score 0.002491
2023-12-10 10:59:58,380:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-10 10:59:58,380:INFO:create_model() successfully completed......................................
2023-12-10 10:59:58,630:INFO:_master_model_container: 14
2023-12-10 10:59:58,630:INFO:_display_container: 2
2023-12-10 10:59:58,661:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-10 10:59:58,661:INFO:finalize_model() successfully completed......................................
2023-12-10 10:59:59,163:INFO:Initializing finalize_model()
2023-12-10 10:59:59,163:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-10 10:59:59,163:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-10 10:59:59,185:INFO:Initializing create_model()
2023-12-10 10:59:59,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2023, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 10:59:59,185:INFO:Checking exceptions
2023-12-10 10:59:59,189:INFO:Importing libraries
2023-12-10 10:59:59,189:INFO:Copying training dataset
2023-12-10 10:59:59,189:INFO:Defining folds
2023-12-10 10:59:59,190:INFO:Declaring metric variables
2023-12-10 10:59:59,190:INFO:Importing untrained model
2023-12-10 10:59:59,190:INFO:Declaring custom model
2023-12-10 10:59:59,192:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-10 10:59:59,202:INFO:Cross validation set to False
2023-12-10 10:59:59,202:INFO:Fitting Model
2023-12-10 11:00:06,084:INFO:[LightGBM] [Info] Number of positive: 29748, number of negative: 29674
2023-12-10 11:00:06,408:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.187015 seconds.
2023-12-10 11:00:06,408:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-12-10 11:00:06,409:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-12-10 11:00:06,409:INFO:[LightGBM] [Info] Total Bins 12849
2023-12-10 11:00:06,412:INFO:[LightGBM] [Info] Number of data points in the train set: 59422, number of used features: 65
2023-12-10 11:00:06,413:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500623 -> initscore=0.002491
2023-12-10 11:00:06,413:INFO:[LightGBM] [Info] Start training from score 0.002491
2023-12-10 11:00:08,319:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-10 11:00:08,319:INFO:create_model() successfully completed......................................
2023-12-10 11:00:08,770:INFO:_master_model_container: 14
2023-12-10 11:00:08,771:INFO:_display_container: 2
2023-12-10 11:00:08,807:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-10 11:00:08,807:INFO:finalize_model() successfully completed......................................
2023-12-10 11:00:09,267:INFO:Initializing finalize_model()
2023-12-10 11:00:09,267:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-12-10 11:00:09,267:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-10 11:00:09,288:INFO:Initializing create_model()
2023-12-10 11:00:09,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C19295790>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2023, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2023-12-10 11:00:09,288:INFO:Checking exceptions
2023-12-10 11:00:09,291:INFO:Importing libraries
2023-12-10 11:00:09,292:INFO:Copying training dataset
2023-12-10 11:00:09,292:INFO:Defining folds
2023-12-10 11:00:09,292:INFO:Declaring metric variables
2023-12-10 11:00:09,293:INFO:Importing untrained model
2023-12-10 11:00:09,293:INFO:Declaring custom model
2023-12-10 11:00:09,294:INFO:Gradient Boosting Classifier Imported successfully
2023-12-10 11:00:09,304:INFO:Cross validation set to False
2023-12-10 11:00:09,304:INFO:Fitting Model
2023-12-10 11:00:46,090:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2023, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-10 11:00:46,090:INFO:create_model() successfully completed......................................
2023-12-10 11:00:46,339:INFO:_master_model_container: 14
2023-12-10 11:00:46,339:INFO:_display_container: 2
2023-12-10 11:00:46,373:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2023, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-10 11:00:46,373:INFO:finalize_model() successfully completed......................................
2023-12-10 11:00:46,893:INFO:Initializing save_model()
2023-12-10 11:00:46,893:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-10 11:00:46,893:INFO:Adding model into prep_pipe
2023-12-10 11:00:46,893:WARNING:Only Model saved as it was a pipeline.
2023-12-10 11:00:46,943:INFO:models/model_exp1.pkl saved in current working directory
2023-12-10 11:00:47,023:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-10 11:00:47,024:INFO:save_model() successfully completed......................................
2023-12-10 11:00:47,444:INFO:Initializing save_model()
2023-12-10 11:00:47,444:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=models/model_exp2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-10 11:00:47,444:INFO:Adding model into prep_pipe
2023-12-10 11:00:47,444:WARNING:Only Model saved as it was a pipeline.
2023-12-10 11:00:47,490:INFO:models/model_exp2.pkl saved in current working directory
2023-12-10 11:00:47,559:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=2023, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-12-10 11:00:47,559:INFO:save_model() successfully completed......................................
2023-12-10 11:00:47,980:INFO:Initializing save_model()
2023-12-10 11:00:47,980:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2023, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=models/model_exp3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARIOT~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNI...
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=QuantileTransformer(copy=True,
                                                                    ignore_implicit_zeros=False,
                                                                    n_quantiles=1000,
                                                                    output_distribution='normal',
                                                                    random_state=2023,
                                                                    subsample=10000))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-10 11:00:47,980:INFO:Adding model into prep_pipe
2023-12-10 11:00:47,980:WARNING:Only Model saved as it was a pipeline.
2023-12-10 11:00:48,011:INFO:models/model_exp3.pkl saved in current working directory
2023-12-10 11:00:48,044:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=KNNImputer(add_indicator=False,
                                                           copy=True,
                                                           keep_e...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2023, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-12-10 11:00:48,044:INFO:save_model() successfully completed......................................
